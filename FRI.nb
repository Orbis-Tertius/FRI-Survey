(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    318850,       6414]
NotebookOptionsPosition[    312588,       6210]
NotebookOutlinePosition[    312927,       6225]
CellTagsIndexPosition[    312884,       6222]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Code", "Section",
 CellChangeTimes->{{3.866539238089381*^9, 3.866539238872842*^9}}],

Cell[CellGroupData[{

Cell["Soundness error formulas", "Subsection",
 CellChangeTimes->{{3.86653417465283*^9, 3.8665341925644083`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "@", "soundnessErrorCommit"}], ";"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Soundness", " ", "error", " ", "of", " ", "the", " ", "commit", " ", 
     "phase", " ", "of", " ", "FRI"}], ",", " ", 
    RowBox[{"using", " ", "algebraic", " ", 
     RowBox[{"batching", "."}]}]}], " ", "\n", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"soundnessErrorCommit", "[", 
   RowBox[{"bitsField_", ",", " ", "bitsDomain_", ",", "bitsRate_", ",", 
    RowBox[{"arities_:", "List"}], ",", " ", "numPolys_", ",", "m_"}], "]"}], 
  ":=", " ", 
  RowBox[{"Module", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", 
     RowBox[{
      RowBox[{"rho", " ", "=", " ", 
       RowBox[{"2", "^", 
        RowBox[{"(", 
         RowBox[{"-", "bitsRate"}], ")"}]}]}], ",", "\n", 
      RowBox[{"domain", " ", "=", " ", 
       RowBox[{"2", "^", "bitsDomain"}]}], ",", "\n", 
      RowBox[{"fieldSize", " ", "=", " ", 
       RowBox[{"2", "^", "bitsField"}]}]}], "\n", "}"}], ",", "\n", "\t", 
    "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{"2", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"numPolys", " ", "-", " ", 
            RowBox[{"1", "/", "2"}]}], ")"}], "*", 
          RowBox[{"domain", "^", "2"}], " ", "*", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"m", "+", 
              RowBox[{"1", "/", "2"}]}], ")"}], "^", "7"}], "/", "2"}], " ", 
          "*", " ", 
          RowBox[{"rho", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "/", "2"}], ")"}]}], " ", "*", " ", 
          RowBox[{"1", "/", "3"}]}], "  ", "+", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "m"}], "+", "1"}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{"domain", "+", "1"}], ")"}], "*", 
          RowBox[{"rho", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "/", "2"}], ")"}]}], "*", 
          RowBox[{"Total", "[", 
           RowBox[{"2", "^", "arities"}], "]"}]}]}]}], "]"}], "\n", "\t\t", 
      "-", " ", "bitsField"}], " ", "//", "N"}]}], "\n", "]"}]}]}], "Code",
 CellChangeTimes->{{3.86653195160083*^9, 3.8665320783645163`*^9}, {
   3.8665321716305523`*^9, 3.866532176573702*^9}, 3.866532215413279*^9, 
   3.8665342333384666`*^9, {3.8734309657126503`*^9, 3.8734310315438137`*^9}, {
   3.8734310918683653`*^9, 3.873431092189464*^9}, {3.873431234656515*^9, 
   3.873431245995492*^9}, {3.873948675168099*^9, 3.873948677393237*^9}, {
   3.87394936993943*^9, 3.873949402900338*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "the", " ", "soundness", " ", "error", " ", "is", " ", "increasing", " ", 
    "in", " ", "m"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"bitsSec", "=", "74"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bitsField", " ", "=", " ", 
     RowBox[{"3", "*", "64"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bitsRate", "=", "3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bitsDomain", "=", " ", 
     RowBox[{"15", "+", "bitsRate"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"arities", " ", "=", 
     RowBox[{"{", 
      RowBox[{"5", ",", "4", ",", "1"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numPolys", "=", "100"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"DiscretePlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"soundnessErrorCommit", "[", 
      RowBox[{
      "bitsField", ",", "bitsDomain", ",", "bitsRate", ",", "arities", ",", 
       "numPolys", ",", "m"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"m", ",", "3", ",", "5000"}], "}"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.866532318360548*^9, 3.866532335775957*^9}, {
   3.866532369118805*^9, 3.86653237109083*^9}, {3.866532412983536*^9, 
   3.866532455623713*^9}, {3.873431080012514*^9, 3.873431100167885*^9}, 
   3.873431334915249*^9}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.24720000000000014`, 0.24, 0.6], 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], 
     PolygonBox[CompressedData["
1:eJw013lYzI/+BfAQkiL7TghJyB7CsWdPWZJQCkmr9n3f92mmZqYZQghRCJEv
SbZsyU6ohBBCSKLf3Oc35/5zn9dTn95z5nyO597Bm51Nt7RWUVGxG66i8r//
HtLa4OEUm9VQibEeZSlfV6Tyv/8Er8bPN7/qmiRKF62G/94NXRIESquswY4d
SeUT45TGGpztPyX/axifX4MPu4bOvOzP59egZE7f5mwPPr8WH/cfDtjrxOfX
YvdP1TW52/j8Wjx2Lu9314rPr0XR+87bW1nweXO4bfjwbL4ZnzdHg5G8i2wp
nzfH1VDTvDYL+Lw5QjeqbvCfxefXQbLFqqjtVD6/DpPG5UTsHs/n1+G22RGL
Rfp8fh3mCiK/tB7O5y3QY3n+z5uD+LwFGjtV62T14fMWuNvvlUFcNz5vAWG3
6PvBmnx+PUZ5n7wW3p7Pr8e+AYNK01rx+fWIc90oOf3HXPm84ueJN368/qG0
iiV+dXHcM7BeaVii/8GmTVs/KB1siR+zz/08V8PnLVHZ7Kff/xWf34AaQeyN
mKd8fgOuOO5Kb/OAz29AIu5Zx9zh8xuwfYSgoe8NPr8RYxZIBxRc5vMbYfqq
6ojVBT6/EWYvRM7dz/L5jWi5rjnt/kk+v0nx94pfyI7x+U1wnTZ3jOshPr8J
SwcZqJhk8flNSFgwZuTU3XzeCgGzq4L0pUprW+FSZfXzkSL+PSsczyzsMS5Z
aSsrSDY9bzcnjn/fCkUWghjLSKUzrfDSSd0nOIT3rKAuwfGj/kpXWmHmqX+d
arx43xqlXg+dh7rxvjVadvU8scOJ961RbHE3//x23rfGgXfFa3tu4X1rrFy/
xc/bivetMSTzkcrr9bxvjda7XtxYvZb3rRX9vy4oM+X9zRjm9yXPbDnvb8au
qj2il4t4fzPuBhsscZ3P+5thbbz5dMfZvL8Z6x3izh814v3NmCKNmbvWkPc3
w2F50Ti1iby/Gd+MezgVjeV9GxQO+vQqaBTv2+DCpxHOC0bwvg0ODRio2n0o
79ug7Qp5VO1A3rfBs1Vvqi/35X0b3F66v2V/T963wYvbjdcSu/K+Dc6O3jI8
sBPv20Kt4lFbd3Xet4W0fNdKl3a8b4uPfVx+7GzN+7boab3hhd+/tcr7tpBl
P/oR26R0pi2MWg6MyvypdJHCJt92FH5TutIWSXMmZFV8VlplC4bqTi1u81Fp
7S141Tws3+Cd0tiCXHcHO5vXSlttwcjed25nvOL9LZjuvO7+0+e8vwXrp9rZ
DXjC+1vw7YTcf+sD3t+CBe9qWvLLeH8rznVyrla7zftbcaXxePfNN3h/K7aE
bI0qusL7WxHaJWqUTjHvb0UnveXf4i/w/lbY/p54u+kc72+FtOnrUcczvL8V
8bu8It+c5P1tGPTvm/HmPN7fhnRR6bvXOby/DQfV5KvtD/H+Nnz+PCvix37e
34as7AvbI/by/jZMnb7uZ5/dvL8NKZPCBp7M4P1t+C+j+qGJmPft8Ojpcq3v
Qt63w9v/7l6SpPC+HXy8ZS/nJfK+He7t67u+IZb37WCz8sWo7Cjet0PEgKz5
VuG8b4duiyzk/UN43w5Pn/TQfRHA+9shP9fz+R5f3t+OjC9Xjth78f52LDqf
nzTFnfe3Y/6LDH81V97fDv1LFnYvHHl/O9Zc+2l82p73t2NqmLR76jbe3w5r
VdElN1vet8edIesWmFvzvj2y7/pLsJH37dHVvuC4/nret0fv3m8j+pvzvj3C
h7bS1FrN+/YQWAyb2d6U9+2x3D1Rq/UK3rdHlne6n8pS3t+BV6POebZexPs7
cDAg8Xf7Bby/Awv/3PijNZf3d2D0/FkeA8D7O5AV9WLD6Bm8vwNBP3OPYhrv
78DDJS8s107h/R3YveigjetE3neAzkz7c4njeN8Bw+Nk63LH8L4DCsfemXp/
FO87oHhVtlmTLu874Nnzut06w3nfAZX1Hr1Mh/K+A4rkk06GavO+A45aTXI4
PYD3HSErEU3/1Jf3HfH9T0LfEb153xFbAna0tu3B+474sTelbl9X3nfEl8U+
5W87874jmnzzjupr8r4jurR95uWhzvuOsB9zVO9Se953goH5j4ud2/K+E7oc
Thln3Zr3nZB2wd3nVMsa5X0n6K7MStH4q3SwE+58MnTf2qR0phOi9m7od/mX
0kVOmHViRciQH0pXOmHloo2Z4d+UVnFGxoQPO99/UVrbGX9Tt3w3+aQ0nGEi
N+tf+IH3nXF/qXHtiFred8b7YbUr09/wvjOmfnln1uE17ztjqKvG+4BK3neG
6yQ9jR8veN8Fq42HFTg9V1rLBbub6t99eMLP44JB+5PStj9S2sAFsxy7Xvxw
n5/PBTnqEkune0qbuGBa4kr7hjv8vC64MtL7tf8tpV1cMPH3msvtS/n5XRBw
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
bW1o41Toa5jVV7xWemkq7h4V/lxDm6RCTTOt971qpVelIuXokjVLaPNUzO17
OPdKldKWqej+Zr8OaCvF93NwwqlzlUrbpmK+irH1JNouFRXpj3XzXintkIrv
/R53HEW7pOLo7OnqB14q7Z4K7SuNQwfT3qlYtV11newF958Ko0bTQ73o4FSc
nvO0e2oF958KP+34jE50dCoGu1jNiH3O/aeiR68lTW3p5FQkt5pdHvKM+0+F
ZMiUK3+fcv+paHQbct+HlqXC8OevPz+ecP+K38/LmbWTzkpFt+OTdn1+zP2n
YolGdK8ddE4qEl+Ij7x7xP0r3scFGyxs6XzF++hSOrTqIfefCt3Yh+030udT
MeyGW7vnD7j/VLzeLh1kTpco3s/cmWYP73P/qfCsXr3HlL6VCh+zhx3Kyrl/
RX7zE/HL6AepCFpePfLmPe5f8ftiiypjuiIV/TK1Tl4t4/5Tsfnh713z6JpU
nDzWcX/xXe4/FVezp18BXZeKwwuCWi7c4f5TcbHLLbMZdEMq8iS9igtvc/+p
cHBfu3ga3ZyKETND6gpucf9CLJHEZk+hVYUIHLM98PRN7l8IYU5Xp0m0hhCC
6/5e+aXcvxB7ZsilE+juQnS9vf3xiRvcvxArZj4ZPZ7uL8SLjS/lx69z/0Ks
b71zxDhaRwin1jGlede4fyFuz+wTZUDrCzFR3ntD3lXuXwirDgFLDeiJQrTz
MFqdd4X7V9x7vNTLgDYSInxs1om8Eu5fiJQgw/bj6HlCBNxrcT9+mfsXImdi
/Z9x9FLFvQstGSeKuX8hTsXorJ5ArxJi75lVI/Ivcf9CfHCK7DqJthRCtyK3
5+ki7l+IM+OuTZhC2wpx4WDx9oKL3L8QA/zFBVNpByG8v83ULrzA/QsxbFVO
phHtLoRB/aOpF/7j/hXff79TH2fR/orPM3bG6UvnuX8h2iRukcylwxXvQ4aO
6Eoh9y9E68suhxbS8UJoeuLRjXPcvxAVerH9ltJCIdw2zPO5c5b7F8I6acsX
E1omROHCmoD7Bdy/EH26ndFZQ2cJIQp78PrJGe5fiPMGEwrX0zlCSM/cOPzy
NPcvxIFziSes6XwhrlV5l9ec4v4V+Z8FqtvR54X4vibd4mM+9y/Ezc5ni53o
EiGMi5/N+XaS+xdi+rjvzzzoW0Jc0vkd+/sE9y+Eqf1r0wD6gRAHH2SPb0U/
Ufz96dCLOM79C6EWkDm1A10pRJ1vkVVCHvcvxMwB6bu70LVC/DPp91OUy/0L
YaM2z7YvXS9E+TS1D7uOcf9CvKzZGDWUbhRittoso+yj3L8QT4/sVhtNq4hw
8LlX3fEc7l+E69kX3k2m1URwHbmjqfAI9y/CJ293ndm0lgiiM/e2XD3M/Yvw
SN33whK6twiD5LZj7h3i/kWolUefWkNri3Bk9guzimzuX4TqS+s6bKZ1RWi2
/PHw3UHuXwSbNQfPOtIGis/3c2v+9wPcv8Kxo6760IYiSG3rPrfs5/5FaFeR
OSaShghnliJCg54nQlKv4m+CLO5fhKV7B3j1oZeKELZ2cdfMfdy/CHsOzCoZ
Tq8S4XWbH/FH93L/IqyptXaYSFuKcPtewObCPdy/CO/mwHkObStS7C1TcCOT
+xdhzsu0Wya0gwgBw/oOeLKb+xdhyZgh4ZtodxF+Cg60ereL+xfB69sukRPt
L4J3fWv8lHP/IiyfVKoSSIeL8N2x7nFbOloE1aXWVxJk3L8IJRHaN3rQySKo
Pxr8Wp7B/Sv+XrNlt+G0WISM8zfWHZNy/4rv99Wm05PpTBHMxvcaeVHC/YuQ
Ffnu+EI6W4TiE9dNysTcvwg7U060XUfnifCvlbysKp37F0GvNui4PV0gwlR9
s+zvady/CG/OdTrlTxeJsD7i8OO2dIkIRiEDtZJE3L8IqdmbN/amb4nw7LdT
8R4h9y9Cvdd0o1H0AxH66BXdzE/l/kVo6vfDZSZdIUL6hvJR1wXcv6K/NibN
K+kaEe4M21r9PIX7F2FEtcbLLXSdCCfXGX35ksz9i9D3RF0PX7pBhBU9epqq
0o2K7/t43r7EJO5fhLVn89X70Cpp2GHTN2pfIvefhtIPT3uPodXSkJf48WJB
AvefhhTBQv+5tFYaesx8u+xOPPefhp4vLk5cR/dOQ+bFWwY1cdx/Gj5ObTvH
mdZOg1mWtV1TLPefhk3rn+2LoHXTUHBxW4MWrZ+GEZNbW8hiuH/F5xmx98EI
emIaGlVgezKa+0+D64QHarNoI8XzE9cWl0Zx/2mw8L+UvIael4bVMR3dqyO5
/zQ4Vox2cKKXpkH1j7ZPUwT3nwZ/pxfSSHpVGmaVrL/XlTZPw6kEYf/d4dx/
GuZaBfuPoq3SYPyw19czYdx/GvrGmvnOo+3S0F5bv/e9UO4/DYuNpKUbaJc0
aEWnpXwI4f7T4JLXx9GL9lZ8/q39N6jS/mmo25hunRLM/afhP9Mw34F0eBri
/j05eCSI+09D1ZCU94Z0fBqGhWfNuhrI/adB/KHjYTNamIYVQ4p0qwK4/zSM
/3O20ImWpeGP8bfNzf7cv+Lnr60HxtJZadDd3+pzLzo7Db8dS+/t9+P+0xCt
ferGBDovDZ77zj285Mv9p2FU1f0fK+iCNFy/9nvkSx/uPw36i4btdKCL0vDJ
YsWdJm/uPw3rfrrMjKGvK96f3mHFvehbaai5FGhxwIv7T0O3X5btJtEP0qBe
1PPqZU/uX/F+6O6XmNIVaSiZ1SqkyoP7T0N1bx1/F7omDR6l7eJa3Ll/RT9O
e48m0nVpSB9a/3oAXZ8GL/X3o4+6cf9pcDCOjDOiG9PQvd2l5ps7uf80ZDsL
QtbTKumozf/e56Mr95+OkR1eXvGl1dIxb9/iCHVaIx17/xtvLnXh/tOhl5Y0
U4/uno7lThaG55y5/3T8iY2fv5jun459EwdtfebE/adjzJmOUntaJx2tNi+p
anLk/tPxO+rx9DhaPx3bgw4d6kcbpKPL3nN6OQ7cfzp0l6leNKIN02FaFbT1
9g7uPx3S4uGDN9JIh4/5t8+f7bn/dNzRrLgbRBun46nJi8ta9NJ0zE79Urpn
O/efjg6LNd6Mp1elQ/xJv2uJHfefjuzfi01X05bpWPlp0/6327j/dKgs2dLR
m7ZNh7d4VXgH2k7xeTaO0MrYyv2nw1bv8TF92iUddbEbrC5s4f7TsaVbvo4J
7Z2ObhYP/lTZcv/pCG8888aNDk5HTJx5dVs6PB2GJ3O/pttw/+mo6Xqmmx4d
nw7tlXbG5zdz/+k41+u/pOW0UOFuue8rrbn/dGz8MWWNGy1LR1+XlQ/b0pmK
Pqb92Cq24v7TcbzTgI6j6Ox02B0qvvTfJu4/HT9LX8Wa0HnpyJ/stPX1Ru4/
Hfont63ypAvS0VH96qoO9Pl0DFIL2ybbwP2nwzJAHD+WLknHYyOVkmJL7j8d
F/rna66hb6Vjw8+j29+v5/7T0efAu8f+9IN0OHdcb65FP0nHd7XWH/dZcP/p
WBL+KGkKXZmOUVvLF9xcx/0rPo/0S+dNdK3i++is+/GbOfefjnYFHk8i6fp0
LIguf9yXblA87234/tha7j8ds8L2aMylm9Px5kD7OY/XcP9izKuxjdlBq4qx
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
G05IOP8ZaLuhQnwU/S4DLyYVJzSjP2agenHZlsu7Of8ZiE5vaVhM/8jAp89z
LjvT5RkYNfXx9/vpnH8p/MOndlxPV5IicX7FWR50FSkMtQ4eev2f2dWk6Ktc
bLGDriHFhaMjp/vSFlJkX+te8HUX7wspoia19VbRllLgdYvcANpKisiSFj5V
aBspHN+0unVgJ+8TKeLD2kdNpRtKset5J5t6tK0UIUWd806lmd1EihMf2i+c
S9tJsTbR3tORtpdiUc9q1W7s4P0jniex8OFK2lGK6H/6o11oJyk2OU1VPdtu
dmspKsdX27mZbitFK13q9r60sxRdHKpKPm3jfSXF8Njxe2S0ixQpPbZcHEF3
lqLkh+5DRdpVit4+u+33b+V9Jj5vjBgTQrtLcf1U3V02tIf4eZPEV6e2mO0p
xSDfu17zaC8pmj4sS29J95aielRhtVupvP+kcN+2Iy6e9pbi4OtGP9xoHynm
/pm0/OVms32l6DM7wmo77SfFjTvdDb70ICnOXD0z7HsK70spkj5b/tXQQ6VI
eFLv0Fh6uBQfO11fUJMeKcXzeJ9+OZt4n0oxbslM25l0oBRuh/p9b0qPlcLl
5sWnl5PNDpLiaczf60vpCVLx/9FHV1zoSVI4X59y8+lG3r9SDLuZ9DyFDhHn
+03Q7750qBTvsy80+5JkdrgUzd/cGaikp0uxuMWK5aPpCHFeLU7nVqMjpdgx
ZHf17A1mR4n93lo7aAYdLc7XBstDTei5Usx5LG16OZH3uRSB3U8mLqVjpXjg
O6tyJ3qhFPNy5GsK15sdJ85v38nWqfQSKb5vkKr70cukqDY4tP/Xdbz/pZjd
WfteTa8S61c6I2MsHS/FnR6aIAs6QQr92YnNj61lH6RYN2DD+1l0ovj++R3P
NqeTpOhezVt9PcHsZLH/+/JTVtMpUjzsdCS+G50qfu7ZaNXrNeyJFLoNT9bt
pLdL4fWk9s7BdJqYx9KM/X/izd4lxX8Ltt3eQ6dLMcvjbcUQWiLOd6mke31a
KsXycZmx+avNlkuh9Wh0YiGtFM/nf9eqPa2WYuuYdzMfr2KfpGjWNKBgE60X
+xlUu7c3bRTzet/mYNlKszOlSJsY1k1D75VimqHiiXH0fik2rH85ojadJe7D
E5aluSvMPiSFTf3FW+bQ2VLUG9HW24nOkULWp/6vO8vZOylq6r2OrqdzpZg8
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
NU3fL6e3qlDTs0dVH3q7Cp3uvXCsQaeJ8z6uie/lB+y/Cu0OPYxKodNVmFXc
encALVFB/eZXgS0tVeHUgUCLx/fZfxV+oMdAGa1U4dwG2cYwWi1+npx8tx2t
Fevd/1/r0nvsvwq1DJ8X76eN4vzlTLsTS2f+b34nuvek96pw5cKN//7dZf9V
WHUyv9oZOkt8X4DHgnX0IbHfK1u/96ezVVjfL2W6NZ2jwsadMW9u32H/VbBf
eWP2LjpXhak/tL8n0XkqnP/zLaklfUqcr5SjLYtvs/9i/TO/njDS+eK+HaOc
Moc+r8KtxPwa7vRFFUr9xh/8dYv9V2HN5inTTtBXxf6G3rOPpwvEfX8696Ef
fUOF7nvqSerQt8Tzt70TduMm+y/Wt3PVrjvoeyocO59RdQL9QAWXMuVjB/qR
Coasekdf3mD/xe/XfrtbTxeK9fzXLmE2/VyFtpuuzXOji1T4duJB+M/r7L8K
XtsGTc6li8Xz29hPXE2XqGDbKyDYj36ngp/tu+l16FLx93VFsTcK2H9xn5R5
Je6gP4ufVyiTT6DLRF+v1zjZgv4m7u9ZcUWvrrH/Ksx/MKCOkf6lQlDz6J5z
6HKx396fo9zpvyrMGHRF8/sq+6/G2t4VXuXRldSwb53YLoGuokZBjYi5g+lq
4vdLJXlWdA01Zj1tU//OFfZfjdIXlWf9R9dW42QV10vBtKUatwftc2lNW6kx
/cSKHW8vs/9qfJmZUXUfXV8Nt6Dai2Lphmp02Jr/qSdtq4aD05XZFekmaqTV
b/4l/xL7r8aE6KOLk2h7NRZ4y2qOpB3U6LH9Wnoj2lEN1wX9uz2+yP6r0e1T
xZtyurUa46yqxE6n26rxqXCQvQvtrMZ/s29f+nKB/VfD5YJ82RHaRY2Lv/a5
L6c7q3HJulKZD+2qxo2mqYcsaDexfq2nLCs4z/6rkYOowdtpDzVaLMxuNoH2
VEPysPfXFrSXGvXjKtx4fY79VyMzpPyAiYYaN5Vd/ptHe6vRfnjG2h60jxry
GJ9F//LZfzXCHB2iz9J+ajyc0SVyAz1IjQPjF8waQfurca/Gp3mN6KFqLFy1
e/njs+y/Gv/uL05R0CPVaNxig3oGHaDGwRkXT3aiA8Xvn/V4/vUM+69GqN/t
6sfoIDVSK2e4rqInqDHXYluIHz1J7Gf0oR2WdLAa3n6Vbtw6zf6r0V+9wPo/
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
LtrG/mvhoonusoe20OJ8u7UzF9G1tTiS1lDfj7bUIr2b/fs6tJUWvb13u93b
yv5rsavClhVyur4Wj/f/LYikG2ox5b+nrbrTtlrsK3dbXpFuosWqxn8fXdrC
/mtxws2zz3baXotlm4tVwbSDFtXm1bBuTztqcdlu54qvqey/eP8bO8tO0K21
uHq35qxEuq0WT6KL3wTQzlrceuY2szndQQvL2aUf32xm/7VoMrH+4iy6s3j+
j6qay2lXLU5GydMH0m5aBNvVdKtPu2txp/f9a09S2H8tdjS1idbRnloM+LG/
fgztpUV2k6PHe9O9tXhzvt3MmjS0qDHwr92tTey/FrOfdb8poX200N+7vXEG
7St+Pv+uvxvtp4X8b0+rf8nsvxaBRyvdu0D7a3Hls7NyKz1Ui/nvDsRMpodr
UfwhfaAzPVKLjz4vHb9uZP+1WN01qUIeHahFfuXNzxPpsVpY/P18fjQdJPYv
Yt8BB3qCOH+pl+Rvk9h/8T652H6IDtZC2d0qeSUdosUD3x6J/nSoFpndjiY2
osPF54ds2/R8A/uvxfp7+WkmOkKLLg7D1AvpSC0ORnXM7kdHifWxnHLVko4W
53Hgm+L7iey/FpcizlZX0TFa/DlW5hxNx4r33RA7sie9UJwvh0HLqtFxWgSc
i8q8vp79F993+cXzdHqZFgfitE2n0yu06GV/bGxXepVY/0r2u/6uY/+FY648
vUAnaLE970K7bfQ6LSa52iwMphO1KGuovtieTtKi09H4Ft/Xsv9a1I80LTlF
p2hRENv80UY6VYvctg/6jKO3ajH12iONE71di7nZret/TGD/xX3T5XD8UXqX
FlHrN/5MoNPFfNTRzR1JS8R5rV3zYzNaKubxtnHOmzXsv9ivg1u+Z9FKsZ5/
jq1cQau1qPy7jZU/rdXi15+b8ka0Xoudo/N6vIhn/7WIHvHuViadqYVb3zEx
cfReLS7GVLD1pfeL+9Dr9QlrOkuch9cWkY9Xs/9ivc5F2OnobC2edqh2PYbO
0cI47dF60Me0sL/wzrc2natFH7l7jXur2H8tBvocuaKgT4n7uULMjtn0GTFv
bcPDetL5Wiy23NS9On1eC2nl0jo3V7L/WngFrSqW0Je1SAgdfC6CvqrFwxg/
vTtdIP7+44WbK9E3tPj96eGSqyvYfy1GVZkTuYu+o8W9ad2Dw+l7WuTMdhnr
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
VaYq+2FF/dtXDQ/Q51HwdMTXYu9MlTIoa6eXeFCmcllxoOavK4Z9MlXatdoj
NomH6vUmJVu8xb6ZKtVmXvMnv8r8z1RJq7cs+Vbsr+Mxo85jX3FApgqzPjj5
ebHMfx3/nftu7RGP0p9v/3P8SHFQprIdMumP2uIxOt7P2s8w/yLzX+//vw4v
x4nHZ6oE8/TEhuIJmap60uNOhy7L/M9U6eE/FISKQ3S+tjkabi8OzVQlRbWa
nbwk8z9TOV6Jy58lnqbzL+6jqFbi8Ew1wX3gB+eLZP5nqor3Fz2KEkfoeJQ8
sXQQz9H1sHjnwuKLMv91PBasHbJUPE/Hu022o7s4KlNZ5dv989sFmf+63o7t
vrxGHJ2pvEMjD/QSx2QqN7svt939Wea/9ls5qzeIl+p8OO28aKA4Tufr4nOR
jwtl/meqiA1ps78Vx+v1TrB88bF4ta7PHn8veHFe5r8+r5mhK78Xr81UkZ83
3PypOFHHd/LvmXXE63Q9XL57PvuczH8db6vWDz4Xb9TrG7TsLTtxcqaq+a9Z
v2NnZf5nqrxFJbPCxSn6fa1/2tVCvF3b83ZZQYHM/0zl5dyp7XzxDh2v3ltD
3xWn6fz/pWfWLz/J/M9URT6vrJaK03U8nzwY6S7eq/tF57rmm2dk/ut6Hjqo
yVdiU6by37v/iz5is45/Wp/f/jot818/75tHw5LFOXq/hQXHB4kP6udnnvH8
J1/mv87PdRUHd4oP63wveq93gDgvUxXnbzhpJT6WqeIL2vhnnpL5r+ulx/nb
48QndT5M3bTAVpyvn39kWfMjJ2X+6/2v/PrQVHFBporudHiCg/icPt8XtRv9
9KPMfz0fgqYemyu+oPvDtspIZ3GR/n77BPdfTsj81/EfPPjxEnGx/v7kVj+4
i6/oeXS10dJbx2X+63p+0Txgrfi6fp5bn44fikt1/M7Mq1V5TOa/Pv8O58q2
iMsyVdUej9NDxLd1PaUfMNUclfmv83uZ77Y94ju6/jbWJI4SV+h59eGhVXXE
93T9XflqZU6ezH+9/uNzV08SP9TnOyJiXVNxlV5fVfS3Px6R+a/Pq3pLVoS4
OlMlHz1b0Eb8VNdDus2fFw7L/P9f/X5aN0b8XMd7bI7be+KXul7L2gSVHpL5
r7//Ojl+jdjKrIKatTnWW1zLrCbEZdX8lWu4tlkV7BnuuVn8hll53aqJ9hFb
m1Xsqowzz34wXMesoupMe3uPuK5ZuVncp44S1zOrnIevf6wjtjEr/xZX2xw4
aLi+fn/SgaUh4gZmFZy35d5b4oZmVfp4+aenDhi2Nev75Lyzc8SNzCrEOly1
Ezc2K4/vJuddyjHcxKzsz0/8cInYTn9+e+Ipd/GbZlU+aLJfWbbhpmaVMHrq
za/Fb5mVecHML/qJ7c2qpkFko0cWw2+blcv0LzO2i5uZldPLRf5+4uZ6/a2X
/PtflmEHs4r2WLpnv/gds/LcHjtmnLiFWYUdXdi0kbilPu+/51zMMxt2NCu7
HZO/CRe3Mqsi1xFBjuLWZhX3qLdzYabhNmblGOD4z0Kxk1ml5Dw911nc1qzc
vzy764bJcDt9XrWTlq8RtzerjKyR0/qInXW87zUKvL/f8LtmZdskb8BWcQd9
Hks/6zFM3FHHa/ezLi8yDLvo/Lu1zG2fuJNZRX79xvtjxa5m5dBiXo+G4s46
HrevDziyz7CbPi/fDwKni98zq7TDUdNairuYVcQ35uXn9xp+36wCPUp2LRS7
6/3We3Sus/gDHc8Z1dU3vjfc1azyC++2TxB30/WwsuBTL7GHWfm+sTGxMt1w
d7M6sXP4hRRxD31eP1fbfSzuqfP/z7ig//YY9tTn4f86bb+4l97PF5OejhP3
NqtEi9m3sbiPzr8v7uw5ttuwl1mVtLS2mSX+UO/Prv6MNuK++vcHq69c3GW4
n45n5JmPYsVKn6dp0SF3cX+zyj3/Ttff0wwP0PH4YEvmN+KB+jw+evXBALG3
WeXN/OjQk52GP9LPazrro53iQdqbFlwZIR6s8yFkSri12EfX202Pegd2GB5i
VuEzb++eLB6q8/fLWcOaiYeZlfWUG9VnvjPsa1aV297dOV/8sY7H8o9HuYj9
dP+IC2h8LdXwcP382h7nV4n99ftDHyf0Fn9iVj7vrB5x/1vDAWblveS/1ini
Efo86w575CsONCubN+fk/7fd8EizSreZs90kHqXrdeTQRZ+JP9Xn+9nzCXbi
IJ2vXy8Z8uM2w6P17z++1WOOeIxeT+23OrUXj9X128zRqTjFcLBe/+N/Wy4X
j9PxerXPsYd4vH5f2gft7m41/JnO349XuyWLJ+h4TjzQZ4j4c7Oq9rUMf77F
8ESdr3Njw/aJJ+l4DGqzIlgcYlYvXdamNxJP1s9fUXjx2GbDoTo/zl57MUs8
RdfH2ANubcVhuh/uHj/xcrLhqTo/3v41ZZl4mt6fnUOph3i6jp91R6c7mwyH
6/kyptbUTeIZer3Ruw/6iGfq+rvydv3nGw3PMquyy34T9okjzMq51D8vWDxb
9+NxLVs1Fs/R/eDH/UuPbzD8hVkVRtZ7ECGO1Pnxe8fgduK5+jznNC76Jcnw
PLMqTjrss1w8X/fr7M5neoijdP/p9blPxXrDX+p8Wj/m4mbxAn3ebs3HDhMv
1PU/e+P9l+sMR+v9XbgaaxIv0uebeb3FBHGMWakl2w+9KV5sVqmZ7cad+sZw
rO7fe0LrzBUv0fPz16mWDuKlet7v7hxSkmh4mZ4vK/a1WC2O0+dXXvFrH/Fy
XX+d/9jw4GvDK/Tzz24e8614pVlVdbZ1/kQcr+fjiV5PaotX/W++tT2ds9bw
ah3PbvkpoeI1eh4+bPOlgzjhf/3dY8y5rwx/pfN9dS0VLV6r4+OzwrWL+Gs9
7z1PvlOWYDhR52dBTqN14m90/w0bV9dbvE7Ha/mRN56uMbxex/OrC3XSxUm6
Hh9vsB0j3qDX2+pNB1vxRn2eS/u5HFtteJPO17VOH0aIk/Xzzdmj2ok36/V9
WhNZvMrwFp3/Tx5sWiHeqvf7ZP1xT3GKvj+d/uv+vXjD2/Tzbjx03Cberu9T
O3cEDBd/a1ZWa62/qiVO1fncwL4we6Xh7/R5rCpqEireoetlQa8gB/FO/Tw/
v13nVhhOM6v4yMbPosW79P7Hffnx++Lder4vWJv++3LDe/T6+nxskyRO1/G2
OxA+SPy93t/007/WxBneq+spb9HAfeJ9+vO5vx0YJ87Q86VuuZudeP//6jEx
/eQywya9/nl/uMwVZ+r68Lyxv6PYrOdD8vye15caztL9tl7u6QSxRcfj2dag
fuJsHY9r7aoeLzGco+ujrW9CmviA/n6/5u99Kj6o379r2eX64h90//opMTov
1nCuzv9mfTvPEh/S67Fec7Ot+LC+H1jP31i82PARnf+rao1YKc77333b1b63
+KiOx/1H1ypjDB/T52sKSPtWfFzny4+ffBEgPqHjsalyUB3xj3p/O9q1yV1k
+KS+LwT9/WKa+JTu953G/9ZKnK9/nzDxVFG04dN6v49f718mPqPvbxe7b+sh
/knPp01vfPPXQsMFup8cC1uVIj6rz+NQyIrh4nP6+8+frqwtPm9WFU9brz2w
wHChzo92pclh4p91fj55L72l+ILuT9ffyrvwpeGLuv/5fVW8RFyk8yl/82MP
8SWdr2bPtyqiDF/Wv185tddW8S/6fUc7h/iJi3V/PRuzvpb4V92fW0/8KWe+
4Sv6vLv9+nqK+KqOf/RVr5biEv3+WWExF+YZvqbn4ZKV+UvE13U+dvJo0l18
Q8f/xozxFXMNl+p50djDslX8m3bPFQ2Gi2/q9xVOmlJbfEuv17uw4ECk4TJd
r/bHu0wV/67v7zl9NjuKb+v7SHJ/m6IvDP+h71+9ihYuE5frzxve/buH+E9d
DyuXR9ybY/iOnl/t9j3eJr6r76eBn87/RFyh/3+sX1Wrjvgvvb9P+yfmzjZ8
T59Hs5j24eL7un8O6XekjbhSv39y3Ke/RBh+oOv7D9+aFeKHen73Tt7WW/xI
5+ftyYMfzjJcpefviAP/fCd+rM/jjRXpI8VP9DwLv/pZffHf+n5k/X3LozMN
V//vPvz8RoT4n//dZ86lOouf6npMfWdayQzDz3R+77vTM0Fco+ur3wcNlPhf
/fzimrK/ww0/1/n8p1feHvEL/f2/Xm4dK36p9xPkGdtE/J9e//6HYaemG36l
++OENqPmi1/reNw7O7iz2CpLFeU/+PDWNMO1slRe2GrP9eLaWSp1+Lc9B4vf
yFJWf3fu82KqYessFVL4/sBMcZ0sfd/dO3ySuG6WsrHZOqG5uF6WKh1Xa975
MMM2WaqiqPTrxeL6Wcrjhpupm7hBlip7WlV0d4rhhlnKabtLzVaxbZbyGfZL
e39xoyyVE1U1wlrcWD8/dXF8bqjhJlkqqm/sj+FiuyxlV/j4lZP4zSwVnv+L
+nWy4aZZKmLHuytXid/S+/n9zqUPxfZZyvtFs7ZPQgy/naVU+IHI3eJmej+Z
PxaOETfXz+vXp1MTsUOWmpDcdvWpSYbf0evrHvlovrhFlgpa13W0m7hllkp3
Df6pbKJhxyzlsqCq1wZxqyyV+/KheYi4tT6fLp+6vfrccJssVb7aJcMidspS
aWsnuk8Rt81SBQesD7UUt8tSKdGNBxVNMNw+S8V/tvhqnNg5S1nfGDWjl/hd
/bzpSfUefma4Q5ZyXNtz9w5xR+3j/YZ8KnbJUgkLM6oaijtlqUC1KOXEeMOu
Op9WZ/nOFXfOUs5XfWq5it2yVPTOAYdvjjP8ns7n8O3z14u7ZKk489hePuL3
s5Rt5ZevXwYbds9SL1NqzmaJP9BWV5NDxV2z1ImRb4e3FHfT7x9tGVg01rCH
ft7Z/W2Wi7vr9bavZ9Vb3CNLJd45Wv5wjOGeWSoy8dLPO8WeWSrs2/5HgsS9
slThN432NxL31vl5x2PnydGG++j4tvhh23yxl84n0/oUN/GHOr5tzn37e5Dh
vrp+Hozes1HcL0v5bhqQPUysdDy2LjtlJe6v6znKseTAp4YH6Pw22T6eJh6o
z+fIiMZOYm/9fKfH7/86yvBHOl+Dy0euFg/S63ngFttPPDhLOYw8Z6oeadhH
58ubeb9/Lx6i37ez1jufiYdmqeJVWwLtxcP05x+tSDobaNg3SyWNzC+JEX+s
39c7sK2H2E+f79zuM/8aYXi4rrflU45vF/tnKff7f9kHij/Rz++YN7O+OCBL
uR3+rfBYgOEROv+d/d6PFAfq+N+13dhJPFJ/vvSdWrc+MTwqS5XM/yIiSfxp
lqoZ3KJ8iDgoS1V90Sj4tb/h0VmqMtq3JEc8Rve78itB08Rj9f5cM35rIw7W
+798PvTX4YbHZSlzcPfq1eLxup6HVixX4s90PbQub/nUz/AEff6jXQ7uE3+e
paoX5QR+Lp6oz6tR/LNm4kl6fat2bC/82HCI/v3cN4YuFU/W/Tdg7789xaFZ
Knjnxv0PfA1P0c//66fJO8Vhej/pH7YbLZ6apTImPrvdWDxNf765ek/+MMPT
dT+95DF7gThc5+uaH/q6i2fo+A2Ltrsz1PDMLJW/fumdreJZeh7cPXviE3GE
/vzcJ9/WE8/W53P8naVHhxieo+fBkLZTvxB/oeN5f0pgJ3Gkzg/XBwNv+Rie
q+O50txzg3ienqfxWe8PE8/X6zM/6lxLHJWlvJZOc/thsOEvdT9c2vaDGeIF
Wcq+u33v9uKFen62GjD42iDD0Xoe/7g36GvxIh2PHR/P/Egco38/2DX+xUeG
F+vPu6rdWeJY3d/+WlswRbxEx7fq7UetxEv1+guL3yn2NrxM13ut8z6rxXG6
nt+uWajEy7OU55qx2U8HGl6h4/VX9cMM8Uo9L3JOdZkkjtfvj/hpzjviVbpf
pr0+fHGA4dX6/cXT660Qr9H5vqJhkJc4QffbfjcznvQ3/JV+/vI/6nwvXqvr
obTFpM/EX+t4FS7Lf1ucqNd7rZVroTL8jT6fVRXrl4rX6X426Y9avcTrs5R/
ZaPIR/0MJ+n70d4p93aJN+h+41wVEizeqPPt1u4/moo36XyatCb0bF/Dybo+
um97sFi8Wc/z0htRPcRb9PNuDrJ58KHhrbr/n/xt605xip53TVK7jRFv0/cH
368u2om36/n9Om3WT16Gv9X9xHznrRhxqu7/f36S5yH+Tu//3Tth9/sY3qHz
uWbHOzvEO/V94s7KC0HiNJ1/c5NWNhHv0vFxK/A+09vwbj2fk9rVXSTeo8/T
Y+f5buJ0XU/rh2y418vw93p/vd+e9J14r96fuU73IPE+3W9jWjRsIs7Q8891
xJ+nPQ3v1/Hvm3kqWmzS/VZ12d1NnKn785GLCfd6Gjbr7/dYP/87cZZ+n2dU
aJDYovuLb8zoJuJsPT//TfM/08Nwjp4fBfeHLRIf0PncP2CYh/ig7i8Pr/rd
7274B31/CIoetUOcq+d93X4TR4sP6d8vazPHTnz4f99vteInD8NHdLwaeW6P
Eefpftp51uHu4qN6vx+evF7ZzfAxnZ+F7q93io/rfv754Y5jxSf0+S8fH9hU
/KP+/inH5We7Gj6p45dWfShWfEr3K8ufT3qK83V9znv0/qMPDJ/W94OFb87e
LT6j88N32MFx4p90PUSkvLYXF+h+E2n9caG74bM6v24v3b5MfE6f/8Dm1b3F
5/X9t92PHz9533Ch7hcNYvd9L/5Z58/yEY0+F1/Q8Wzd5wsH8UUd/wk9frvY
xXCRXv+v3sNWii/p+NYPPdpXfFnHd8Xmbk/fM/yLvr9dvbl/v7hY3/fju7tN
Fv+q49d+m8lRfEX3l+5vdy92M3xV56/PtuNrxCW63u56+A0UX9Pr+/ZG2fPO
hq/r83iRON8ivqH3uyKw6TRxqa7nn9/Naiv+Tb9/jHXgNVfDN3W8jzx6nii+
pc97wd1dPuIyXT/v3g+0Ev+u75uDn9fL7WT4to7ndPvjs8R/6P7i1GtBR3G5
nkdVU3rdcjH8Z5ZKnpr6cqP4ju5nzW+f8hPf1fm7wu3ruuIKvf6Bi8cf62j4
L50f1699ME98T8/L633qdxHf1/PsQlr5nx0MV+rzGWifv038QO/vzKo9I8UP
9Xy6Y/11I/Ej3c/eW77g9LuGq/R5dW4wbZH4sa6H8PXjuouf6P4Z4zTygbPh
v3V8Hpr9d4mr9f6GevuPE/+j99fm+oi3xU/1el/MHvtze8PP9Pyc3nDKcnGN
zrfXu+Z9KP5Xe2D/1f+0M/xcn+/p0u/2i1/o+LwddXSy+KX28aa/tRL/px2Q
YXWlreFXer4Ee7usFb/W/6/Cr48YJLayqDC7mcteORmuZVGOV18dPCiubVHW
wxMezhS/YVFFdZu5dhRbW5TnV1un3mpjuI5F2c123L9JXFd/3j+5eri4nkWl
JjRWNmIbiwq+HfP1idaG61tU9KWK21HiBhbl/tew3h+IG1rUidw9G/5qZdjW
oiIvvqj+TtzIonLzBgeNETfW67dbc7ypuIlFlQWddj3vaNjOoqo7PN28TPym
RZXXb9XIS9zUoqK+6RVX3dLwWxYV//Gw1xlie4t6+fMnMZPFb1tU4Q7fWq3F
zSzKJrhP/JUWhpvr81vV6q2vxQ4WFZT35LvB4nf0+5cd9rASt7CogojI87nv
GG6p1/OWU+hssaOO38s8a1dxK4tyyxu657aD4dYWFfJHwcdbxW30+dXuWTNC
7KTjtS9pt624rUU5z/g96HRzw+0squqaY5MYcXv9vqWDzvYQO1tU2rNxKx81
M/yuRd+nJw5JF3fQ55MQ2ORzcUeLSrrY9do7Yhe93/b/7b78tuFO+jxaZket
EbtaVMTgQD9vcWeLyutV1vE/e8NuFlW6bFSdg+L3LCruh4N3Zoq7WFRsqFVh
R/H7er3tuh0oe8uwu/79Ir8dm8UfWJRLg4D1AeKuer2jP4xvKO5mUd6vmizJ
b2rYw6LCV59dtEjc3aICE6fG9BD3sCjfHY+WPnrTcE99PgFj16SLPXV9eGRs
+lzcS+f7td/3tBD31s8rfnHkFzvDffT55P77S4LYS+dv8xuPPhJ/qPNtxbdN
Xjcx3FfXx4ZB3XLF/SxKXbs4ZrZY6XiW917hKu6v82HoygN/NDY8QH++Laci
RTzQonJmn2wzSuytnzfGPKaJ+CNdv/cWbS5oZHiQRRUfcC1dIh5sUSXDD7br
I/axKCdfpxnVtoaH6P31DTuyXzxUP//wV42miIfp+I1InOQk9tXr2z7r6LWG
hj/W8e/SueV6sZ8+n00no33Fw/X7Z3a/XUfsb1H+g5cNO97A8Ce6Px3Ylxsl
DrAoWz9Tp67iEboe0lZvv1/fcKCuJz/VfJd4pM73WxfWjxePsiiPB93tHcSf
6vNtODf5ko3hIL2/C2uc1ohHW1Ti+S8zvMVjdL/Y1NfrVT3DYy2q5qdrF38Q
B+v9VQ2dMls8Tufznm9qdxaP1/1oyf7vyusa/kyv/63t3tvFEywq4e+J9z8V
f64/P/Biw5viifo8q6Z4n69jeJLer+eep3HiEB0/50MZfcWTLcrHZ1tojbXh
UL2e3iOcLeIpup6+uf7ndHGYrqfbXfe9K56q+93JsZG33jA8Tffvs4H9N4un
6/xe06rpCHG4fv72A3dsxTN0fmxxPH6mtuGZ+n32AVtjxbP0/naMXNhbHGFR
9qUdPquuZXi2RU0YdXqQSTxH50e6e9cw8Re6H4WFtW0njtT5+l64famV4bm6
Pr7q03CjeJ7en9OVOv7i+TqeC/tYNxBH6fj3nF43/7Xf/+svdf38FWIbI16g
86GTSzNP8UIdj7U57Z+8Mhyt+1tm/e4Z4kW6P7bvODRUHKPrf6ntJCfxYp3P
kw4tvv6f4Vg9D4PfS00SL9H9rF5Yvp94qV7f87BKG/Eyi6osfN/h1EvDcTr+
zfMGLxIvt6iUiEYLe4pX6H46u73l8QvDK3V8zP9V7hPHW5TVT1s7h4pX6Xrx
/W+Gk3i1vh+UtM25/tzwGn0eb9R/lSRO0PsJtQwbLv5K50dyq231xWv1/j4Y
+uTUv4a/1vE/33NYjDhRx+vVn3s8xd9oTwy0+bvG8Dp9volLw/eL1+v+7RRR
PEWcpPt3hqNqJ96g+8f5lZmlzwxv1P2meVa7TeJNuh47JW/+RJys82mLl72t
eLP+fu3t6848NbxFn+/LI/ZLxFt1fNps3NJHnKLPr66b89N/DG/T83vIoiyz
eLtFeS1dNWC6+Ft9Pxrqf/Vdcao+P69Ls8qqDX+n+/WjhrZbxTssKuP1630j
xTt1PtTZP9xOnKbzf0vTZ+f+NrxL94cg9x3Lxbt1PV2v84kS79HrO7TujRdP
DKfr+vv6yqED4u/1858WfREh3qvrJX7JB53F+3T8yu4++fOx4Qzt5DdyU8X7
LcphWHHsWLFJn+c3oz9uJs7U8am3vtWlKsNm3T8HxT5eI87S53vP6ewgscWi
zAmRabXE2bqeChYsy3tkOEfnh2e30PniA/q85m/z7So+qPuT06EeDx4a/kGf
98XlzuniXL3fVm80myQ+pPvxbveGrcWH9XnVbWx97YHhI/p+cHWLVZI4T+f7
gStWw8VH9Xzo/aN1A/ExnV/WY2xPVxo+blEVGanNY8Un9P3rYlKHPuIfdb+t
36PX0/uGT+rv/71seJb4lL7PuMVMDRfn63n3sfPKjuLTOl7Vc9Nv3zN8Rp9H
3pyft4l/0v24f4unQeICfX5twtvZi89aVPKTKQEX/zJ8Tuf3p41WrBaf1/2n
YuzRj8SFFpXuPaLGSvyz7g91/+6RV2H4gj6f872/nC++qO/vXVyPdxUX6X71
8wmbh3cNX9L54v1q5Pfiy/p83G/vDhH/ovtzl/AXbcTF+n59feuIG3cM/6rz
41JE5kbxFb0f873GAeKruj/b15/TSFyi97PlfEnBn4av6XlR9sHAOPF1/f4l
fbL6iW/o+LSqaPei3HCpjo9fz+SD4t+0c1zenCO+qe9HlUe+ek98S+9vXVWj
v/4wXKb72UdnvkkT/67Xt8PrnQni23p/g0ektRT/oevjUv1uV28bLtf1dPOz
0+vEf+r+ZjtyrJ/4jva/FdX1xXf1eQ9sue7074YrdH+Kv991ifgv/f7Jo696
ie/pebAgZHFNmeH7up4m2XbOEVfq+j3hf32W+IG+P7z/wVedxQ91v/PbP/Du
LcOPdP3k5f+3Q1yl87PZ/CPjxY/1+1+eim4hfqLryXZf/ys3Df+t7293OjdY
J67Wz+8w6MrH4n/0+2f8u6u++KnOvzEffXn6N8PP/vd/oZP/EnGN7l/bdrl+
KP5X52+3Qzb/lhp+ruN3b9K9HPELPT8/33UxQvxS17fnolw38X+6/zW+n1Zx
w/Ar/fwlD5PSxK91v+62Mn6C2Cpb5f+Ys9hRXCtb5RbOW1By3XBt/fnfhVFJ
4jeyVfyVgwv8xdbZKsfeI9ZWXCdbWft5ryq4ZrhutvJvd3dDnLhetgr7wHG3
EttkK9Xyj0MvSwzXz1ZFi/tcyhU3yFYur50rI8UNs1Vwr28bfCC2zVYpF753
e3DVcKNsZf+Zd8D34sbaa2YunCxukq2qn3RMbyu205/3jCj57YrhN7NVxbNB
tlvETbNVza/7Bo4Sv6XXN3t7TFOxfbZyCG999MKvht/OVlGTO79eLW6mz+dV
vvdgcfNslVpy76s3xA7ZyjYp5frxYsPvZKuqS9dco8Ut9Pl02xHjKW6ZrWxG
//Nr9S+GHbNVSPll9yxxK/3+eb2/niFuna2izZ0fdxK30evptnvUncuGnfT3
v/v++A5x22zlvLW722fidtnK/eSQlJbi9tnKKffPJiWXDDvr37euvzJJ/G62
Kt+YXesTcQe93lPlixuJO2arNO+UWueKDLtkq9ij11asEHfS672Y0mSg2FU/
3/HPra8vGu6crcIHWTrnid10Pj1643iU+L1sFXno2sju4i46nwd1q3p8wfD7
+vu97NaaxO7Z6kS3iPeniz/Q+VASUNxR3DVb5RX8EF3+s+Fu2cotfbvLd2KP
bFXiUK9knLh7tvI9WrW6hbiHPk/Psf2vFhruma2s3Aa9WC/2zFbJfbJy/cW9
dHzqp3zZSNxbn3evun3PnTfcR9dj+KM6K8Ve2Sph8KeXBoo/1PsP/zDVStxX
12vMd3OOnjPcT+e30zKfBWKlz+fp7217ivtnK8+dR1/9fdbwAB2vs2/fMosH
6vprdO/kDLG3/v2bvfe6ij/K1v26zoa7BYYHZSufe8OWpYkH6/XUaTT3c7FP
tkqc5TOttXiIzpfC/ybe+Mnw0GyVcczts2TxsGzlfb94/Eixb7ZK/+efz5uK
P9brWfJ12MUzhv10vnT7bk6CeLg+P5Nr7BCxf7Yq3NT5m7riT/Tz1u3cdeq0
4QCdnwPXHY0Vj9Dn7fes5ENxYLZyDLr87Hm+4ZH6+9btW+SKR+n41VT0myv+
NFtFXG0/tas4SNf7oF82PDpleLTOr/tPT2eIx2SrgrC1/04Vj9W/D9ns3lEc
nK1KlzafXn7S8LhsVRxm8/134vG6fo9Mvzde/JnuX637v+8onqDP1zN+/rUf
DX+uz2e/OrVRPFHnb/tpTQPFk7JV5YfWk98Uh+h47Gx85MIJw5N1P6qJt08Q
h+r+fHvO7CHiKTo/6hVeqisO0583TOqef9zwVJ1/G86lLBFPy1ZJQ2bV6yee
rn9/Ycncl8cMh+t4F9S6e0g8Q6//5sOx88UzdT0f9Cn2EM/S+VDd2P/JUcMR
uv769b+YKZ6dreI+vPXJDPEcHd+kiquu4i+yVeBfwZ9X5BmOzFZef/R5uEs8
V8ez4/KYSeJ5Or/HeTZtK56vf+868vubRwxH6X7ncWNgivjLbBXU7tzvo8UL
dP1sabusuXhhtjIP+L3jr4cNR+v9nbQpWidepONzbNNCf3GMzo9bX7k2Fi/W
7zt/r/T8IcOxer8upnWrxEt0Pmy7OmyweKnuj5dCbeqIl+l4TR9bcDLXcJye
z00PrIkVL9f7C/8ioK94hc6fthsdX/5geKWur6uO9w6J4/V9oWe9I/P/f3Zd
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
Auc44gynOMEBH/+f/rjHHW5xg2tc4RIXOMcRZzjFCQ74+H/0xz3ucIsbXOMK
l7jAOY44wylOcMDHJf1xjzvc4gbXuMIlLnCOI85wihMc8PEn9Mc97nCLG1zj
Cpe4wDmOOMMpTnDAxx/TH/e4wy1ucI0rXOIC5zjiDKc4wQEff0R/3OMOt7jB
Na5wiQuc44gznOIEB3x8SH/c4w63uME1rnCJC5zjiDOc4gQHfPwh/XGPO9zi
Bte4wiUucI4jznCKExzw8Qf0xz3ucIsbXOMKl7jAOY44wylOcMDH79Mf97jD
LW5wjStc4gLnOOIMpzjBAR9L+uMed7jFDa5xhUtc4BxHnOEUJzjY93v0ww2u
cIEjTnHAw3fJxw2ucIEjTnHAw3fIxw2ucIEjTnHAwxX5uMEVLnDEKQ54+Db5
uMEVLnDEKQ54+Bb5uMEVLnDEKQ54+Cb5uMEVLnDEKQ54WJCPG1zhAkec4oCH
b5CPG1zhAkec4oCHr5OPG1zhAkec4oCHr5GPG1zhAkec4oCHB+TjBle4wBGn
OODhE/Jxgytc4IhTHPDwVfJxgytc4IhTHPDwFfJxgytc4IhTHPBQkI8bXOEC
R5ziYN6XeR9HHHD3Je5xxAF3X+QeRxxwd597HHHA3Re4xxEH3P0v9zjigLv/
4R5HHHA35x5HHHD3ee5xxAF3n+MeRxxw91nu/+tPfyr712c++WwM//G/AW0R
Tjg=
      "],
      VertexColors->None]}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], 
     PolygonBox[CompressedData["
1:eJxl1QtMlXUcxvE3qOTiykAdIDg8EigCQ+7XwwN4uN/O4QByBxuBG5vI5bBm
IZBQXhrSECeMKQ4MS4QiCDDGEZDrVFZDYbkys0xTkFbWMGZv8/213l9nY2ef
fd9nZwd4/++WPfs0eQaCIHSIP/+8P38Z4aaX/quDCzn6514H89uTTRHvk9ej
44bN1n3hZAs4tE6PFb9GtsYa2zzLgvFsybYQdtu3VpeRFVjsngs+7Uy2Q2FO
S/nSwyzJ9vB4Vx299TPyNlga+qwq3yY7on72wpqqKLIThA9r96utyS4QFj7o
8VrOlOyKS5nJFtcmyTvhpixKHz9LdkNb8NDENxVkd3TPd6XPZZA9cHhpqK06
gOwJTVeTzaAN2Qu9nQd/SRHI3qgx/vT7gLsZkn1g9lbHQOwU2Rdxd1BS3EX2
Q+WTtq9PNJL9offb/ldbBTkAo76PzevyyYFQ3C0VVGqyEgcuPds+4E8OQt3P
X0R+Z08GPumtDrpgJrkSSPhWtbjhWbrUg7FiUmhj/lByZTBqG8aymheohyCt
8cU/z01QD8HFI5rrLn3UQ3GyLDfNqZ16KMIG+upONVDfBePdEwtFh6jvwpYz
H5l2llJXQTVsnhKZR12FAsvW0OBk6mE4cW/p3PFw6mGofjzY4u5LPRyZOR01
9juoh2Nw4+gfeTbUI5Cc9t7o4qvUI2D2Y9GDIQPqkfj48krz7O9pUo9EdqOh
m919yUIUaq4cce67RT0Kw9ov3Q/NUo/G1YUQ02Nj1KPx2+TNUzP91GPQWGZ6
B53UY/DrPeULD1qpx2I1e9r5SiP1WFivRPfOHqUeh03FVk9NqqjH4YZuXles
ox6P9vzXe14qpB6PiIsFMaO51BPQ4tW7dD5FMhJgNT2S2h9L1yegXv006VGo
ZH0CBM+moXA/2qvxCm7pxl1pr0ZNs7K0wIH2alw/PtPjtJn2arz8qERptoH2
GmQ9KXGwWEt7DTKE0aOBhrTXIHnkWH3VSqq016Ckoyf/h2XJQiJO7k1X7bkv
GYnQBh7Yu3pbcmUiOjeVW30+T/tETL0z3F4zS3stphTl2fsnaa9F7Zubz+r0
tNfCeCT0WkM/7bUw2ugbNdNN+yQs51+tsjxP+ySsvWzyU0Vrql5h4Drn/UYS
hMO5OzJa/m+63vG/FpjFz5O5khnMArP4feV7ZjALzOLvW75nBrPALP695Xtm
MAvM4v+bfM8MZoFfH886s3i/yDuzeL/JO7N4v8o7s3i/yzuzeF7IO7N43sg7
s3heyTuzeN7JO7N4Xso7s3jeyjuzeF7LO7N43ss7s/i8kHdm8Xkj78zi80re
uYOYlcyBzAHM/sx+zL7MPszezF7MnswezO7Mbsw7mV2ZXZidmB2ZtzHbM9sx
K5htma2ZLZjXM69jNvrXfwPsa+of
      "],
      VertexColors->None]}}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], LineBox[CompressedData["
1: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
9jK/ucMTDe5fhJZWQ7YsoJVFWBE0qu50Z+5fhJzd6hG6dEcRzFE4N60T9y+C
uklP7Y50dxE+lg8e7KfO/Ytgtuum0aeO3L8Ib2vb+q2ntURIPlTypEKN+xfB
VfXzilm0jghVOiFfTqhy/yLMGL8jdyitL8Io6+zw1A7cv+L7fe4V2IE2EGHb
iNNSHxXuX4Sx1j4VH9tz/yJs/WQy3JqeI8LlyXoZle24fxHqc1rGzqUXi2B/
6tzrU225fxH2v7Qo0qWXi1B3tOxghjL3L8KsvIbTGrSVCIk+lXUhbbh/EZwK
10z61Zr7F2Fi+4C9W2l7xecNGTPqeSvuX4SpV9Y9NKWdRPArVNp1SYn7FyGr
uH3oFNpThNF5myKPtJj9z74ijHDUODyIDhRB98WvD5J/gkNFmPml8yJVOlKE
72mLrvr/FRwrgsGLjI3fmgUniuBQ9rufPS0WwXi12feqP4Klir5Py9+Z0uki
5LW73Hy5SXCm4v3YcmWUIZ0lwqVuIt9jvwXniDAdvd8No3NF0Bpr4pLeKDhf
hLZjdft2pQtEOCySV0f8ElykeB/zxWV/fwo+K8KVT2rlLnSJCDj17eW7H4LL
FX34GfW3pq+KsONsjdvD74JvimDxq+LDYrpCBMPTf/3Lvgm+L0IfidWYqfRj
xfs79GVz/lfBVSKYdAp4O5yuFmHg7xGfd30RXCvCVemDbj3pOhHkB9xWxDUI
rlfke/v3hDLdIML9wRvG+H4W/F2Eg7opV759EtwogvPjON9tdLMI2urTl776
KFgpGTbHUg3X0MrJ2FyYNP9evWCVZHTpMnDHIrpjMirKxp8o+yBYIxmZ98u6
GdLdk9HerCyx4L1gzWSomw3THUX3S8bEr9Uvst8J1kqG66q3xwbQ2skYe3RU
ZmqdYJ1kTNfNOaRB6yXjSrtFd6PeCtZPhlW4avc29IRk1Hx9utP3jWCDZERl
5H/88VqwYTLuPQ8I3UEjGX49p09+Vyt4juLvD1e13UgbJ0Ovo3lD1SvBi5Nx
54j450raJBkq6imad2sEL09G0pFFKxfRFsmY3edQ3qWXgq2S0f11tjZoa8Xv
c2B84ZlqwbbJmKtkbDORtk9GVeojnfwXgh2S8a3vI7WRtFMyjsycprr/uWDX
ZGhdahwyiPZMxvItyqvTn3H/yTBsNDvYiw5MxslZT7onV3H/yfDRik3rREcm
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
UzDy5b0fy+iiFFy98nvEcy/uPwV6C4budKBLUvDRctntJk/uPwWrfzrNiKKv
Kt4fzZDSXvTNFNRe9Lfc78H9p6DbL6t2E+n7KVAt6Xm5zJ37V7wfOtkyM7oq
BeVGrYJeunH/KajR1PZ1omtT4Ha9XUyLK/ev6Mdx75F4uj4FqUMaXvWnG1Lg
ofpu1BEX7j8FDsbhMYZ0Ywq6t7vYfGMn95+CnB2ioDW0UirqCr71/uDM/adi
RIfnl7xplVTM2bcwTJXumIq958ZZyJ24/1TopiTM0KW7p2Kpo6XBmR3cfyr+
RMfOXUj3S8W+CQM3PXXk/lMx+pSafCutnYpWGxa9bNrO/afid8SjaTG0Xiq2
BBw82JfWT0WXvWd0cx24/1ToLFG+YEgbpMLsZcCmW9u4/1TIS4cNWkcjFV4W
Xz992sr9p+K2etWdANo4FU9MnpVp0ItTMTP58/U9W7j/VHRY2PH1OHp5KqQf
9bqW23P/qcj5vdBsBW2VCtOP67PfbOb+U6G0yE7Nk7ZNhad0eWgH2l7xfdYN
10jbxP2nwlb30VE92ikV9dFrrc/bcf+psOtWoG1Ce6aim+X9Py9tuf9UhDae
eu1CB6YiKsaipi0dmgqDE3lfUjdy/6mo7Xqqmy4dmwotU3vjsxu4/1Sc6XUu
YSktVrhb3rtqG+4/Fet+TF7pQqenoo+T6YO2dKaij6k/Nkmtuf9UHOvUX20k
nZMK+4OlF8+t5/5T8fP6i2gTOj8VBZMcN71ax/2nQu/E5uXudFEq1FQvL+9A
n03FQJWQzelruf9UWPlJY8fQ5al4ZKhUXmrF/afifL8C9ZX0zVSs/Xlky7s1
3H8qeu9/+8iXvp+KHWprLDTox6n4ptL6wz5L7j8Vi0IfJkymq1MxclPlvBur
uX/F95F/7ryerlP8Hp11Pny14P5T0a7I7XE43ZCKeZGVj/rQ3xXnPQ3eHV3F
/afCKGRPx9l0cype728/69FK7l+KObW2UdtoZSlWGJ2oaVnB/UvR4UL9EjHd
UQqT7Wo3dGgNKbqv6mB5bjn3L4V+bHWTKa0phc/AmCNvzLl/KYqHtdnpQ2tJ
cfDMLGMNWluK+p+z9bPNuH8pejUp6U6l9aQ4+tpl4h1T7l+K3s9TzGzpCVIc
UrUN+m3C/UshkTy4GE8bSvHr8Otu2jSkuOEX73F6Gfcvxafp1+uX0saKzx+c
7FK7lPuXombDKzVv2kSRZ1phYWd6uRQf3rd2zl7C/UshOnZ5+jTaSoo995r6
3l3M/UvxKlWmtpm2VeSfn9Hx7yLuXwptfaWBybSDFGd3n501gnaS4mTdTY8L
C7l/KR6vH3l+Be0pxQmryh71C7h/KTKmnPUPpgOlyDN/1ahJh0pxRXVWaJ4x
9y9FyMVKrXl0rBTTniXcrprP/Svej8sucS60WIqLbzzXqtJSKT7nymbsmcf9
S/EkskLfgM6Uwv1jrwl35nL/UniZbDXeROdIMV23dPvfOdy/FA9/9M4S0/lS
tB3r8GEkXSDFJKsTs8tmc/9SBDa9y7Wkz0qxP0l1+NdZ3L8UXQ51Ph5Fl0tR
efvbkkH0VSnS4441Fc3k/hW/j/vsIhO6QoqF/bPC68D9S3G+5227QPqxFKv+
FK/QpKukeGtnvzLfiPuX4tG3W5uN6Vopxsx9G1U9g/uXIrz56FlPul4KjQsD
lbrQDVLETZiw/OB07l+Kle3fFs2kGxV7rR03+qkh9y/FF++uBTtpJRmm+AUu
VKOVZSjc7fFl3zTuX4ZA2dccQ7qjDJO1650eTOX+ZWj5s26BI91dhrAXc8e1
pzVl+JGQNjJzCvcvQ+u7lhOn0FoyPLX3X1ZpwP3LoKfVynsbrSODdumzAmVa
Twb7fp2Vdk3m/mXo15KwZjI9QYaHhmuuVEzi/mU4cGjb7K20oQzdtc7eaUND
hh4e8x0yJnL/iuexKr0n08YyxX8Pmh5UTOD+Zajf3mvfVtpEhvIWy0BlerkM
8icXtu8az/3L0PwK2wxoKxmed3jiWTmO+5ch0yAkxYG2lUHZemp5O9pehnE7
f7faM5b7l+HExuJl02gnGVxG+hx5oM/9y3ChdHxfJ9pThhlDq6WqtK+iDxOf
YdljuH8ZFsxTKjeiQ2X43n6r89PR3L8MqmknRrvRsYrn7R7/6UwnyrBzReXj
Q6O4fxlkooxLc2mpDLdvTiit1uP+ZbjePfm2D50pQ5Lfifc96SwZfPsl9Tw+
kvuXQbfDcLMldK4MUWudMup0uX8ZKibaN4bQBTIE5HfYOJAuksHy07JnZ0Zw
/zJs7zpp80q6RIaOs04pfdXh/mW4lHX7YBx9VYYdth4bRtA3Fe/bkVzdS8O5
fxkGH9nS2oa+L0NnycF3zcO4fxmOpG6ultJVMrR9v+vNBLpahuVlC5srhnL/
MnRbu2nQdrpO8b59rV/Rga5XvG+lT2TZ2ty/DHkddT7OpL/L8LPrvWXPh3D/
iu/T5+FFb7pZhv32erN70UpyxM+/e+/EYO5fjhutSlxMaBU5Ymu/Df44iPuX
Y4SR/csoWkOOoRs184bR3eXQyWqJKdPi/uVoZdHb05ruJ0f2Q2uXvwO5fzlG
et/1k9PactzatSl1Mq0jx+u9fUvuD+D+5fj05sMvZ1pfjqBblTM60xPkWF58
Q5zbn/uXw6BX5e8FtKEcfRa+3P62H/cvR/P57w2h9Bw5WmrahwymjeVYMbSn
dklf7l+Oeb/63F9Lm8gx9maX5D99uH85Qnv/tJbRFnKUryybPpm2kiPgr+uI
B725fzlWRbXTdqFt5fjj4TKqC20vx/AFp+bmaXL/cuzxv+WwhHaSY0r6sb0f
enH/clwbvv5tFO0px7iDd6fq0L5yrDuknHG5J/cvx8RT39Tt6FA5Dq+Vx7Wh
I+UoGPW9794e3L8cs043F4FOlGOJOM/2RXfuX44ry1UG+tNSObJErev60ely
3Hsru1DcjfuXY0bDtWxLOkuO6wvi5b+7cv+K319ckyGlc+UodC7Nm0zny3Eq
bETFwy7cvxwD3Lu1uNFFcux672PYgz4rR23susgCDe5f8X6rnKoxp8vlGKwW
tOhbZ+5fjiFzikpF9E05fttaGI+jK+RQGrS26m4n7l8O31Gl/s70Y8X9M0PG
dKGrFP33TP+Ur879K+7brHLWhK6Vw6WhLLWhI/cvxxzn60GJdL3i9z7Uy1uf
blDsbd2BwAo17l/x/pu6SZzoRkX/C/2KNOhmOdp2KX6Xr8r9p6F+h+4IU1o5
De/HXXH/0oH7T8Oz4XGVSXTHNAQO8DQcR2ukwb4upKBShftPQ9vVuVNdaM00
7Jv78XY3ul8aNobNci5oz/2nYcaXA4NW0NppULbtXf2jHfefhlVnRLkptF4a
jld2jphM66dhXVzsjsdtuf80eN5U3uRFGyjyubhu7UMbpsF9yyPfYmXuX/H9
xCMyrOg5abj5fNONv224/zR0Gx/Tfje9OA3b/EWmoE3SEJ/nefBla+4/DUqn
pnQOoS3SoBZxN1ibtkpDWTdD5cutuP80tDF3S95M26Zhs6GXfgfaPg1m12b/
d0iJ+1f0870ieTHtlIaeZ/tZfmox/Z9d0+Dff8joRNozDdG9qzuPo33TYHN8
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
jWJeZv7VjaTTxf0ycWVcTfqAOI+5WHJqIvsvw/YrXqGL6Axxv2zZGtyZzhTn
q2PD2c8D2H8ZFl+6HbmPzpbhd/ytTaPoE+I+lZipatGnZCiwXnbp9AT2X4bl
Lq2+LqbPypBQ44uDI31e7M+JvzNfjmf/Zdi70i0tmc6T4eUC6c8x9GUZfC+4
jKxDXxX3l+Rz2tlx7L8MX+0fNIyi82WI3vZmbTe6QIYrf6y+l/iz/+K+T124
WErfkeGp/O3vcfS9/90/67fUp+/LYLPWzfbiWPZfBvtjtc+soh+Lea/zZaYr
XSzDcM33JuV+7L/o2UnL6yr6hejZ6v5bJ9OvZLhtvd6vMV0iQ8S1222vjWH/
ZZh5quevaLpMhr7tNPc96HIZ6rnanq0Yzf7LsKmd5qCR/iTDL3sX3Qy6QtzP
iy9qreivMlT2nHqgcBT7L0PnSz9Ox9E/ZVjdZ9ddT/q3DF5FXb/9Hsn+yzDl
9kXrI3QlOfrPmTh8Ll1Fjiq3Sza0o6vJ4Tks/MKjEey/HEPrl9bdTdeS46V/
wKThtJkcGwJPHq5B15Wj/ewGDU8PZ//lmJ7uF7WEtpBjdviGN11pSzl+vJYF
lgwzuZEcYQHaJ1K6iRzG6ntCJtDN5PBwCPvSgG4hh1Pt9nGXfU22kqP7i7MO
62lrOdb8wc3etI0cpXskqyuGmmwrx62vRT3SaDvx+SkfPwfT7eXYYfn8mDVt
L0eDCWkb7/qY7CDHpCXDJyfQneU4ePi8+xDaUY5XfuY2VWgnOabKO9Y7PsRk
ZzksXjSqEkm7yLE26PrfzrSrHHkhflVfeZvsJkecu6p+Ku0uR037023H0x5y
iP8T9mtA95Ujf/ng6ZcHmwzxvMsOxa+nB8jR6vSTMx60pxzN9137/cXLZC+x
3+Oi+u2nveWQeb3YPIv2EefnSO2HbWhfObw+lfR4MMjk4XL0Hr5mz056pBx9
ml+vNJweLdZbmT+/Ju0nx07ElOZ4muwvxzS8C42ix8vR6WvVz93pADnqHclb
926gyZPkSM/v1UJDTxHnPWXssUA6UI6N81oEtqCD5LicHGNeOMDkGXIURyWd
30qHyNE5cPi6wfQsOfYo1IMr06FyJCWnNjre3+QwOboqer6JpMPlKKk/94Ij
HSHH3d59dSUweYEce9fodsrpSDn83dI2TqIXy3Hy5OB1TeilcpiFLYnO72dy
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
PJx+Ie7DQu1WJ/qVmMd+lQ5/em9yidj/lQMeZ9Cl4j4PC6+/hC5T4kzZOq9e
dLk4Dw9Wrf9VbvIHJSqaTcs9SX8S5yvavv4aukLcX39uTR5Af1Wi44ygQ9Xo
70qc2ltQ9+I7k3+K+2dV27mb6d9KTKoYc2so/VcJy4dB/czpSiocaTriYH6Z
yVVUmLm5accddDUVpA2Pq8fSNVRou9fNoRldSwWzP/GH77812UyF07YnB6TQ
dVX49e7M3am0uQpXBiQvsKUtVIitPrThy1KTLVV42eLaMQ3dSIUHM9uEhNJN
VMi+6dWsC91MhTZ9PfLfvzG5hQp/EyvFH6KtVNiemThqEW2twqxtH1u40TYq
zKhmVfqzxGRbFTJ+W5w+SdupcHvqjb1r6PYq7GnsHzWQtlehSQ1lYA3aQYWc
5lm+l16b3FmFMb22942jHVW4N8zRdQTtpIIO8d0taWcVFvza73r7lckuKjjM
SuyXRLuK75vvMnwi7abC9Uq7gqxpdxW6Vzm84ulLkz1UiArcmqyk+6pgU7Pt
2Zk0VPjydME7B3qA+PuPlluXvzDZU4W3LzzGHqS9VOj8KmN7JO2twtNrz271
pH1UmLD5Qstfz032VcGtxqTZp+jhYv2dVSfW0iNVaP87tfEgerQKP0YNjaxF
+6mQaau+d+WZyf4qrJq8f8A2erxY74/Bh0bTASq43sjr0ISepMLrl3fkRU9N
nqJCh/bb2qbQgSrsXvNBF0gHqWD76kcPO3qGOE+D9RdfF7P/KhzeU2mqgZ6l
Qv2Lv36F06EqdMnbJ3Gmw1SI3PrQ6+sT9l+FvbVzKo7REeL7u3pqV9ILVDj2
aea0/nSkColeDjbV6cUqVG4d+yLvMfuvgktETHocHaVCiqP1qpH0ChV+Dx85
phG9SoVJuS0d7z1i/1VoGLvaPJleJ9ZzW1TFVDpahaHX6hS3pWPEeXBzvvn6
IfuvQstLZRcNdKwKikj38/PoODEvzi1yu9PxKoz+GXvt2wP2X4Ul57bcP04n
qvBtQ8t3q+mdKtR271Xdk96tQtd7z21r0UnivE9o4XX1PvuvQsfMB+EJdLIK
c0vap/jREhXUb37mN6OlKpw97G/2qIj9V+E7eg2R0UoVLm6RbQ2m1eLn8fF3
O9Jasd6D/rUvv8f+q1DH8Gn5Idoozl/2zDuL6fT/ze9k1970ARWuXSr4799d
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
tbh+t/bcWNpei8cRJW/8aActCp+6zGlNd9bCfF75hzfb2X8tWkxutDyDdhLP
/0FVezXtrMWZcHnyENpFi0Cr2i6NaFct7vQtuvE4gf3XYk9Lywgd7a7F4O+H
GkXSHlpktTh+si/dV4s3eR3n1KahRa0hf60Kt7H/Wsx72vOWhPbUQn/v9tbZ
tJf4+aK7vi60txbyv70t/sWz/1r4H69y7xLtq8W1Tw7KnfRwLRaVHY6cSo/U
ouR98hAHerQWHzxf2n7Zyv5rsb57XKUc2l+L3Krbn8XS47Uw+/spbywdIPYv
9OBhG3qSOH+JV+Rv49h/8T6nsDuTDtRC2dMifi0dpMV9r16xvvQMLdJ7HI9t
SoeIzw/bte3ZFvZfi833cpPS6FAtutmMUC+lw7Q4Et4layAdLtbHfNp1czpC
nMchb0qKYtl/La6EXqipoiO1+HOiwiGCXized8vi0b3ppeJ82fisqkFHaeF3
MTz95mb2X3zf1efPkulVWhyO0racRa/Roo/1ifHd6XVi/atY7/u7if0Xjrz2
5BIdo8XunEsdd9GbtJjibLk0kI7VoqKJ+nInOk6Lrsej23zbyP5r0SgsbcVZ
OkGL/MWtH26lE7U4ZX+/3wR6pxbTbzzU2NG7tViQ1b7Rhxj2X9w33Y5GH6f3
aRG+eeuPGDpZzEc93YLRtESc17q1P7SipWIebxvnv9nA/ov9OrLjWwatFOv5
58TaNbRai6q/Olj40lotfv65JW9K67XYOzan1/No9l+LiFFlhel0uhYu/cdF
RtEHtLgcWamZF31I3Icer083oDPEeXhtFvZoPfsv1utiqJWOztLiSecaNyPp
bC2MMx9uBn1CC+tLZV516VNa9JO71rq3jv3XYojnsWsK+qy4nytF7plHnxfz
Zh8S3JvO1WK5+baeNek8LaRVy+vdWsv+a+ERsK5EQl/VImbG0Iuh9HUtHkR6
613pfPH3Hy3dXoUu0OLXxwcrrq9h/7UYU21+2D76jhb3ZvYMDKHvaZE9z3G8
M31fi1Hzxvr9Xc3+a9E22+B3mX4seqJwmrCbLtZi7Jrn04LoZ1rEK86FO9Iv
xPxPy1/9cxX7r0Xd+rV35dIlWthVmpueSJeKfm3+dWUKXSbWu1LGOwe6XIt6
x3Y1/LaS/deiTW1pn3P0J7HfgwrmbKMrRG/Pd5JMpL9qcfO+obAD/V2LhMej
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
gw43wMWpRbUedIQB+W3xujq9wIB/fwqv3enH/ov17nvvqIZebEBF8BDVUnqp
mKfPHXYPoaMMKJ+1MLYFvUKcz0Gd1r3ty/4bsL72iJUn6DUGOLk+Xr6VXmdA
Td97K6fQ0QbcueKxvisdY0Csa524SvQmAxzqDUy62Yf9N+BB/nONnI4zoKjK
u+yFdLxYH7spNz3pBAMGHnV925hONOCox+Jarz3YfwM2uVp1zKJ3G7Cqvf2w
zXSScPzeyAB6n5i/D/NSO9HJBqRd11/73Zv9F+9rGPLvGi01YHItX5dUWm6A
dNbBsAhaacDa4cu0/Wm1AWoPxWtLWmvA5SOODi/c2X8Dcj1aRhyhjQYk+s06
FkOnG+C+pnGN8fQBA8oG2Pp3pA8Jt47X/ezF/huQvG98pat0pgFLXNcGpNBZ
BjRcUjMrnM4W81hc2gz0CQMWfHFY2YA+ZcAb94svnrmx/2I/XU6PyKDPGrAw
xPLUBvq82E+/nK7j6FwDLKPzlPZ0nvj8UodWP3uy/wbkZb5MukJfNSD83I+m
KfR1A/q0DdkXTucbYDbRwQZ0gVi/94N0DehCsf4hWT2eu7L/BgR5rr2QQd8z
QGcuHR9D3xf3u0+j9+Pohwb8WPloU0f6sfg+x1/tfvVg/w3YXhyWe5V+JvrR
0jlUQr8wwG2GT4MI+pU4P/2PHO9Plxjg57ZgdkO61IDCG2tavHRh/8V9vLX4
eiZdLvbnR0LMJvqDATf2bO8fQH8yYO+Hp/860RUGdItde+ZPd/bfgMC382Ju
0N8NqPefcbiM/ime16Zni4X0b/H+leu/8aT/ivvrYvfjTehKRnT4rkwocWb/
jRjSMmh2Nl3NiFlZoYPi6BpG2I47ZTeFrmVEx9WTajrRZkYMz/J8V5mua8Ti
2MV3bnVj/41QrPx4VkVbGPG5+ZFDS2hLI5Je56iG0I2MKA5vlNySbmKEq9v+
Xe+c2H8jWlxNSDxNtzCi/eGsxO20lREWi9vvnk5bG6FMKUruQdsYce3QTXVN
2taIzX3NM4q6sv/i+S7FnzfQ7Y3o+3j0vZW0vRHHqgW8H0E7GJGbq6htS3c2
4k1a1w4Vjuy/EVkD/wzOpZ2MeNWgblgS7WxEH/nEHaG0i1H8e+jtSQ/a1YgG
3Y6/NafdjJAPvGz1tAv7b8QGNBt1mPYwovIh5aYNdF8jltjOOzeOhhHTrZZU
dqAHGDHe4cSA353Zf/H5u302Xqe9jGiX9uu6lPYWz9fzS/OFtI8R4ZUdZg2i
fY3Yu2vvsab0cCOGrh5oXtqJ/Tcib0iHkBP0aHHe1nieiaf9jEhJ39d6Gu1v
xJepHdd2p8eL9bD58LI6HWDEgajyYfcc2H8jNL/aHtPTU4x47pjQYSUdaMQc
qfPeEXSQEVMfmpnb0jOMqAhvFlPRkf03YsWLgMoX6Vni9y/dXL2XDjWilX5F
5TA6zIiRDSfG9KXDjdBtDzNvQEcY8fHggb3P7dl/I+pV7mCfSUeK769z49gm
erER2VO1wyfSS42I3XzoVRc6Srxvk3drK9ErjJi7c5zNrQ7sv5jPhI9nVPQa
I+7uyQ5ZSq8Tz+d2yHwoHW3E+kr3jrWiY8T8rew060N79t+I/R7G5ufoWCM+
XZ1wfRcdJ+bzRPeYWXS8EQFJvfr3phOM+Pc+9F89OtGI0FEXc4rbsf9GNB86
fMNhercRyXP++cbQSeL89b/fdAK9z4iSiY9fdqKTxfsOqXP0rx37b8TZpMAt
N2mp2J+iR0FKWm5Es33r+iyhlUaMDR3e0odWG+FfhN9WtNaI6MUTit+3Zf+N
mHJzz8WztNGIVct+HdxFpxux7e/61Fn0ASMmfHBK6E0fMuLE48rR5nSGEYYJ
X6Oe2rL/Rrh8rLcog84yIqqH94KNdLa4jzKVCwLoE0Z4Vm+7uAt9yoiYg2dX
VKJzjPg7dH3MrTbsvxFewTN2qOnzRpjHByuW0blGtB4Xk+lL5xnhNyr3amv6
shGqeu1efbJh/8U8tJJXyaWvi/vcoo/tXjpf9CPqi2cYXWCEb+nl0H50oRHp
n07ssKTvGFFgd+X0y9bsv9hfyy/lWfR9I274ureJox8aYRWyz38q/VjM14dG
25zpYtGbFbrL1eln4v5OGVe7yJr9N+LIS+uhRvqVEamv/m5bTZeI53H+dnc0
XSrmYVLNtu3pMvH5r47zf7Ri/41YtGPu2av0ByP2XDjbREp/MuJBa8fwhXSF
OI899ud50V+NcE8a1L4F/V3s78MPMe+s2H8jRu08UJpD/zYiYUz0qJ30XyN8
0uYcn0lXSsN9lxD73nSVNGSsXJhkTldLQ3DLHXWetWT/0xAnO7/2CF0rDU8U
NX9tos3S4Jg5cckkum4aJoflfO1Km6dhekCPZVVpizSMbZT9904L9j8N/o7D
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
3y3m5OwW3s35HqlO/vAejo9duPEgeC/Pe8vbXUqihPdxfmal6RyA93P/9ZrX
3AY+wPEKu9q0bpfwQY7n7gfNUuForseaGO05cAyvt3vbztrwIT7PkLH9r0cK
H+Z83WMw2geO5ffLVTMN4SO8vln1vgU7hY9y/n/7ejgcjuP9fjt4wxKO5/vT
3U+fK3YIJ/D7XlbqJ8CJfJ86meQyFT4mJ7U9GrvV4eOczy318lQRwif4PHbm
t/GEk7hetox06wyf5Pc5OZ3KCRdOltMO39Y//eFTvP95m6cMhlN4vm/Zk/o2
TPg0r896imY0nMrx1k33toXP8P5W3n1av134LNdTRsCEc/A5fr7hVfo8+DzP
l+alprqw5H/1uC/1dqiwlNe/8X3/DbCM68PypaQfLOf5EOs3oihEWMH9tsWl
u1GwkuPxM85tLKzieLwwrK4JFk7j+ujlGJUMp/Pfj+00cBZ8gb9/KvSxFnyR
+9f9ff4ZQcKXOP87jjFZA1/m9Wjset0LvsL3Aw2/QwXbhK9y/u9Unx4BZ/zv
vm2sZwVf43h8rnrxJVD4Op+v1CX5GHyD8+XWtPUu8E2Ox+Evts3gW7y/JMOe
lwKEb/N9we17wwr4Dvf7AfNfdYcz+fdRi+/k+wvf5f3W/JOEwvf4/vZwWMJw
+D7Pp8NN93/aKpzF/eS61854OJvP47JH+FQ4h//+d11EEzhXTuV1PfakbxHO
4/wwLI71gv/j/Pw2MLUb/ID7U1H7jAebhR9y/3PaXRAM53M+ZR6psYAfcb7K
LduXbxJ+zL+PWD4yDn7C37tm4uEEF3B/zQ48qA4/5f7cY/H9ND/hZ3ze5k//
LYOfc/z9n4/qBhfy99d4BT7YKPyC52FwRGYwXMT5OMCizTD4Jcf/5ar55RuE
i3letLZQxsGv2CPCW06FX/P38pYsawK/4fXa5GWl+wqXcL3q3Ri0HH7L9/c0
6yP68Du+j8SO08xfL/ye718j87eGwqX8vNXH78PhD1wPEWE+FeuEy3h+GZ6r
SYA/8v3UdZbfNLic//84uFO9GfyJ9zdr3L5La4Ur+Dw6Bvb2hj9z/7Qfe7Un
/IW/v3T7rCc+wl+5vt871ofDlTy/rWITrOAqzs93SydVrhGu5vk7Pf3HCbiG
z6NpeOoM+BvPM+/nC7Tg73w/0jjT7dpq4dr/3Yd/v/SBf/zvPpNz3Aiu43o8
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

     "]], {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{3, -102.45875057721119`},
  Method->{"MessagesHead" -> DiscretePlot},
  PlotRange->{{3, 5000}, {-102.45875057721119`, -61.43334138729372}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}}]], "Output",
 CellChangeTimes->{
  3.8665323364840107`*^9, 3.866532371741507*^9, 3.8665324188073473`*^9, 
   3.8734310431880493`*^9, {3.8734310810251217`*^9, 3.8734311015586157`*^9}, 
   3.873431251644608*^9, 3.87343133609433*^9, 3.873949429651863*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "@", "soundnessErrorQuery"}], ";"}], "\n", 
  RowBox[{"(*", "\n", 
   RowBox[{
    RowBox[{
    "Computes", " ", "the", " ", "soundness", " ", "error", " ", "of", " ", 
     "the", " ", "FRI", " ", "query", " ", "phase", " ", "for", " ", "rate", 
     " ", "`\[Rho]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"2", "^", 
       RowBox[{"-", "bitsRate`"}]}], " ", "and", "\n", "Johnson", " ", 
      "proximity", " ", "parameter", " ", "`m"}], " ", "\[GreaterEqual]", " ",
      "3`."}]}], "\n", "\n", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"soundnessErrorQuery", "[", 
    RowBox[{"bitsRate_", ",", "m_", ",", "numSamples_"}], "]"}], ":=", " ", 
   "\n", "\t", 
   RowBox[{
    RowBox[{"numSamples", " ", "*", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "bitsRate"}], "/", "2"}], " ", "+", " ", 
       RowBox[{"Log", "[", 
        RowBox[{"2", ",", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"2", "m"}], ")"}]}]}], ")"}]}], "]"}]}], ")"}]}], "//", 
    "N"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.86653195160083*^9, 3.8665320783645163`*^9}, {
   3.8665321716305523`*^9, 3.866532176573702*^9}, 3.866532215413279*^9, {
   3.866534200840535*^9, 3.8665342102812443`*^9}, {3.866534304932061*^9, 
   3.866534436657359*^9}, {3.866534476418228*^9, 3.866534643371564*^9}, {
   3.8665354599865093`*^9, 3.866535461011588*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"soundnessErrorQuery", "[", 
  RowBox[{"3", ",", " ", "10", ",", "90"}], "]"}]], "Input",
 CellChangeTimes->{{3.866534444105033*^9, 3.8665344621683683`*^9}}],

Cell[BoxData[
 RowBox[{"-", "128.66496048977416`"}]], "Output",
 CellChangeTimes->{
  3.866534462769476*^9, {3.866534630465889*^9, 3.866534644820195*^9}, 
   3.8665354627276773`*^9, 3.87394974741916*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Number of samples", "Subsection",
 CellChangeTimes->{{3.866534714585775*^9, 3.866534719313325*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "@", "numSamples"}], ";"}], "\n", 
  RowBox[{"(*", " ", "\n", 
   RowBox[{
    RowBox[{
    "Given", " ", "a", " ", "security", " ", "level", " ", "`bitsSec`"}], ",",
     " ", 
    RowBox[{
     RowBox[{"rate", " ", "`\[Rho]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"2", "^", 
        RowBox[{"-", "bitsRate`"}]}], " ", "and", " ", "Johnson", " ", 
       "proximity", " ", "parameter", " ", "`m"}], " ", "\[GreaterEqual]", 
      " ", "3`"}]}], ",", "\n", 
    RowBox[{
    "computes", " ", "the", " ", "number", " ", "of", " ", "samples", " ", 
     "so", " ", "that", " ", "the", " ", "query", " ", "phase", " ", 
     "soundness", " ", "error", " ", "is", " ", "bounded", " ", "by", " ", 
     RowBox[{"`2", "^", 
      RowBox[{"-", 
       RowBox[{"bitsSec`", "."}]}]}]}]}], "\n", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "numSamples", "]"}], "=", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{"\"\<Max\>\"", " ", "\[Rule]", " ", 
      RowBox[{"10", "^", "7"}]}], "\n", "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"numSamples", "[", 
   RowBox[{"bitsSec_", ",", "bitsRate_", ",", "m_", ",", " ", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", 
     RowBox[{"s", ",", "\n", 
      RowBox[{"max", "=", 
       RowBox[{"OptionValue", "[", "\"\<Max\>\"", "]"}]}]}], "\n", "}"}], ",",
     "\n", "\t", 
    RowBox[{
     RowBox[{"s", "=", "1"}], ";", "\n", "\t", 
     RowBox[{"While", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"soundnessErrorQuery", "[", 
          RowBox[{"bitsRate", ",", "m", ",", "s"}], "]"}], " ", ">", " ", 
         RowBox[{"-", " ", "bitsSec"}]}], "\n", "\t\t", "&&", " ", 
        RowBox[{"s", " ", "\[LessEqual]", " ", "max"}]}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"s", "++"}], ";"}]}], "\n", "\t", "]"}], ";", "\t", "\n", 
     "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"soundnessErrorQuery", "[", 
         RowBox[{"bitsRate", ",", "m", ",", "s"}], "]"}], " ", ">", " ", 
        RowBox[{"-", "bitsSec"}]}], ",", "\n", "\t\t", 
       RowBox[{"s", "=", " ", "Infinity"}]}], "\n", "\t", "]"}], ";", "\n", 
     "\n", "s"}]}], "\n", "]"}]}]}], "Code",
 CellChangeTimes->{{3.853243137732882*^9, 3.8532431784290133`*^9}, {
   3.85324321270168*^9, 3.853243219284445*^9}, {3.853243255628603*^9, 
   3.853243274158916*^9}, {3.853244468133183*^9, 3.85324454213272*^9}, {
   3.8532448682490597`*^9, 3.8532448991991577`*^9}, {3.853333452206205*^9, 
   3.853333464225857*^9}, {3.853333514601412*^9, 3.853333515388324*^9}, {
   3.8533335614931707`*^9, 3.853333568603156*^9}, {3.853333605480125*^9, 
   3.853333606763983*^9}, {3.853337134200903*^9, 3.8533371442591047`*^9}, {
   3.853337174411669*^9, 3.853337204413007*^9}, {3.853343101153735*^9, 
   3.8533431325649567`*^9}, {3.853344096744383*^9, 3.853344125000944*^9}, {
   3.853344155490306*^9, 3.853344192967595*^9}, {3.853407630988832*^9, 
   3.8534076342175713`*^9}, {3.853921581571238*^9, 3.853921640696381*^9}, {
   3.853921672916299*^9, 3.853922016743063*^9}, {3.8539220473793707`*^9, 
   3.853922167675811*^9}, {3.853922207535059*^9, 3.853922468847474*^9}, {
   3.853922610143901*^9, 3.853922843429981*^9}, {3.853922969324885*^9, 
   3.8539230175719147`*^9}, {3.853923519477167*^9, 3.853923522364931*^9}, {
   3.853999688068676*^9, 3.853999760345105*^9}, {3.8540002591067257`*^9, 
   3.854000489601186*^9}, {3.854000602322049*^9, 3.8540006169290457`*^9}, {
   3.8540007101044703`*^9, 3.854000714715172*^9}, {3.854001064350595*^9, 
   3.854001067931107*^9}, 3.854001226906674*^9, {3.854079944699792*^9, 
   3.854080018539961*^9}, {3.854097663404332*^9, 3.8540976809858713`*^9}, {
   3.854097726531343*^9, 3.85409777647031*^9}, {3.8540978469013567`*^9, 
   3.8540979676771317`*^9}, {3.854098005707526*^9, 3.854098012565474*^9}, {
   3.85409808509718*^9, 3.854098146698866*^9}, {3.854098253999798*^9, 
   3.854098286713325*^9}, {3.854098350729252*^9, 3.854098354257781*^9}, {
   3.854098469243122*^9, 3.8540985128985863`*^9}, {3.864872080834118*^9, 
   3.86487210210023*^9}, {3.8665347403206787`*^9, 3.866534798201997*^9}, {
   3.866534828778846*^9, 3.866534857514823*^9}, {3.866534912826232*^9, 
   3.8665352916272306`*^9}, {3.8665355302283382`*^9, 3.866535539926063*^9}, {
   3.8665355810463552`*^9, 3.86653563036835*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "112"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "54"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"s", "=", 
  RowBox[{"numSamples", "[", 
   RowBox[{"bitsSec", ",", "bitsRate", ",", "m"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"soundnessErrorQuery", "[", 
    RowBox[{"bitsRate", ",", "m", ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"s", "-", "1"}], ",", "s"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.866534725873249*^9, 3.8665347274577427`*^9}, {
  3.866535324112772*^9, 3.866535359352*^9}, {3.866535667714328*^9, 
  3.866535756810302*^9}}],

Cell[BoxData["76"], "Output",
 CellChangeTimes->{
  3.866535359687619*^9, 3.866535473322501*^9, 3.866535509595014*^9, 
   3.8665356207315598`*^9, {3.866535742326621*^9, 3.866535757100211*^9}, 
   3.873949768085079*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "111.50273830399067`"}], ",", 
   RowBox[{"-", "112.98944148137721`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.866535359687619*^9, 3.866535473322501*^9, 3.866535509595014*^9, 
   3.8665356207315598`*^9, {3.866535742326621*^9, 3.866535757100211*^9}, 
   3.873949768089435*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Proximity parameter to Johnson bound", "Subsection",
 CellChangeTimes->{{3.854103836857011*^9, 3.8541038502653418`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "@", "JohnsonProximity"}], ";"}], "\n", 
  RowBox[{"(*", "\n", 
   RowBox[{
    RowBox[{
    "Johnson", " ", "bound", " ", "proximity", " ", "`m`", " ", "for", " ", 
     "the", " ", "batched", " ", 
     RowBox[{"FRI", ".", "\n", "Given"}], " ", "a", " ", "security", " ", 
     "level", " ", "`bitsSec`"}], ",", " ", 
    RowBox[{
    "the", " ", "size", " ", "of", " ", "the", " ", "sampling", " ", "domain",
      " ", "`bitsDomain`"}], ",", "\n", 
    RowBox[{"the", " ", 
     RowBox[{"(", "logarithmic", ")"}], " ", "code", " ", "rate", " ", 
     "`bitsRate`"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
      "computes", " ", "the", " ", "maximum", " ", "proximity", " ", 
       "parameter", " ", "`m`", " ", "in", " ", "\n", "Lemma", " ", "8.2", 
       " ", 
       RowBox[{"(", 
        RowBox[{"adapted", " ", "to", " ", "algebraic", " ", "batching"}], 
        ")"}], " ", "so", " ", "that", " ", "the", " ", "soundness", " ", 
       "error", " ", "in", " ", "the", " ", "commitment", " ", "phase", " ", 
       "\n", "of", " ", "batched", " ", "FRI", " ", "is", " ", "at", " ", 
       "most", " ", 
       RowBox[{"`2", "^", 
        RowBox[{"-", 
         RowBox[{"bitsSec`", ".", "  ", "\n", "The"}]}]}], " ", "proximity", 
       " ", "parameter", " ", "`m`", " ", "describes", " ", "the", " ", 
       "closeness", " ", "to", " ", "the", " ", "Johnson", " ", "list", " ", 
       "decoding", " ", "bound", " ", "`1"}], "-", 
      RowBox[{
       RowBox[{"\[Sqrt]", "\[Rho]`"}], " ", "via", " ", "\n", "``", "\n", 
       "\t", "\[Delta]"}]}], " ", "=", " ", 
     RowBox[{"1", " ", "-", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"1", "/", "2"}], "m"}]}], ")"}], 
       RowBox[{"\[Sqrt]", "\[Rho]"}], "\n", "``"}]}]}]}], "\n", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "JohnsonProximity", "]"}], "=", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{"\"\<Max\>\"", " ", "\[Rule]", " ", 
      RowBox[{"10", "^", "7"}]}], "\n", "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"JohnsonProximity", "[", "\n", "\t", 
   RowBox[{
   "bitsSec_", ",", "bitsField_", ",", " ", "bitsDomain_", ",", "bitsRate_", 
    ",", 
    RowBox[{"arities_:", "List"}], ",", " ", "numPolys_", ",", "  ", "\n", 
    "\t", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "\n", "]"}], ":=", " ", 
  RowBox[{"Module", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", 
     RowBox[{
      RowBox[{"rho", " ", "=", " ", 
       RowBox[{"2", "^", 
        RowBox[{"(", 
         RowBox[{"-", "bitsRate"}], ")"}]}]}], ",", "\n", 
      RowBox[{"domain", " ", "=", " ", 
       RowBox[{"2", "^", "bitsDomain"}]}], ",", "\n", 
      RowBox[{"fieldSize", " ", "=", " ", 
       RowBox[{"2", "^", "bitsField"}]}], ",", "\n", 
      RowBox[{"maxM", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<Max\>\"", "]"}]}], ",", "\n", "m", 
      ",", " ", "sol"}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "the", " ", "soundness", " ", "error", " ", "for", " ", "the", " ", 
       "commitment", " ", "phase", " ", "of", " ", "the", " ", "batch", " ", 
       "FRI", " ", "argument"}], ",", " ", "\n", "\t", 
      RowBox[{"using", " ", "algebraic", " ", "batching"}]}], "\n", "\t", 
     "*)"}], "\n", "\t", 
    RowBox[{
     RowBox[{"m", "=", "3"}], ";", "\n", "\t", 
     RowBox[{"sol", "=", "3"}], ";", "\n", "\t", 
     RowBox[{"While", "[", " ", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"soundnessErrorCommit", "[", 
          RowBox[{
          "bitsField", ",", "bitsDomain", ",", "bitsRate", ",", "arities", 
           ",", "numPolys", ",", "m"}], "]"}], " ", "\[LessEqual]", "  ", 
         RowBox[{"-", "bitsSec"}]}], "\n", "\t\t", "&&", " ", 
        RowBox[{"m", "<", "maxM"}]}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"sol", " ", "=", " ", "m"}], ";", "\n", "\t\t", 
        RowBox[{"m", "++"}]}]}], "\n", "\t", "]"}], ";", "\n", "\t", "\n", 
     "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"soundnessErrorCommit", "[", 
         RowBox[{
         "bitsField", ",", "bitsDomain", ",", "bitsRate", ",", "arities", ",",
           "numPolys", ",", " ", "sol"}], "]"}], " ", ">", " ", 
        RowBox[{"-", "bitsSec"}]}], ",", "\n", "\t\t", 
       RowBox[{"sol", " ", "=", " ", 
        RowBox[{"-", "Infinity"}]}]}], "\n", "\t", "]"}], ";", "\n", "\n", 
     "\t", "sol"}]}], "\n", "]"}]}]}], "Code",
 CellChangeTimes->{{3.8539128111142263`*^9, 3.853913364589664*^9}, {
   3.853913526175304*^9, 3.853913530479018*^9}, {3.8539142008988237`*^9, 
   3.8539143331352587`*^9}, {3.8539144132202883`*^9, 3.853914453051949*^9}, {
   3.853914562636045*^9, 3.853914825163124*^9}, {3.853914925284952*^9, 
   3.853914926356394*^9}, {3.8539150129900093`*^9, 3.853915014548579*^9}, {
   3.853915160476446*^9, 3.8539152660247927`*^9}, {3.853919944438362*^9, 
   3.853920112096006*^9}, {3.853920199415875*^9, 3.853920218033729*^9}, {
   3.853920268684062*^9, 3.853920278774845*^9}, {3.853920334660555*^9, 
   3.853920376779641*^9}, {3.8539205065336037`*^9, 3.8539206068466682`*^9}, {
   3.853920646410966*^9, 3.85392064744189*^9}, {3.853920712738912*^9, 
   3.853920717168158*^9}, {3.853920762790694*^9, 3.853920820668339*^9}, {
   3.853920879064747*^9, 3.853921050056381*^9}, {3.853921145299128*^9, 
   3.853921149427145*^9}, 3.8539212522850313`*^9, {3.853921282744232*^9, 
   3.853921431898622*^9}, {3.853996327400897*^9, 3.853996349470284*^9}, {
   3.8539964465050583`*^9, 3.853996449563979*^9}, 3.864872402923882*^9, {
   3.864872743061431*^9, 3.864872752871071*^9}, {3.8665256636931562`*^9, 
   3.866525665196931*^9}, {3.8665257346437483`*^9, 3.8665257487080297`*^9}, {
   3.866531206278874*^9, 3.866531503654043*^9}, {3.866531537031228*^9, 
   3.866531596571477*^9}, {3.8665316292838163`*^9, 3.866531744885354*^9}, {
   3.866531852168386*^9, 3.866531856792614*^9}, {3.866531929848448*^9, 
   3.866531930096786*^9}, {3.866532255549745*^9, 3.866532292715907*^9}, {
   3.86653247415795*^9, 3.8665325234520617`*^9}, {3.866532667576709*^9, 
   3.866532682632989*^9}, {3.8665327573749943`*^9, 3.8665328905371943`*^9}, {
   3.866532920616667*^9, 3.86653300351733*^9}, {3.8665330687525597`*^9, 
   3.866533071999447*^9}, {3.866533164293645*^9, 3.866533221260517*^9}, {
   3.8665332808421392`*^9, 3.866533329004423*^9}, {3.8665335414637337`*^9, 
   3.866533544303381*^9}, {3.86653424427236*^9, 3.866534249447021*^9}, {
   3.866534667952532*^9, 3.866534685751088*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "67"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsField", " ", "=", " ", 
   RowBox[{"2", "*", "64"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsDomain", "=", " ", 
   RowBox[{"15", "+", "bitsRate"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", "300"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"m", "=", 
  RowBox[{"JohnsonProximity", "[", 
   RowBox[{
   "bitsSec", ",", "bitsField", ",", "bitsDomain", ",", "bitsRate", ",", 
    "arities", ",", "numPolys"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"soundnessErrorCommit", "[", 
    RowBox[{
    "bitsField", ",", "bitsDomain", ",", "bitsRate", ",", "arities", ",", 
     "numPolys", ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"m", ",", 
    RowBox[{"m", "+", "1"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"s", " ", "=", 
  RowBox[{"numSamples", "[", 
   RowBox[{"bitsSec", ",", "bitsRate", ",", "m"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"soundnessErrorQuery", "[", 
    RowBox[{"bitsRate", ",", "m", ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"s", "-", "1"}], ",", "s"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.853914840673497*^9, 3.853914979874262*^9}, {
   3.8539150320578423`*^9, 3.853915033532813*^9}, 3.853920078857003*^9, {
   3.853920138433316*^9, 3.853920151480822*^9}, {3.85392020561826*^9, 
   3.853920206527965*^9}, 3.853920240666725*^9, {3.853920591995137*^9, 
   3.85392059234592*^9}, {3.8539209396616096`*^9, 3.853920940053832*^9}, {
   3.853920970342388*^9, 3.8539209759125767`*^9}, {3.853921064806788*^9, 
   3.8539211200207777`*^9}, {3.853921165911811*^9, 3.853921241535307*^9}, {
   3.853922481595243*^9, 3.8539224818907948`*^9}, {3.853924712531405*^9, 
   3.8539248343084927`*^9}, {3.853996364952797*^9, 3.85399636511019*^9}, {
   3.8665317783126793`*^9, 3.86653184484166*^9}, {3.866531882123588*^9, 
   3.866531917161026*^9}, {3.86653208809945*^9, 3.866532125484486*^9}, {
   3.866532190957498*^9, 3.866532198941141*^9}, {3.866533018013137*^9, 
   3.8665330557093353`*^9}, {3.866533097630145*^9, 3.866533120126245*^9}, {
   3.866533235743845*^9, 3.866533235919086*^9}, {3.866533351928852*^9, 
   3.8665333765011578`*^9}, {3.866533418106451*^9, 3.866533514474988*^9}, {
   3.8665336499233723`*^9, 3.866533667827919*^9}, 3.8665342566201353`*^9, {
   3.866541742420786*^9, 3.866541744058943*^9}, {3.87343138372128*^9, 
   3.873431435896985*^9}, {3.873431484205874*^9, 3.873431508142907*^9}, {
   3.873431539286503*^9, 3.873431542592196*^9}}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{
  3.853922541088722*^9, {3.853924714089088*^9, 3.853924834631562*^9}, 
   3.853992352821918*^9, {3.853996358125792*^9, 3.853996365590733*^9}, 
   3.853996457524887*^9, 3.86487188773027*^9, 3.8665317658368597`*^9, {
   3.866531817438426*^9, 3.866531933868507*^9}, {3.866532103248619*^9, 
   3.866532126148254*^9}, {3.866532186809866*^9, 3.866532199437954*^9}, 
   3.8665329023000803`*^9, {3.8665329837104607`*^9, 3.866533120869697*^9}, {
   3.866533227751989*^9, 3.86653323619937*^9}, {3.866533333748081*^9, 
   3.8665333769273*^9}, {3.866533418918993*^9, 3.86653351594842*^9}, 
   3.866533548746573*^9, {3.866533654709194*^9, 3.86653366821566*^9}, 
   3.866534257106785*^9, 3.866541746136635*^9, 3.873431219612486*^9, {
   3.8734313751182833`*^9, 3.873431436522455*^9}, {3.873431535282131*^9, 
   3.8734315430194883`*^9}, 3.873949823089367*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "69.20706585277944`"}], ",", 
   RowBox[{"-", "66.66907529767022`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.853922541088722*^9, {3.853924714089088*^9, 3.853924834631562*^9}, 
   3.853992352821918*^9, {3.853996358125792*^9, 3.853996365590733*^9}, 
   3.853996457524887*^9, 3.86487188773027*^9, 3.8665317658368597`*^9, {
   3.866531817438426*^9, 3.866531933868507*^9}, {3.866532103248619*^9, 
   3.866532126148254*^9}, {3.866532186809866*^9, 3.866532199437954*^9}, 
   3.8665329023000803`*^9, {3.8665329837104607`*^9, 3.866533120869697*^9}, {
   3.866533227751989*^9, 3.86653323619937*^9}, {3.866533333748081*^9, 
   3.8665333769273*^9}, {3.866533418918993*^9, 3.86653351594842*^9}, 
   3.866533548746573*^9, {3.866533654709194*^9, 3.86653366821566*^9}, 
   3.866534257106785*^9, 3.866541746136635*^9, 3.873431219612486*^9, {
   3.8734313751182833`*^9, 3.873431436522455*^9}, {3.873431535282131*^9, 
   3.8734315430194883`*^9}, 3.8739498230935507`*^9}],

Cell[BoxData["53"], "Output",
 CellChangeTimes->{
  3.853922541088722*^9, {3.853924714089088*^9, 3.853924834631562*^9}, 
   3.853992352821918*^9, {3.853996358125792*^9, 3.853996365590733*^9}, 
   3.853996457524887*^9, 3.86487188773027*^9, 3.8665317658368597`*^9, {
   3.866531817438426*^9, 3.866531933868507*^9}, {3.866532103248619*^9, 
   3.866532126148254*^9}, {3.866532186809866*^9, 3.866532199437954*^9}, 
   3.8665329023000803`*^9, {3.8665329837104607`*^9, 3.866533120869697*^9}, {
   3.866533227751989*^9, 3.86653323619937*^9}, {3.866533333748081*^9, 
   3.8665333769273*^9}, {3.866533418918993*^9, 3.86653351594842*^9}, 
   3.866533548746573*^9, {3.866533654709194*^9, 3.86653366821566*^9}, 
   3.866534257106785*^9, 3.866541746136635*^9, 3.873431219612486*^9, {
   3.8734313751182833`*^9, 3.873431436522455*^9}, {3.873431535282131*^9, 
   3.8734315430194883`*^9}, 3.873949823099983*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "66.4355940905047`"}], ",", 
   RowBox[{"-", "67.71320166916826`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.853922541088722*^9, {3.853924714089088*^9, 3.853924834631562*^9}, 
   3.853992352821918*^9, {3.853996358125792*^9, 3.853996365590733*^9}, 
   3.853996457524887*^9, 3.86487188773027*^9, 3.8665317658368597`*^9, {
   3.866531817438426*^9, 3.866531933868507*^9}, {3.866532103248619*^9, 
   3.866532126148254*^9}, {3.866532186809866*^9, 3.866532199437954*^9}, 
   3.8665329023000803`*^9, {3.8665329837104607`*^9, 3.866533120869697*^9}, {
   3.866533227751989*^9, 3.86653323619937*^9}, {3.866533333748081*^9, 
   3.8665333769273*^9}, {3.866533418918993*^9, 3.86653351594842*^9}, 
   3.866533548746573*^9, {3.866533654709194*^9, 3.86653366821566*^9}, 
   3.866534257106785*^9, 3.866541746136635*^9, 3.873431219612486*^9, {
   3.8734313751182833`*^9, 3.873431436522455*^9}, {3.873431535282131*^9, 
   3.8734315430194883`*^9}, 3.873949823104007*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "72"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsField", " ", "=", " ", 
   RowBox[{"2", "*", "64"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsDomain", "=", " ", 
   RowBox[{"15", "+", "bitsRate"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", "300"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"m", "=", 
  RowBox[{"JohnsonProximity", "[", 
   RowBox[{
   "bitsSec", ",", "bitsField", ",", "bitsDomain", ",", "bitsRate", ",", 
    "arities", ",", "numPolys"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"soundnessErrorCommit", "[", 
    RowBox[{
    "bitsField", ",", "bitsDomain", ",", "bitsRate", ",", "arities", ",", 
     "numPolys", ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"m", ",", 
    RowBox[{"m", "+", "1"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"s", " ", "=", 
  RowBox[{"numSamples", "[", 
   RowBox[{"bitsSec", ",", "bitsRate", ",", "m"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"soundnessErrorQuery", "[", 
    RowBox[{"bitsRate", ",", "m", ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"s", "-", "1"}], ",", "s"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.853914840673497*^9, 3.853914979874262*^9}, {
   3.8539150320578423`*^9, 3.853915033532813*^9}, 3.853920078857003*^9, {
   3.853920138433316*^9, 3.853920151480822*^9}, {3.85392020561826*^9, 
   3.853920206527965*^9}, 3.853920240666725*^9, {3.853920591995137*^9, 
   3.85392059234592*^9}, {3.8539209396616096`*^9, 3.853920940053832*^9}, {
   3.853920970342388*^9, 3.8539209759125767`*^9}, {3.853921064806788*^9, 
   3.8539211200207777`*^9}, {3.853921165911811*^9, 3.853921241535307*^9}, {
   3.853922481595243*^9, 3.8539224818907948`*^9}, {3.853924712531405*^9, 
   3.8539248343084927`*^9}, {3.853996364952797*^9, 3.85399636511019*^9}, {
   3.8665317783126793`*^9, 3.86653184484166*^9}, {3.866531882123588*^9, 
   3.866531917161026*^9}, {3.86653208809945*^9, 3.866532125484486*^9}, {
   3.866532190957498*^9, 3.866532198941141*^9}, {3.866533018013137*^9, 
   3.8665330557093353`*^9}, {3.866533097630145*^9, 3.866533120126245*^9}, {
   3.866533235743845*^9, 3.866533235919086*^9}, {3.866533351928852*^9, 
   3.8665333765011578`*^9}, {3.866533418106451*^9, 3.866533514474988*^9}, {
   3.866533561938814*^9, 3.866533586568266*^9}, {3.866533662546893*^9, 
   3.866533663585894*^9}, {3.866534262857369*^9, 3.866534263078171*^9}, {
   3.866535973352631*^9, 3.866536013776269*^9}, {3.866536073529648*^9, 
   3.866536116520658*^9}, {3.866536432306612*^9, 3.866536494460368*^9}}],

Cell[BoxData[
 RowBox[{"-", "\[Infinity]"}]], "Output",
 CellChangeTimes->{
  3.853922541088722*^9, {3.853924714089088*^9, 3.853924834631562*^9}, 
   3.853992352821918*^9, {3.853996358125792*^9, 3.853996365590733*^9}, 
   3.853996457524887*^9, 3.86487188773027*^9, 3.8665317658368597`*^9, {
   3.866531817438426*^9, 3.866531933868507*^9}, {3.866532103248619*^9, 
   3.866532126148254*^9}, {3.866532186809866*^9, 3.866532199437954*^9}, 
   3.8665329023000803`*^9, {3.8665329837104607`*^9, 3.866533120869697*^9}, {
   3.866533227751989*^9, 3.86653323619937*^9}, {3.866533333748081*^9, 
   3.8665333769273*^9}, {3.866533418918993*^9, 3.86653351594842*^9}, {
   3.866533548746573*^9, 3.866533587116596*^9}, 3.866533664047838*^9, 
   3.8665342635082693`*^9, {3.866535975585615*^9, 3.8665360147118797`*^9}, {
   3.86653607463708*^9, 3.866536116852367*^9}, 3.866536456838888*^9, 
   3.866536494799035*^9, 3.873431223675667*^9, 3.873949826759795*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[Infinity]", ",", "\[Infinity]"}], "}"}]], "Output",
 CellChangeTimes->{
  3.853922541088722*^9, {3.853924714089088*^9, 3.853924834631562*^9}, 
   3.853992352821918*^9, {3.853996358125792*^9, 3.853996365590733*^9}, 
   3.853996457524887*^9, 3.86487188773027*^9, 3.8665317658368597`*^9, {
   3.866531817438426*^9, 3.866531933868507*^9}, {3.866532103248619*^9, 
   3.866532126148254*^9}, {3.866532186809866*^9, 3.866532199437954*^9}, 
   3.8665329023000803`*^9, {3.8665329837104607`*^9, 3.866533120869697*^9}, {
   3.866533227751989*^9, 3.86653323619937*^9}, {3.866533333748081*^9, 
   3.8665333769273*^9}, {3.866533418918993*^9, 3.86653351594842*^9}, {
   3.866533548746573*^9, 3.866533587116596*^9}, 3.866533664047838*^9, 
   3.8665342635082693`*^9, {3.866535975585615*^9, 3.8665360147118797`*^9}, {
   3.86653607463708*^9, 3.866536116852367*^9}, 3.866536456838888*^9, 
   3.866536494799035*^9, 3.873431223675667*^9, 3.873949826763934*^9}],

Cell[BoxData["36"], "Output",
 CellChangeTimes->{
  3.853922541088722*^9, {3.853924714089088*^9, 3.853924834631562*^9}, 
   3.853992352821918*^9, {3.853996358125792*^9, 3.853996365590733*^9}, 
   3.853996457524887*^9, 3.86487188773027*^9, 3.8665317658368597`*^9, {
   3.866531817438426*^9, 3.866531933868507*^9}, {3.866532103248619*^9, 
   3.866532126148254*^9}, {3.866532186809866*^9, 3.866532199437954*^9}, 
   3.8665329023000803`*^9, {3.8665329837104607`*^9, 3.866533120869697*^9}, {
   3.866533227751989*^9, 3.86653323619937*^9}, {3.866533333748081*^9, 
   3.8665333769273*^9}, {3.866533418918993*^9, 3.86653351594842*^9}, {
   3.866533548746573*^9, 3.866533587116596*^9}, 3.866533664047838*^9, 
   3.8665342635082693`*^9, {3.866535975585615*^9, 3.8665360147118797`*^9}, {
   3.86653607463708*^9, 3.866536116852367*^9}, 3.866536456838888*^9, 
   3.866536494799035*^9, 3.873431223675667*^9, 3.873949826767736*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "70.`"}], ",", 
   RowBox[{"-", "72.`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.853922541088722*^9, {3.853924714089088*^9, 3.853924834631562*^9}, 
   3.853992352821918*^9, {3.853996358125792*^9, 3.853996365590733*^9}, 
   3.853996457524887*^9, 3.86487188773027*^9, 3.8665317658368597`*^9, {
   3.866531817438426*^9, 3.866531933868507*^9}, {3.866532103248619*^9, 
   3.866532126148254*^9}, {3.866532186809866*^9, 3.866532199437954*^9}, 
   3.8665329023000803`*^9, {3.8665329837104607`*^9, 3.866533120869697*^9}, {
   3.866533227751989*^9, 3.86653323619937*^9}, {3.866533333748081*^9, 
   3.8665333769273*^9}, {3.866533418918993*^9, 3.86653351594842*^9}, {
   3.866533548746573*^9, 3.866533587116596*^9}, 3.866533664047838*^9, 
   3.8665342635082693`*^9, {3.866535975585615*^9, 3.8665360147118797`*^9}, {
   3.86653607463708*^9, 3.866536116852367*^9}, 3.866536456838888*^9, 
   3.866536494799035*^9, 3.873431223675667*^9, 3.8739498267711782`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "112"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsField", " ", "=", " ", 
   RowBox[{"3", "*", "64"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsDomain", "=", " ", 
   RowBox[{"15", "+", "bitsRate"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", "300"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"m", "=", 
  RowBox[{"JohnsonProximity", "[", 
   RowBox[{
   "bitsSec", ",", "bitsField", ",", "bitsDomain", ",", "bitsRate", ",", 
    "arities", ",", "numPolys"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"soundnessErrorCommit", "[", 
    RowBox[{
    "bitsField", ",", "bitsDomain", ",", "bitsRate", ",", "arities", ",", 
     "numPolys", ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"m", ",", 
    RowBox[{"m", "+", "1"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"s", " ", "=", 
  RowBox[{"numSamples", "[", 
   RowBox[{"bitsSec", ",", "bitsRate", ",", "m"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"soundnessErrorQuery", "[", 
    RowBox[{"bitsRate", ",", "m", ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"s", "-", "1"}], ",", "s"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.853914840673497*^9, 3.853914979874262*^9}, {
   3.8539150320578423`*^9, 3.853915033532813*^9}, 3.853920078857003*^9, {
   3.853920138433316*^9, 3.853920151480822*^9}, {3.85392020561826*^9, 
   3.853920206527965*^9}, 3.853920240666725*^9, {3.853920591995137*^9, 
   3.85392059234592*^9}, {3.8539209396616096`*^9, 3.853920940053832*^9}, {
   3.853920970342388*^9, 3.8539209759125767`*^9}, {3.853921064806788*^9, 
   3.8539211200207777`*^9}, {3.853921165911811*^9, 3.853921241535307*^9}, {
   3.853922481595243*^9, 3.8539224818907948`*^9}, {3.853924712531405*^9, 
   3.8539248343084927`*^9}, {3.853996364952797*^9, 3.85399636511019*^9}, {
   3.8665317783126793`*^9, 3.86653184484166*^9}, {3.866531882123588*^9, 
   3.866531917161026*^9}, {3.86653208809945*^9, 3.866532125484486*^9}, {
   3.866532190957498*^9, 3.866532198941141*^9}, {3.866533018013137*^9, 
   3.8665330557093353`*^9}, {3.866533097630145*^9, 3.866533120126245*^9}, {
   3.866533235743845*^9, 3.866533235919086*^9}, {3.866533351928852*^9, 
   3.8665333765011578`*^9}, {3.866533418106451*^9, 3.866533514474988*^9}, {
   3.866533561938814*^9, 3.866533586568266*^9}, {3.866533662546893*^9, 
   3.866533663585894*^9}, {3.866534262857369*^9, 3.866534263078171*^9}, {
   3.866535973352631*^9, 3.866536013776269*^9}, {3.866536073529648*^9, 
   3.866536116520658*^9}, {3.8665367559257183`*^9, 3.866536774806704*^9}, {
   3.86653699600354*^9, 3.866536996936613*^9}}],

Cell[BoxData["19"], "Output",
 CellChangeTimes->{
  3.853922541088722*^9, {3.853924714089088*^9, 3.853924834631562*^9}, 
   3.853992352821918*^9, {3.853996358125792*^9, 3.853996365590733*^9}, 
   3.853996457524887*^9, 3.86487188773027*^9, 3.8665317658368597`*^9, {
   3.866531817438426*^9, 3.866531933868507*^9}, {3.866532103248619*^9, 
   3.866532126148254*^9}, {3.866532186809866*^9, 3.866532199437954*^9}, 
   3.8665329023000803`*^9, {3.8665329837104607`*^9, 3.866533120869697*^9}, {
   3.866533227751989*^9, 3.86653323619937*^9}, {3.866533333748081*^9, 
   3.8665333769273*^9}, {3.866533418918993*^9, 3.86653351594842*^9}, {
   3.866533548746573*^9, 3.866533587116596*^9}, 3.866533664047838*^9, 
   3.8665342635082693`*^9, {3.866535975585615*^9, 3.8665360147118797`*^9}, {
   3.86653607463708*^9, 3.866536116852367*^9}, 3.866536775521379*^9, 
   3.866536998724785*^9, 3.873949831529633*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "112.36073477589663`"}], ",", 
   RowBox[{"-", "111.85568627560579`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.853922541088722*^9, {3.853924714089088*^9, 3.853924834631562*^9}, 
   3.853992352821918*^9, {3.853996358125792*^9, 3.853996365590733*^9}, 
   3.853996457524887*^9, 3.86487188773027*^9, 3.8665317658368597`*^9, {
   3.866531817438426*^9, 3.866531933868507*^9}, {3.866532103248619*^9, 
   3.866532126148254*^9}, {3.866532186809866*^9, 3.866532199437954*^9}, 
   3.8665329023000803`*^9, {3.8665329837104607`*^9, 3.866533120869697*^9}, {
   3.866533227751989*^9, 3.86653323619937*^9}, {3.866533333748081*^9, 
   3.8665333769273*^9}, {3.866533418918993*^9, 3.86653351594842*^9}, {
   3.866533548746573*^9, 3.866533587116596*^9}, 3.866533664047838*^9, 
   3.8665342635082693`*^9, {3.866535975585615*^9, 3.8665360147118797`*^9}, {
   3.86653607463708*^9, 3.866536116852367*^9}, 3.866536775521379*^9, 
   3.866536998724785*^9, 3.873949831533354*^9}],

Cell[BoxData["58"], "Output",
 CellChangeTimes->{
  3.853922541088722*^9, {3.853924714089088*^9, 3.853924834631562*^9}, 
   3.853992352821918*^9, {3.853996358125792*^9, 3.853996365590733*^9}, 
   3.853996457524887*^9, 3.86487188773027*^9, 3.8665317658368597`*^9, {
   3.866531817438426*^9, 3.866531933868507*^9}, {3.866532103248619*^9, 
   3.866532126148254*^9}, {3.866532186809866*^9, 3.866532199437954*^9}, 
   3.8665329023000803`*^9, {3.8665329837104607`*^9, 3.866533120869697*^9}, {
   3.866533227751989*^9, 3.86653323619937*^9}, {3.866533333748081*^9, 
   3.8665333769273*^9}, {3.866533418918993*^9, 3.86653351594842*^9}, {
   3.866533548746573*^9, 3.866533587116596*^9}, 3.866533664047838*^9, 
   3.8665342635082693`*^9, {3.866535975585615*^9, 3.8665360147118797`*^9}, {
   3.86653607463708*^9, 3.866536116852367*^9}, 3.866536775521379*^9, 
   3.866536998724785*^9, 3.8739498315372*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "111.86394179113621`"}], ",", 
   RowBox[{"-", "113.82646708571754`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.853922541088722*^9, {3.853924714089088*^9, 3.853924834631562*^9}, 
   3.853992352821918*^9, {3.853996358125792*^9, 3.853996365590733*^9}, 
   3.853996457524887*^9, 3.86487188773027*^9, 3.8665317658368597`*^9, {
   3.866531817438426*^9, 3.866531933868507*^9}, {3.866532103248619*^9, 
   3.866532126148254*^9}, {3.866532186809866*^9, 3.866532199437954*^9}, 
   3.8665329023000803`*^9, {3.8665329837104607`*^9, 3.866533120869697*^9}, {
   3.866533227751989*^9, 3.86653323619937*^9}, {3.866533333748081*^9, 
   3.8665333769273*^9}, {3.866533418918993*^9, 3.86653351594842*^9}, {
   3.866533548746573*^9, 3.866533587116596*^9}, 3.866533664047838*^9, 
   3.8665342635082693`*^9, {3.866535975585615*^9, 3.8665360147118797`*^9}, {
   3.86653607463708*^9, 3.866536116852367*^9}, 3.866536775521379*^9, 
   3.866536998724785*^9, 3.8739498315408163`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "128"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsField", " ", "=", " ", 
   RowBox[{"3", "*", "64"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsDomain", "=", " ", 
   RowBox[{"15", "+", "bitsRate"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", "300"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"m", "=", 
  RowBox[{"JohnsonProximity", "[", 
   RowBox[{
   "bitsSec", ",", "bitsField", ",", "bitsDomain", ",", "bitsRate", ",", 
    "arities", ",", "numPolys"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"soundnessErrorCommit", "[", 
    RowBox[{
    "bitsField", ",", "bitsDomain", ",", "bitsRate", ",", "arities", ",", 
     "numPolys", ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"m", ",", 
    RowBox[{"m", "+", "1"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"s", " ", "=", 
  RowBox[{"numSamples", "[", 
   RowBox[{"bitsSec", ",", "bitsRate", ",", "m"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"soundnessErrorQuery", "[", 
    RowBox[{"bitsRate", ",", "m", ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"s", "-", "1"}], ",", "s"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.853914840673497*^9, 3.853914979874262*^9}, {
   3.8539150320578423`*^9, 3.853915033532813*^9}, 3.853920078857003*^9, {
   3.853920138433316*^9, 3.853920151480822*^9}, {3.85392020561826*^9, 
   3.853920206527965*^9}, 3.853920240666725*^9, {3.853920591995137*^9, 
   3.85392059234592*^9}, {3.8539209396616096`*^9, 3.853920940053832*^9}, {
   3.853920970342388*^9, 3.8539209759125767`*^9}, {3.853921064806788*^9, 
   3.8539211200207777`*^9}, {3.853921165911811*^9, 3.853921241535307*^9}, {
   3.853922481595243*^9, 3.8539224818907948`*^9}, {3.853924712531405*^9, 
   3.8539248343084927`*^9}, {3.853996364952797*^9, 3.85399636511019*^9}, {
   3.8665317783126793`*^9, 3.86653184484166*^9}, {3.866531882123588*^9, 
   3.866531917161026*^9}, {3.86653208809945*^9, 3.866532125484486*^9}, {
   3.866532190957498*^9, 3.866532198941141*^9}, {3.866533018013137*^9, 
   3.8665330557093353`*^9}, {3.866533097630145*^9, 3.866533120126245*^9}, {
   3.866533235743845*^9, 3.866533235919086*^9}, {3.866533351928852*^9, 
   3.8665333765011578`*^9}, {3.866533418106451*^9, 3.866533514474988*^9}, {
   3.866533561938814*^9, 3.866533586568266*^9}, {3.866533662546893*^9, 
   3.866533663585894*^9}, {3.866534262857369*^9, 3.866534263078171*^9}, {
   3.866535973352631*^9, 3.866536013776269*^9}, {3.866536073529648*^9, 
   3.866536116520658*^9}, {3.8665367559257183`*^9, 3.866536774806704*^9}}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{
  3.853922541088722*^9, {3.853924714089088*^9, 3.853924834631562*^9}, 
   3.853992352821918*^9, {3.853996358125792*^9, 3.853996365590733*^9}, 
   3.853996457524887*^9, 3.86487188773027*^9, 3.8665317658368597`*^9, {
   3.866531817438426*^9, 3.866531933868507*^9}, {3.866532103248619*^9, 
   3.866532126148254*^9}, {3.866532186809866*^9, 3.866532199437954*^9}, 
   3.8665329023000803`*^9, {3.8665329837104607`*^9, 3.866533120869697*^9}, {
   3.866533227751989*^9, 3.86653323619937*^9}, {3.866533333748081*^9, 
   3.8665333769273*^9}, {3.866533418918993*^9, 3.86653351594842*^9}, {
   3.866533548746573*^9, 3.866533587116596*^9}, 3.866533664047838*^9, 
   3.8665342635082693`*^9, {3.866535975585615*^9, 3.8665360147118797`*^9}, {
   3.86653607463708*^9, 3.866536116852367*^9}, 3.866536775521379*^9, 
   3.873949835473857*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "129.7070658533417`"}], ",", 
   RowBox[{"-", "127.16907529779469`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.853922541088722*^9, {3.853924714089088*^9, 3.853924834631562*^9}, 
   3.853992352821918*^9, {3.853996358125792*^9, 3.853996365590733*^9}, 
   3.853996457524887*^9, 3.86487188773027*^9, 3.8665317658368597`*^9, {
   3.866531817438426*^9, 3.866531933868507*^9}, {3.866532103248619*^9, 
   3.866532126148254*^9}, {3.866532186809866*^9, 3.866532199437954*^9}, 
   3.8665329023000803`*^9, {3.8665329837104607`*^9, 3.866533120869697*^9}, {
   3.866533227751989*^9, 3.86653323619937*^9}, {3.866533333748081*^9, 
   3.8665333769273*^9}, {3.866533418918993*^9, 3.86653351594842*^9}, {
   3.866533548746573*^9, 3.866533587116596*^9}, 3.866533664047838*^9, 
   3.8665342635082693`*^9, {3.866535975585615*^9, 3.8665360147118797`*^9}, {
   3.86653607463708*^9, 3.866536116852367*^9}, 3.866536775521379*^9, 
   3.873949835476563*^9}],

Cell[BoxData["73"], "Output",
 CellChangeTimes->{
  3.853922541088722*^9, {3.853924714089088*^9, 3.853924834631562*^9}, 
   3.853992352821918*^9, {3.853996358125792*^9, 3.853996365590733*^9}, 
   3.853996457524887*^9, 3.86487188773027*^9, 3.8665317658368597`*^9, {
   3.866531817438426*^9, 3.866531933868507*^9}, {3.866532103248619*^9, 
   3.866532126148254*^9}, {3.866532186809866*^9, 3.866532199437954*^9}, 
   3.8665329023000803`*^9, {3.8665329837104607`*^9, 3.866533120869697*^9}, {
   3.866533227751989*^9, 3.86653323619937*^9}, {3.866533333748081*^9, 
   3.8665333769273*^9}, {3.866533418918993*^9, 3.86653351594842*^9}, {
   3.866533548746573*^9, 3.866533587116596*^9}, 3.866533664047838*^9, 
   3.8665342635082693`*^9, {3.866535975585615*^9, 3.8665360147118797`*^9}, {
   3.86653607463708*^9, 3.866536116852367*^9}, 3.866536775521379*^9, 
   3.87394983547845*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "127.98774566377574`"}], ",", 
   RowBox[{"-", "129.7653532424393`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.853922541088722*^9, {3.853924714089088*^9, 3.853924834631562*^9}, 
   3.853992352821918*^9, {3.853996358125792*^9, 3.853996365590733*^9}, 
   3.853996457524887*^9, 3.86487188773027*^9, 3.8665317658368597`*^9, {
   3.866531817438426*^9, 3.866531933868507*^9}, {3.866532103248619*^9, 
   3.866532126148254*^9}, {3.866532186809866*^9, 3.866532199437954*^9}, 
   3.8665329023000803`*^9, {3.8665329837104607`*^9, 3.866533120869697*^9}, {
   3.866533227751989*^9, 3.86653323619937*^9}, {3.866533333748081*^9, 
   3.8665333769273*^9}, {3.866533418918993*^9, 3.86653351594842*^9}, {
   3.866533548746573*^9, 3.866533587116596*^9}, 3.866533664047838*^9, 
   3.8665342635082693`*^9, {3.866535975585615*^9, 3.8665360147118797`*^9}, {
   3.86653607463708*^9, 3.866536116852367*^9}, 3.866536775521379*^9, 
   3.873949835480193*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "112"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsField", " ", "=", " ", 
   RowBox[{"3", "*", "64"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsDomain", "=", " ", 
   RowBox[{"15", "+", "bitsRate"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", "300"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"m", "=", 
  RowBox[{"JohnsonProximity", "[", 
   RowBox[{
   "bitsSec", ",", "bitsField", ",", "bitsDomain", ",", "bitsRate", ",", 
    "arities", ",", "numPolys"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"soundnessErrorCommit", "[", 
    RowBox[{
    "bitsField", ",", "bitsDomain", ",", "bitsRate", ",", "arities", ",", 
     "numPolys", ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"m", ",", 
    RowBox[{"m", "+", "1"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"s", " ", "=", 
  RowBox[{"numSamples", "[", 
   RowBox[{"bitsSec", ",", "bitsRate", ",", "m"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"soundnessErrorQuery", "[", 
    RowBox[{"bitsRate", ",", "m", ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"s", "-", "1"}], ",", "s"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.853914840673497*^9, 3.853914979874262*^9}, {
   3.8539150320578423`*^9, 3.853915033532813*^9}, 3.853920078857003*^9, {
   3.853920138433316*^9, 3.853920151480822*^9}, {3.85392020561826*^9, 
   3.853920206527965*^9}, 3.853920240666725*^9, {3.853920591995137*^9, 
   3.85392059234592*^9}, {3.8539209396616096`*^9, 3.853920940053832*^9}, {
   3.853920970342388*^9, 3.8539209759125767`*^9}, {3.853921064806788*^9, 
   3.8539211200207777`*^9}, {3.853921165911811*^9, 3.853921241535307*^9}, {
   3.853922481595243*^9, 3.8539224818907948`*^9}, 3.853924662534011*^9, {
   3.8539248437973213`*^9, 3.853924843873407*^9}, {3.866533613831568*^9, 
   3.8665336310741158`*^9}, {3.8665336739326153`*^9, 3.866533690203829*^9}, 
   3.866534269676484*^9, {3.866535874271337*^9, 3.8665358796132*^9}, {
   3.866537250547151*^9, 3.866537280596209*^9}, {3.866537316277216*^9, 
   3.8665373496694527`*^9}}],

Cell[BoxData["13"], "Output",
 CellChangeTimes->{
  3.853924698927374*^9, 3.853924844271329*^9, 3.853996370641461*^9, 
   3.853996459982724*^9, {3.866533624870172*^9, 3.866533643621376*^9}, {
   3.866533675185371*^9, 3.866533691204261*^9}, 3.8665342706193933`*^9, {
   3.86653587523549*^9, 3.866535879867959*^9}, {3.866537271244458*^9, 
   3.8665372815224667`*^9}, {3.86653732174642*^9, 3.866537350031961*^9}, 
   3.873949838308839*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "112.57433779278809`"}], ",", 
   RowBox[{"-", "111.85268334203936`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.853924698927374*^9, 3.853924844271329*^9, 3.853996370641461*^9, 
   3.853996459982724*^9, {3.866533624870172*^9, 3.866533643621376*^9}, {
   3.866533675185371*^9, 3.866533691204261*^9}, 3.8665342706193933`*^9, {
   3.86653587523549*^9, 3.866535879867959*^9}, {3.866537271244458*^9, 
   3.8665372815224667`*^9}, {3.86653732174642*^9, 3.866537350031961*^9}, 
   3.873949838310554*^9}],

Cell[BoxData["46"], "Output",
 CellChangeTimes->{
  3.853924698927374*^9, 3.853924844271329*^9, 3.853996370641461*^9, 
   3.853996459982724*^9, {3.866533624870172*^9, 3.866533643621376*^9}, {
   3.866533675185371*^9, 3.866533691204261*^9}, 3.8665342706193933`*^9, {
   3.86653587523549*^9, 3.866535879867959*^9}, {3.866537271244458*^9, 
   3.8665372815224667`*^9}, {3.86653732174642*^9, 3.866537350031961*^9}, 
   3.873949838312265*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "110.04984971899306`"}], ",", 
   RowBox[{"-", "112.49540193497069`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.853924698927374*^9, 3.853924844271329*^9, 3.853996370641461*^9, 
   3.853996459982724*^9, {3.866533624870172*^9, 3.866533643621376*^9}, {
   3.866533675185371*^9, 3.866533691204261*^9}, 3.8665342706193933`*^9, {
   3.86653587523549*^9, 3.866535879867959*^9}, {3.866537271244458*^9, 
   3.8665372815224667`*^9}, {3.86653732174642*^9, 3.866537350031961*^9}, 
   3.873949838313919*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"bitsSec", "=", "112"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"if", " ", "we", " ", "grind", " ", "16", " ", "bits"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsField", " ", "=", " ", 
   RowBox[{"3", "*", "64"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsDomain", "=", " ", 
   RowBox[{"15", "+", "bitsRate"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", "300"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"m", "=", 
  RowBox[{"JohnsonProximity", "[", 
   RowBox[{
   "bitsSec", ",", "bitsField", ",", "bitsDomain", ",", "bitsRate", ",", 
    "arities", ",", "numPolys"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"soundnessErrorCommit", "[", 
    RowBox[{
    "bitsField", ",", "bitsDomain", ",", "bitsRate", ",", "arities", ",", 
     "numPolys", ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"m", ",", 
    RowBox[{"m", "+", "1"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.86653258223068*^9, 3.866532607336454*^9}, {
   3.866532639176531*^9, 3.866532659338109*^9}, {3.866533704613625*^9, 
   3.8665337561367273`*^9}, 3.86653427579255*^9}],

Cell[BoxData["28"], "Output",
 CellChangeTimes->{
  3.866532608758957*^9, {3.866532639768263*^9, 3.866532659850617*^9}, {
   3.8665337139835863`*^9, 3.866533720110858*^9}, 3.866533757560594*^9, 
   3.866534276688614*^9, 3.873949841237774*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "112.02832020877918`"}], ",", 
   RowBox[{"-", "111.68004896239948`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.866532608758957*^9, {3.866532639768263*^9, 3.866532659850617*^9}, {
   3.8665337139835863`*^9, 3.866533720110858*^9}, 3.866533757560594*^9, 
   3.866534276688614*^9, 3.8739498412414417`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Proof size and rough prover cost\
\>", "Subsection",
 CellChangeTimes->{{3.8541039254503717`*^9, 3.854103931187179*^9}, 
   3.85624816164758*^9, {3.866540988497232*^9, 3.866540989464652*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "@", "prover"}], ";"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Computes", " ", "the", " ", "prover", " ", "cost", " ", 
      RowBox[{"(", 
       RowBox[{"as", " ", "the", " ", "number", " ", "of", " ", "hashes"}], 
       ")"}], " ", "and", " ", "the", " ", "proof", " ", "size", " ", 
      RowBox[{"(", 
       RowBox[{"in", " ", "field", " ", "elements"}], ")"}], "\n", "for", " ",
       "a", " ", "batch", " ", "FRI", " ", "prover", " ", "given", " ", "a", 
      " ", "family", " ", "of", " ", "groups", " ", "of", " ", "polynomials", 
      " ", "of", " ", "degree", " ", 
      RowBox[{"`2", "^", "bitsCode`"}], " ", "specified", " ", "by", "\n", 
      "``", "\n", "\t", "numPolys"}], " ", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NumPolys", "[", "1", "]"}], ",", " ", 
          RowBox[{"NumPolys", "[", "2", "]"}], ",", ".."}], "}"}], ".", "\n", 
        "``"}], " ", "\n", "Each", " ", "group", " ", "of", " ", 
       RowBox[{"`num_polys", "[", "i", "]"}], "`", " ", "polynomials", " ", 
       "is", " ", "committed", " ", "by", " ", "a", " ", "single", " ", 
       "Merkle", " ", 
       RowBox[{"root", ".", "\n", "\n", "The"}], " ", "FRI", " ", 
       "parameters", " ", "are", " ", "given", " ", "by"}], " ", "\n", "\t", 
      "-", " ", 
      RowBox[{"`bitsSec`", " ", "bits", " ", "of", " ", "security"}]}]}], ",",
     " ", "\n", "\t", 
    RowBox[{
     RowBox[{"-", " ", "`bitsRate`"}], " ", "for", " ", "the", " ", "low", 
     " ", "degree", " ", "argument"}], ",", " ", 
    RowBox[{"given", " ", "in", " ", "bits", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"i", ".", "e", ".", " ", 
        RowBox[{"`2", "^", 
         RowBox[{"-", "rate`"}]}]}], " ", "is", " ", "the", " ", "code", " ", 
       "rate"}], ")"}]}], ",", " ", "\n", "\t", 
    RowBox[{"-", " ", "`arities`"}], ",", " ", 
    RowBox[{"the", " ", "reduction", " ", "strategy"}], ",", " ", 
    RowBox[{
     RowBox[{"i", ".", "e", ".", " ", "the"}], " ", "arity", " ", "list", " ",
      "of", " ", "the", " ", "FRI", " ", "reduction", " ", "steps", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"i", ".", "e", ".", " ", "we"}], " ", "have", " ", 
       RowBox[{"2", "^", 
        RowBox[{"arity", "[", "i", "]"}]}], " ", "at", " ", "step", " ", 
       "i"}], ")"}]}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"-", " ", "`capLevel`"}], " ", "gives", " ", "the", " ", "level",
      " ", 
     RowBox[{"(", 
      RowBox[{"from", " ", "the", " ", "root"}], ")"}], " ", "of", " ", "the",
      " ", "Merkle", " ", 
     RowBox[{"caps", ".", " ", 
      RowBox[{"(", 
       RowBox[{
       "set", " ", "it", " ", "to", " ", "zero", " ", "for", " ", "root", " ",
         "level"}], ")"}]}], "\n", "\n", 
     RowBox[{"NOTE", ":", " ", 
      RowBox[{
      "We", " ", "do", " ", "not", " ", "take", " ", "into", " ", "account", 
       " ", "the", " ", "commitment", " ", "effort", " ", "of", " ", "the", 
       " ", "initial", " ", "family", " ", "of", " ", "groups", " ", "\n", 
       "of", " ", 
       RowBox[{"polynomials", "."}]}]}]}]}], "\n", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "prover", "]"}], "=", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"\"\<BitsBaseField\>\"", " ", "\[Rule]", " ", "64"}], ",", "\n",
       "\t", 
      RowBox[{"\"\<ExtensionDegree\>\"", " ", "\[Rule]", " ", "3"}], " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "the", " ", "degree", " ", "of", " ", "the", " ", "field", " ", 
        "extension", " ", "for", " ", "FRI"}], "*)"}], ",", "\n", "\t", 
      RowBox[{"\"\<Hiding\>\"", " ", "\[Rule]", " ", "False"}]}], "\n", 
     "}"}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"prover", "[", "\n", "\t", 
   RowBox[{"numPolys_List", ",", " ", "bitsCode_", ",", "\n", "\t", 
    RowBox[{"{", 
     RowBox[{"bitsSec_", ",", " ", "bitsRate_", ",", " ", 
      RowBox[{"arities_:", "List"}], ",", " ", "capLevel_"}], "}"}], ",", 
    "\n", "\t", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "\n", "]"}], ":=", " ", 
  RowBox[{"Module", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", 
     RowBox[{"hashSize", ",", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"base", " ", "FE"}], " ", "*)"}], "\n", "hashRate", ",", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"base", " ", "FE"}], " ", "*)"}], "\n", "hidingRand", ",", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "hiding", " ", "randomness", " ", "in", " ", "base", " ", "FE"}], " ", 
       "*)"}], "\n", "bitsDomain", ",", " ", "m", ",", " ", "s", ",", "\n", 
      "proofelems", ",", " ", "vals", ",", "\n", "proofSize", ",", " ", 
      "numHashes", ",", "\n", 
      RowBox[{"bitsBaseField", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<BitsBaseField\>\"", "]"}]}], ",", 
      "\n", 
      RowBox[{"extDeg", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<ExtensionDegree\>\"", "]"}]}], ",", 
      "\n", "bitsField", ",", "\n", 
      RowBox[{"hiding", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<Hiding\>\"", "]"}]}]}], "\n", "}"}], 
    ",", "\n", "\t", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"hash", " ", "parameters"}], ",", " ", 
      RowBox[{"assuming", " ", 
       RowBox[{"max", ".", " ", "128"}], " ", "bit", " ", "security"}]}], " ",
      "*)"}], "\n", "\t", 
    RowBox[{
     RowBox[{"hashSize", " ", "=", " ", 
      RowBox[{"Ceiling", "[", 
       RowBox[{"256", " ", "/", " ", "bitsBaseField"}], "]"}]}], ";", "\n", 
     "\t", 
     RowBox[{"hashRate", " ", "=", " ", "hashSize"}], ";", "\n", "\t", 
     RowBox[{"hidingRand", " ", "=", " ", 
      RowBox[{"If", "[", 
       RowBox[{"hiding", ",", " ", "hashSize", ",", " ", "0"}], "]"}]}], ";", 
     "\n", "\n", "\t", 
     RowBox[{"bitsField", " ", "=", " ", 
      RowBox[{"extDeg", " ", "*", " ", "bitsBaseField"}]}], ";", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "the", " ", "degree", " ", "of", " ", "the", " ", "FRI", " ", 
       "sampling", " ", "domain"}], " ", "*)"}], "\n", "\t", 
     RowBox[{"bitsDomain", " ", "=", " ", 
      RowBox[{"bitsCode", " ", "+", " ", "bitsRate"}]}], ";", "\n", "\n", 
     "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"the", " ", "Johnson", " ", "proximity"}], " ", "*)"}], "\n", 
     "\t", 
     RowBox[{"m", " ", "=", " ", 
      RowBox[{"JohnsonProximity", "[", 
       RowBox[{
        RowBox[{"bitsSec", " ", "+", " ", "1"}], ",", "bitsField", ",", 
        "bitsDomain", ",", "bitsRate", ",", "arities", ",", 
        RowBox[{"Total", "@", "numPolys"}]}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"m", " ", "\[Equal]", " ", "Infinity"}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{
        "Print", "[", 
         "\"\<Security bound for commit phase not achievable with current \
extension degree.\>\"", "]"}], ";", "\n", "\t\t", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{"Null", ",", "Null"}], "}"}], "]"}]}]}], "\n", "\t", "]"}], 
     ";", "\n", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"the", " ", "query", " ", "rounds"}], ",", " ", 
       RowBox[{
        RowBox[{"i", ".", "e", ".", " ", "the"}], " ", "number", " ", "of", 
        " ", "samples"}]}], " ", "*)"}], "\n", "\t", 
     RowBox[{"s", " ", "=", " ", 
      RowBox[{"numSamples", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"bitsSec", " ", "+", " ", "1"}], ",", " ", "bitsRate", ",", 
        " ", "m"}], "  ", "\n", "\t", "]"}]}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"s", " ", "\[Equal]", " ", "Infinity"}], ",", " ", "\n", 
       "\t\t", 
       RowBox[{
        RowBox[{
        "Print", "[", "\"\<Maximum samples bound reached. Increase it.\>\"", 
         "]"}], ";", "\n", "\t\t", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{"Null", ",", "Null"}], "}"}], "]"}]}]}], "\n", "\t", "]"}], 
     ";", "\n", "\n", "\t", 
     RowBox[{"proofSize", " ", "=", " ", "0"}], ";", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"The", " ", "commit", " ", "phase", " ", "of", " ", 
        RowBox[{"FRI", ":", " ", 
         RowBox[{
         "the", " ", "Merkle", " ", "caps", " ", "of", " ", "the", " ", 
          "round", " ", "polynomials", " ", "trees"}]}]}], ",", " ", "\n", 
       "\t", 
       RowBox[{
       "plus", " ", "the", " ", "revealed", " ", "polynomial", " ", "at", " ",
         "the", " ", "end", " ", "of", " ", "the", " ", "FRI", " ", 
        RowBox[{"reduction", "."}]}]}], "\n", "\t ", "*)"}], "\n", "\t", 
     RowBox[{"proofSize", " ", "+=", " ", "\n", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Length", "[", "numPolys", "]"}], " ", "+", " ", 
          RowBox[{"Length", "[", "arities", "]"}]}], ")"}], " ", "*", " ", 
        RowBox[{"2", "^", "capLevel"}], " ", "*", " ", "hashSize"}], " ", "+",
        " ", 
       RowBox[{"Ceiling", "[", 
        RowBox[{
         RowBox[{"2", "^", "bitsCode"}], "/", 
         RowBox[{"2", "^", 
          RowBox[{"Total", "[", "arities", "]"}]}]}], "]"}]}]}], ";", "\n", 
     "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"the", " ", "Merkle", " ", "paths", " ", 
         RowBox[{"(", 
          RowBox[{"without", " ", "their", " ", "leaves"}], ")"}], " ", "per",
          " ", "query", " ", 
         RowBox[{"round", ".", "\n", "\t", "These"}], " ", "are", " ", "the", 
         " ", "paths", " ", "from"}], "\n", "\t\t", "-", " ", 
        RowBox[{"the", " ", "batch", " ", "polynomial", " ", 
         RowBox[{"f", "[", "0", "]"}]}]}], ",", " ", 
       RowBox[{
        RowBox[{"and", " ", "the"}], " ", "\n", "\t\t", "-", " ", 
        RowBox[{"folded", " ", "ones", " ", 
         RowBox[{"f", "[", "i", "]"}]}]}], ",", " ", 
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{
        RowBox[{"..", 
         RowBox[{"Length", "[", "arity", "]"}]}], "-", "1."}]}], " ", "\n", 
      "\t", "*)"}], "\n", "\t", 
     RowBox[{"proofelems", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", "\n", "\t\t", 
        RowBox[{"bitsDomain", " ", "-", " ", "capLevel", "  ", 
         RowBox[{"(*", " ", 
          RowBox[{"the", " ", "batch", " ", "poly", " ", 
           RowBox[{"f", "[", "0", "]"}]}], " ", "*)"}], "\n", "\t\t", "+", 
         " ", 
         RowBox[{"Total", "[", "\n", "\t\t\t", 
          RowBox[{"bitsDomain", " ", "-", " ", "capLevel", " ", "-", " ", 
           RowBox[{"Accumulate", "@", 
            RowBox[{"arities", "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", 
               RowBox[{
                RowBox[{"Length", "[", "arities", "]"}], "-", "1"}]}], "]"}], 
             "]"}]}]}], "\n", "\t\t", "]"}]}], " ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"the", " ", "folded", " ", "FRI", " ", "polys"}], ",", " ", 
          
          RowBox[{"without", " ", "the", " ", "revealed", " ", "one"}]}], " ",
          "*)"}], "\n", "\t\t", ")"}], " ", "*", " ", "hashSize"}]}], ";", 
     "\n", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"revealed", " ", "values", " ", "per", " ", "query", " ", 
        RowBox[{"round", ":", "\n", "\t", 
         RowBox[{
         "The", " ", "component", " ", "polynomials", " ", "are", " ", "once",
           " ", "per", " ", "round", " ", "and", " ", "have", " ", "values", 
          " ", "in", " ", "F"}]}]}], ",", " ", "\n", "\t", 
       RowBox[{"the", " ", 
        RowBox[{"f", "[", "i", "]"}]}], ",", " ", 
       RowBox[{"i", "=", "0"}], ",", "...", ",", 
       RowBox[{
        RowBox[{"d", "-", 
         RowBox[{
         "1", " ", "on", " ", "a", " ", "coset", " ", "of", " ", "size", " ", 
          
          RowBox[{"2", "^", 
           RowBox[{"d", "[", "i", "]"}]}], " ", "with", " ", 
          RowBox[{"d", "[", "i", "]"}]}]}], "=", 
        RowBox[{
         RowBox[{"arity", "[", "i", "]"}], " ", "\n", "\t", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
           "they", " ", "have", " ", "values", " ", "in", " ", "the", " ", 
            "extension", " ", "field"}], ")"}], ".", "\n", "\t", "Both"}], 
         " ", "might", " ", "have", " ", "hiding", " ", "randomnesses"}]}], 
       ",", " ", 
       RowBox[{"if", " ", 
        RowBox[{"required", "."}]}]}], "\n", "\t", "*)"}], "\n", "\t", 
     RowBox[{"vals", " ", "=", " ", 
      RowBox[{
       RowBox[{"Total", "[", "numPolys", "]"}], " ", "+", " ", 
       RowBox[{"If", "[", 
        RowBox[{"hiding", ",", 
         RowBox[{
          RowBox[{"Length", "[", "numPolys", "]"}], "*", "hidingRand"}], ",", 
         "0"}], "]"}]}]}], ";", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"MT_", "0"}], ".."}], ",", 
       RowBox[{
        RowBox[{"Length", "[", "arity", "]"}], " ", "the", " ", "coset", " ", 
        "evaluations", " ", "of", " ", "the", " ", "FRI", " ", 
        "polynomials"}]}], " ", "*)"}], "\n", "\t", 
     RowBox[{"vals", " ", "+=", " ", 
      RowBox[{
       RowBox[{"extDeg", " ", "*", " ", 
        RowBox[{"Total", "[", 
         RowBox[{"2", "^", "arities"}], "]"}]}], " ", "+", " ", 
       RowBox[{"If", "[", 
        RowBox[{"hiding", ",", 
         RowBox[{
          RowBox[{"Length", "[", "arities", "]"}], "*", "hidingRand"}], ",", 
         "0"}], "]"}]}]}], ";", "\n", "\t", "\n", "\t", 
     RowBox[{"proofSize", " ", "+=", " ", 
      RowBox[{"s", " ", "*", " ", 
       RowBox[{"(", 
        RowBox[{"proofelems", " ", "+", " ", "vals"}], ")"}]}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"in", " ", "base", " ", "FE"}], " ", "*)"}], "\n", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"prover", " ", "commitment", " ", "effort"}], ",", " ", 
       RowBox[{
       "excluding", " ", "the", " ", "initial", " ", "polynomials"}]}], " ", 
      "*)"}], "\n", "\t", 
     RowBox[{"numHashes", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"2", "^", "bitsDomain"}], " ", "*", " ", 
        RowBox[{
         RowBox[{"(", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"extDeg", " ", "+", " ", "hidingRand"}], ")"}], "*", " ", 
           
           RowBox[{"(", 
            RowBox[{"1", " ", "+", " ", 
             RowBox[{"Total", "[", 
              RowBox[{"2", "^", 
               RowBox[{"(", 
                RowBox[{"-", 
                 RowBox[{"Accumulate", "@", 
                  RowBox[{"arities", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ";;", 
                    RowBox[{
                    RowBox[{"Length", "[", "arities", "]"}], "-", "1"}]}], 
                    "]"}], "]"}]}]}], ")"}]}], "]"}]}], ")"}]}], "\n", 
          "\t\t\t", ")"}], " ", "/", " ", "\n", "\t\t\t", "hashRate"}]}], " ",
        "//", "Ceiling"}]}], ";", "\n", "\n", "\n", 
     RowBox[{"Print", "@", 
      RowBox[{"Column", "[", 
       RowBox[{"{", "\n", "\t", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          RowBox[{"\"\<Code bits: ``\>\"", ",", " ", "bitsCode"}], "]"}], ",",
          "\n", "\t", 
         RowBox[{"StringForm", "[", 
          RowBox[{
          "\"\<Sampling domain bits: ``\>\"", ",", " ", "bitsDomain"}], "]"}],
          ",", "\n", "\t", 
         RowBox[{"StringForm", "[", 
          RowBox[{
          "\"\<Number of polynomials for batch open: ``\>\"", ",", " ", 
           RowBox[{"Total", "@", "numPolys"}]}], "]"}], ",", "\n", "\t", 
         RowBox[{"StringForm", "[", 
          RowBox[{"\"\<Johnson proximity m: ``\>\"", ",", " ", "m"}], "]"}], 
         ",", "\n", "\t", 
         RowBox[{"StringForm", "[", 
          RowBox[{
          "\"\<Soundness error commit phase: 2^``\>\"", ",", " ", "\n", 
           "\t\t", 
           RowBox[{"soundnessErrorCommit", "[", 
            RowBox[{
            "bitsField", ",", "bitsDomain", ",", "bitsRate", ",", "arities", 
             ",", 
             RowBox[{"Total", "@", "numPolys"}], ",", "m"}], "]"}]}], "\n", 
          "\t", "]"}], ",", "\n", "\t", 
         RowBox[{"StringForm", "[", 
          RowBox[{"\"\<Number of query rounds: ``\>\"", ",", " ", "s"}], 
          "]"}], ",", "\n", "\t", 
         RowBox[{"StringForm", "[", 
          RowBox[{
          "\"\<Soundness error query phase: 2^``\>\"", ",", " ", "\n", "\t\t", 
           RowBox[{"soundnessErrorQuery", "[", 
            RowBox[{"bitsRate", ",", "m", ",", "s"}], "]"}]}], "\n", "\t", 
          "]"}], ",", "\n", "\t", 
         RowBox[{"StringForm", "[", 
          RowBox[{"\"\<revealed poly size: `` FE\>\"", ",", " ", 
           RowBox[{"Ceiling", "[", 
            RowBox[{
             RowBox[{"2", "^", "bitsCode"}], "/", 
             RowBox[{"2", "^", 
              RowBox[{"Total", "[", "arities", "]"}]}]}], "]"}]}], "]"}], ",",
          "\n", "\t", 
         RowBox[{"StringForm", "[", 
          RowBox[{
          "\"\<per round: `` path elems + `` values = `` FE\>\"", ",", " ", 
           "proofelems", ",", " ", "vals", ",", " ", 
           RowBox[{"proofelems", " ", "+", " ", "vals"}]}], "]"}], ",", "\n", 
         "\t", 
         RowBox[{"StringForm", "[", 
          RowBox[{"\"\<`` rounds: `` FE\>\"", ",", " ", "s", ",", "  ", 
           RowBox[{"s", " ", "*", " ", 
            RowBox[{"(", 
             RowBox[{"proofelems", " ", "+", " ", "vals"}], ")"}]}]}], 
          "]"}]}], "\n", "}"}], "]"}]}], ";", "\n", "\n", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "number", " ", "of", " ", "compression", " ", "function", " ", 
        "invocations"}], ",", " ", 
       RowBox[{"and", " ", "proof", " ", "size", " ", "in", " ", "Byte"}]}], 
      "*)"}], "\n", 
     RowBox[{"{", 
      RowBox[{"numHashes", ",", " ", 
       RowBox[{"proofSize", " ", "*", " ", 
        RowBox[{"Ceiling", "[", 
         RowBox[{"bitsBaseField", "/", "8"}], "]"}]}]}], "}"}]}]}], "\n", 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.852828753468875*^9, 3.852828929353341*^9}, {
   3.8528292272534933`*^9, 3.852829388961575*^9}, {3.852829667649253*^9, 
   3.852829694917428*^9}, {3.85283041791125*^9, 3.852830459040421*^9}, {
   3.852830518888151*^9, 3.852830528160035*^9}, {3.8528306072731943`*^9, 
   3.852830620840377*^9}, {3.852898787699478*^9, 3.852899050005266*^9}, {
   3.8528992704004383`*^9, 3.852899417396522*^9}, {3.852900703434572*^9, 
   3.852901153640636*^9}, {3.852901227309359*^9, 3.852901298161619*^9}, {
   3.85290134055227*^9, 3.852901369422332*^9}, {3.852901410407144*^9, 
   3.852901689388698*^9}, {3.852901724206312*^9, 3.852901737340418*^9}, {
   3.852901776094555*^9, 3.852901912719166*^9}, {3.8529019603823233`*^9, 
   3.852901966230245*^9}, {3.8529019963260183`*^9, 3.852902102762048*^9}, {
   3.852957352157552*^9, 3.852957404304575*^9}, {3.852957451308791*^9, 
   3.852957489480879*^9}, {3.852957581040318*^9, 3.852957593929055*^9}, {
   3.852957640216402*^9, 3.852957823189746*^9}, {3.852957857383257*^9, 
   3.85295804176772*^9}, {3.8529580826377153`*^9, 3.852958140814496*^9}, {
   3.8529588062720127`*^9, 3.85295883521313*^9}, {3.8529588844771976`*^9, 
   3.85295904657228*^9}, {3.852959106660693*^9, 3.85295916016715*^9}, {
   3.8529592044357986`*^9, 3.8529592206011963`*^9}, {3.852959292220302*^9, 
   3.852959317536353*^9}, {3.852959360780418*^9, 3.852959407510343*^9}, {
   3.852959452613803*^9, 3.852959466149703*^9}, {3.852959514183031*^9, 
   3.852959633730493*^9}, {3.8529596762644253`*^9, 3.852959677202444*^9}, {
   3.8529597131174717`*^9, 3.852959750278808*^9}, {3.8529597811475897`*^9, 
   3.8529600313603573`*^9}, {3.85296011745011*^9, 3.852960128688827*^9}, {
   3.852960195030418*^9, 3.8529603348226023`*^9}, {3.8529604030609617`*^9, 
   3.85296042761642*^9}, {3.852960514416163*^9, 3.852960524336694*^9}, {
   3.852960576753579*^9, 3.8529607368685493`*^9}, {3.85296077919137*^9, 
   3.852961149745243*^9}, {3.852961577655758*^9, 3.852961659573567*^9}, {
   3.852962201264351*^9, 3.852962205755546*^9}, {3.85296229210737*^9, 
   3.8529623692174397`*^9}, {3.852962399922222*^9, 3.8529625064831753`*^9}, {
   3.852962572393024*^9, 3.852962788445389*^9}, {3.852962818977085*^9, 
   3.85296283299303*^9}, {3.8529628902725477`*^9, 3.8529629398394938`*^9}, {
   3.8529630051381207`*^9, 3.852963163049328*^9}, {3.852963634170166*^9, 
   3.852963686352779*^9}, {3.8529641064699173`*^9, 3.852964119703504*^9}, {
   3.852964178176853*^9, 3.852964378102593*^9}, {3.852964416673317*^9, 
   3.8529645935256147`*^9}, {3.852964623791058*^9, 3.852964861697043*^9}, {
   3.852968851254415*^9, 3.852968932114609*^9}, {3.8529691660651407`*^9, 
   3.852969407866428*^9}, {3.852969442829566*^9, 3.852969481038485*^9}, {
   3.852969525366769*^9, 3.8529696435621653`*^9}, {3.852969745196289*^9, 
   3.852969747305347*^9}, {3.852969783630267*^9, 3.852969801660829*^9}, {
   3.852969868488768*^9, 3.852970197413617*^9}, {3.852970422197771*^9, 
   3.852970425664419*^9}, {3.852970498284931*^9, 3.852970518688044*^9}, {
   3.852970716996608*^9, 3.852970931918745*^9}, {3.852971028682351*^9, 
   3.85297103961861*^9}, {3.852971075634255*^9, 3.852971163793097*^9}, {
   3.852971221981015*^9, 3.8529712293965816`*^9}, {3.8529712771896143`*^9, 
   3.852971307379814*^9}, {3.8529713411068287`*^9, 3.852971363494443*^9}, {
   3.852971948926064*^9, 3.852971966852159*^9}, {3.852972000676878*^9, 
   3.852972001091275*^9}, {3.8529721401762953`*^9, 3.852972149258889*^9}, {
   3.852972277710803*^9, 3.852972283294344*^9}, {3.852972467523374*^9, 
   3.852972474421933*^9}, {3.8529726463668203`*^9, 3.8529726755080748`*^9}, {
   3.852972714218252*^9, 3.852972748002143*^9}, {3.852972960380934*^9, 
   3.852972962221754*^9}, {3.852973262820787*^9, 3.852973274644369*^9}, {
   3.852973387133328*^9, 3.852973410666271*^9}, {3.8529737262420073`*^9, 
   3.85297372762185*^9}, {3.852973980160684*^9, 3.852973981272471*^9}, {
   3.8529772185258617`*^9, 3.852977251981799*^9}, {3.852977326158453*^9, 
   3.8529774211964808`*^9}, {3.8529777180631247`*^9, 3.852977773168518*^9}, {
   3.852977833911332*^9, 3.852977869093409*^9}, {3.852977947738727*^9, 
   3.852977958111024*^9}, 3.8529780839718313`*^9, {3.852978115653783*^9, 
   3.852978117117964*^9}, {3.852978356710834*^9, 3.852978409393959*^9}, {
   3.852978476294178*^9, 3.8529785025934067`*^9}, {3.852978563662277*^9, 
   3.852978616144422*^9}, {3.852978778971834*^9, 3.852978869103385*^9}, {
   3.852978937235639*^9, 3.8529789730708017`*^9}, {3.8529848689531317`*^9, 
   3.8529849023907223`*^9}, {3.85298619941814*^9, 3.852986200024056*^9}, {
   3.8529990730351458`*^9, 3.8529996861414757`*^9}, {3.852999721562764*^9, 
   3.852999722855657*^9}, {3.852999753311297*^9, 3.8529999114279757`*^9}, {
   3.85299997073245*^9, 3.853000129664077*^9}, {3.853000169500168*^9, 
   3.853000172672838*^9}, {3.8530002241622047`*^9, 3.8530002885994253`*^9}, {
   3.853000329223609*^9, 3.8530003598695297`*^9}, {3.853000409946364*^9, 
   3.853000440277855*^9}, {3.8530004903623753`*^9, 3.853000545935029*^9}, {
   3.85323278275737*^9, 3.853233334032814*^9}, {3.853233374326849*^9, 
   3.853233881192793*^9}, {3.853233918224272*^9, 3.8532342638047523`*^9}, {
   3.853234301257104*^9, 3.853234559478592*^9}, {3.853234611365118*^9, 
   3.853234620555151*^9}, {3.853234671025045*^9, 3.853234673719409*^9}, {
   3.853234746560462*^9, 3.853234750253181*^9}, {3.853235989885373*^9, 
   3.853235996230966*^9}, {3.853236032099289*^9, 3.8532360377639027`*^9}, {
   3.853236074546936*^9, 3.8532360800785503`*^9}, {3.853238644474451*^9, 
   3.853238864205781*^9}, {3.853242846405027*^9, 3.853242874693693*^9}, {
   3.853242977370185*^9, 3.853243059940681*^9}, {3.853243110130664*^9, 
   3.85324315095238*^9}, {3.853243302199527*^9, 3.853243340364868*^9}, {
   3.853243391421596*^9, 3.853243432596455*^9}, {3.853243475423356*^9, 
   3.853243483050867*^9}, {3.85324373700036*^9, 3.853243744289283*^9}, {
   3.8532441434243183`*^9, 3.8532441646231813`*^9}, {3.8532442326890306`*^9, 
   3.853244255788042*^9}, {3.853244304416464*^9, 3.853244321153363*^9}, {
   3.853244662035771*^9, 3.853244680029045*^9}, {3.8532447448343267`*^9, 
   3.8532447520974903`*^9}, {3.853244796058017*^9, 3.853244799103745*^9}, {
   3.853244908982524*^9, 3.8532449141357317`*^9}, {3.8532455284292793`*^9, 
   3.853245566916071*^9}, {3.853245626466662*^9, 3.853245684199965*^9}, {
   3.853245743174425*^9, 3.853245755966641*^9}, {3.853304358320921*^9, 
   3.853304411636429*^9}, {3.853304452235093*^9, 3.853304472951079*^9}, {
   3.853304643833474*^9, 3.853304649802438*^9}, {3.8533049116616783`*^9, 
   3.8533049125667067`*^9}, {3.8533072422865343`*^9, 
   3.8533072732365427`*^9}, {3.853307315993675*^9, 3.853307332727952*^9}, {
   3.853307862341133*^9, 3.853307862659018*^9}, {3.8533081431374397`*^9, 
   3.853308243347251*^9}, {3.853310855559424*^9, 3.853310890703416*^9}, {
   3.853310921423209*^9, 3.853310939935667*^9}, {3.853311050973181*^9, 
   3.853311067942185*^9}, {3.853311099821137*^9, 3.853311134539372*^9}, {
   3.853315694054336*^9, 3.85331570163055*^9}, {3.8533158366511583`*^9, 
   3.853315840312027*^9}, {3.8533185956856947`*^9, 3.853318622505871*^9}, {
   3.853319154020339*^9, 3.8533191671801147`*^9}, {3.853324520891779*^9, 
   3.8533245215631104`*^9}, {3.853324555764638*^9, 3.853324555903653*^9}, {
   3.853324595187591*^9, 3.85332459548424*^9}, {3.853324667415594*^9, 
   3.8533247441726103`*^9}, {3.85332503656561*^9, 3.8533251251069813`*^9}, {
   3.853327393473991*^9, 3.8533274291680202`*^9}, {3.853327826801553*^9, 
   3.853327845092863*^9}, {3.8533283234656563`*^9, 3.853328336577304*^9}, {
   3.853328385409595*^9, 3.853328600923464*^9}, {3.8533286880570498`*^9, 
   3.8533288435253267`*^9}, {3.853328890963025*^9, 3.853328995585711*^9}, {
   3.8533292518912287`*^9, 3.853329262082679*^9}, {3.853329552133473*^9, 
   3.853329626581892*^9}, {3.853329682714738*^9, 3.8533296829175653`*^9}, {
   3.8533305610228033`*^9, 3.8533305944557877`*^9}, {3.853332130229561*^9, 
   3.853332159588472*^9}, {3.853332243861784*^9, 3.8533323079849033`*^9}, {
   3.853332358710643*^9, 3.8533323608248034`*^9}, {3.8533324393546963`*^9, 
   3.8533324682779903`*^9}, {3.853332615152804*^9, 3.853332616863329*^9}, {
   3.853333665248242*^9, 3.8533337288338003`*^9}, {3.853335519942328*^9, 
   3.853335603007619*^9}, {3.853335679650957*^9, 3.853335680465403*^9}, {
   3.853335718013444*^9, 3.853335777683075*^9}, {3.8533359377396584`*^9, 
   3.853336004439534*^9}, {3.853336068851028*^9, 3.85333609358738*^9}, {
   3.853336168910941*^9, 3.853336175496828*^9}, {3.853336219493333*^9, 
   3.8533363453547373`*^9}, {3.8533364550460567`*^9, 
   3.8533365705290937`*^9}, {3.853336615306013*^9, 3.853336620571343*^9}, {
   3.8533366652416573`*^9, 3.853336665602253*^9}, {3.853336699107498*^9, 
   3.853336797719677*^9}, {3.853336990445159*^9, 3.8533369931699743`*^9}, {
   3.853337607867653*^9, 3.853337832024618*^9}, {3.853337917897573*^9, 
   3.853338016721418*^9}, {3.853342535624398*^9, 3.85334253605028*^9}, {
   3.853342587047572*^9, 3.8533428518909388`*^9}, {3.853342886872099*^9, 
   3.8533429226350803`*^9}, {3.8533429719663754`*^9, 3.853342974713798*^9}, {
   3.8533443728672647`*^9, 3.853344372974946*^9}, {3.853344482064899*^9, 
   3.853344518134556*^9}, {3.85334458257498*^9, 3.853344614154909*^9}, {
   3.853344653899578*^9, 3.853344680417095*^9}, {3.8533447183737717`*^9, 
   3.853344771718663*^9}, {3.853344810836145*^9, 3.853344858639656*^9}, {
   3.853344897429031*^9, 3.853344955379483*^9}, {3.853345030661523*^9, 
   3.853345082515747*^9}, {3.8533451274581823`*^9, 3.8533451697310047`*^9}, {
   3.853345682874544*^9, 3.853345684508353*^9}, {3.853345716548691*^9, 
   3.8533457233190002`*^9}, {3.853381618360655*^9, 3.8533817416607*^9}, {
   3.853381865680111*^9, 3.853381901499936*^9}, {3.8533819368255367`*^9, 
   3.853381944880416*^9}, {3.853381993520802*^9, 3.853381999261682*^9}, {
   3.8534076494624853`*^9, 3.853407665123721*^9}, {3.8534076982814083`*^9, 
   3.8534077204904547`*^9}, {3.853407750590496*^9, 3.8534077704063387`*^9}, {
   3.85392455155282*^9, 3.853924595311861*^9}, {3.853924918839533*^9, 
   3.853925016754274*^9}, {3.853925077420863*^9, 3.8539251209955378`*^9}, {
   3.853925167565221*^9, 3.853925206001247*^9}, {3.853925271533909*^9, 
   3.853925309820092*^9}, {3.853925343590403*^9, 3.853925711227367*^9}, {
   3.853925748913805*^9, 3.8539257805713053`*^9}, {3.853925820484473*^9, 
   3.8539258744855843`*^9}, {3.85392591913315*^9, 3.8539259494690742`*^9}, {
   3.853926029511346*^9, 3.853926270264135*^9}, {3.8539263074259453`*^9, 
   3.853926307746855*^9}, {3.853926344929881*^9, 3.8539264763059807`*^9}, {
   3.853926512002481*^9, 3.853926522442874*^9}, {3.8539266409235153`*^9, 
   3.853926984114407*^9}, {3.8539270221921587`*^9, 3.8539270393940563`*^9}, {
   3.853927091121996*^9, 3.8539272310658903`*^9}, {3.853927409445923*^9, 
   3.853927421985235*^9}, {3.853927564562333*^9, 3.853927567343402*^9}, {
   3.853927654159771*^9, 3.8539277090692587`*^9}, {3.853927780111969*^9, 
   3.853927810136269*^9}, {3.8539278778096237`*^9, 3.853927884059738*^9}, {
   3.8539281400176153`*^9, 3.853928187695158*^9}, {3.8539308175836773`*^9, 
   3.853930818705736*^9}, {3.853930877393237*^9, 3.853930931338331*^9}, {
   3.8539309732573566`*^9, 3.8539310408033943`*^9}, {3.853931295437249*^9, 
   3.853931429292457*^9}, {3.8539315413496647`*^9, 3.853931706408526*^9}, {
   3.85393178486801*^9, 3.853931788379201*^9}, {3.8539318384737186`*^9, 
   3.8539318464924107`*^9}, {3.8539318793224077`*^9, 3.853931948121437*^9}, {
   3.8539928199585047`*^9, 3.8539928216466846`*^9}, {3.8539928663517017`*^9, 
   3.85399286914642*^9}, {3.853995333096035*^9, 3.853995380216268*^9}, {
   3.853995413424711*^9, 3.853995419139779*^9}, {3.853995548553553*^9, 
   3.853995624303631*^9}, {3.853995681189666*^9, 3.85399581700518*^9}, 
   3.854011468645241*^9, {3.8540115122916317`*^9, 3.8540115506349916`*^9}, {
   3.8540116276738443`*^9, 3.854011656746676*^9}, {3.854011822543228*^9, 
   3.8540118516604013`*^9}, {3.854011912395299*^9, 3.854011948008545*^9}, {
   3.854012072822557*^9, 3.854012127023387*^9}, {3.854012176152795*^9, 
   3.854012226924963*^9}, {3.854012259231605*^9, 3.854012342304059*^9}, {
   3.8540124269852133`*^9, 3.854012440338554*^9}, {3.854012538300454*^9, 
   3.854012896793398*^9}, {3.8540379421936617`*^9, 3.8540379523693867`*^9}, {
   3.8540379996739798`*^9, 3.854038000153575*^9}, {3.854080088731284*^9, 
   3.854080241400519*^9}, {3.8540802807124357`*^9, 3.854080370824245*^9}, {
   3.854080416109068*^9, 3.854080422346904*^9}, {3.8540804598407383`*^9, 
   3.854080464503502*^9}, {3.854080495336522*^9, 3.8540805079615583`*^9}, {
   3.8540854965619392`*^9, 3.854085577172553*^9}, {3.854085608606051*^9, 
   3.854085687521646*^9}, {3.854085731993498*^9, 3.854085758298759*^9}, {
   3.854085855325885*^9, 3.854085863165483*^9}, {3.854085894132269*^9, 
   3.854086161335525*^9}, {3.854086194479783*^9, 3.8540862222663603`*^9}, {
   3.8540862776885967`*^9, 3.85408631224354*^9}, {3.854086377248396*^9, 
   3.854086380561508*^9}, {3.8540864437351723`*^9, 3.854086469085449*^9}, {
   3.8540865042926598`*^9, 3.854086549932534*^9}, {3.854086607468877*^9, 
   3.854086865610834*^9}, {3.854086925168047*^9, 3.854087013138384*^9}, {
   3.854087050139432*^9, 3.854087547042782*^9}, {3.8540875783950872`*^9, 
   3.8540877966087503`*^9}, {3.854087869118848*^9, 3.854087872665637*^9}, {
   3.8540880656015244`*^9, 3.854088075263275*^9}, {3.8540881364022408`*^9, 
   3.854088228502328*^9}, {3.854088275324998*^9, 3.8540883564578657`*^9}, {
   3.8540935532998533`*^9, 3.854093747227334*^9}, {3.8540937796713*^9, 
   3.85409379750145*^9}, {3.854093851358079*^9, 3.854094097315853*^9}, {
   3.854094138662713*^9, 3.8540941561286497`*^9}, {3.854094189548493*^9, 
   3.8540941914474573`*^9}, {3.854094226422876*^9, 3.8540943511133137`*^9}, {
   3.854094419792138*^9, 3.854094510126511*^9}, {3.85409454080873*^9, 
   3.854094559807012*^9}, {3.854094606009906*^9, 3.854094638783881*^9}, {
   3.854094682652494*^9, 3.854094698571128*^9}, {3.8540947590621243`*^9, 
   3.854094759384007*^9}, {3.854094793295108*^9, 3.854094793415203*^9}, {
   3.854094889311038*^9, 3.854094919509144*^9}, {3.85409506596216*^9, 
   3.854095323228327*^9}, {3.8540958002145863`*^9, 3.854095829691143*^9}, {
   3.85409592075023*^9, 3.854095935544239*^9}, {3.854096003870008*^9, 
   3.8540960101188517`*^9}, {3.854096081984603*^9, 3.854096087205689*^9}, {
   3.854096120482336*^9, 3.854096178564896*^9}, {3.854096239071808*^9, 
   3.854096242280452*^9}, {3.85409637407762*^9, 3.8540964532903137`*^9}, {
   3.854096580370517*^9, 3.8540965820721197`*^9}, {3.854096643873426*^9, 
   3.854096676508697*^9}, {3.854096737647306*^9, 3.854096758758514*^9}, {
   3.854096790612895*^9, 3.854096843925559*^9}, {3.8540968940928593`*^9, 
   3.854097006687459*^9}, {3.854097078384317*^9, 3.854097260987975*^9}, {
   3.8540973055959463`*^9, 3.854097383676642*^9}, {3.854097446090974*^9, 
   3.854097468624467*^9}, {3.8540976377259398`*^9, 3.85409765277361*^9}, {
   3.854098192732503*^9, 3.854098197212414*^9}, {3.8540983739679203`*^9, 
   3.854098419318194*^9}, {3.8540988574200783`*^9, 3.854098874853973*^9}, {
   3.854098989862759*^9, 3.8540990610943537`*^9}, {3.854099580499236*^9, 
   3.854099625184594*^9}, 3.854099715604536*^9, 3.854099804759334*^9, {
   3.854103247635091*^9, 3.8541032593406773`*^9}, {3.8541033069776917`*^9, 
   3.8541033073998137`*^9}, {3.854105563607264*^9, 3.85410557716746*^9}, {
   3.854105865766632*^9, 3.854105940984097*^9}, {3.854106023932127*^9, 
   3.854106042249963*^9}, 3.854106142457979*^9, {3.854106183270276*^9, 
   3.854106188236493*^9}, {3.8541064274527807`*^9, 3.854106427748427*^9}, {
   3.854106920706052*^9, 3.854106962395481*^9}, {3.854107355006659*^9, 
   3.854107390559164*^9}, {3.854107464796192*^9, 3.854107481586379*^9}, {
   3.854107569325757*^9, 3.854107581184328*^9}, {3.854107708504384*^9, 
   3.8541077395913477`*^9}, {3.854107885128338*^9, 3.854107949468198*^9}, {
   3.854108798907864*^9, 3.8541090429565077`*^9}, {3.8541092042934313`*^9, 
   3.854109224522584*^9}, {3.854165934515119*^9, 3.854165939806723*^9}, {
   3.854166023865834*^9, 3.8541660418570213`*^9}, {3.854167382137135*^9, 
   3.854167393292815*^9}, {3.854167444076626*^9, 3.85416744765604*^9}, {
   3.854203656150034*^9, 3.8542037200371113`*^9}, {3.8542039181852818`*^9, 
   3.854203931676036*^9}, {3.854203966963385*^9, 3.854204003275902*^9}, {
   3.854204038581327*^9, 3.8542040862369013`*^9}, {3.854204132470381*^9, 
   3.8542041530795393`*^9}, {3.854204199181514*^9, 3.854204216434844*^9}, {
   3.854204288232443*^9, 3.854204645594433*^9}, {3.8542046949737263`*^9, 
   3.854204888392997*^9}, {3.854204921494668*^9, 3.854204935290256*^9}, {
   3.854205027708044*^9, 3.8542051359594393`*^9}, {3.85420517854714*^9, 
   3.85420520252118*^9}, {3.854205602821906*^9, 3.854205623925737*^9}, {
   3.8542057095191317`*^9, 3.8542057142976217`*^9}, 3.854205749227532*^9, {
   3.854205815969548*^9, 3.854205841246126*^9}, {3.854205934929267*^9, 
   3.8542059833719473`*^9}, {3.85624834668925*^9, 3.856248370090815*^9}, {
   3.856258822601242*^9, 3.856258880408098*^9}, {3.8562643566290483`*^9, 
   3.856264515361978*^9}, {3.856264587303685*^9, 3.856264595654567*^9}, {
   3.856264641686758*^9, 3.856264646543477*^9}, 3.856264697371037*^9, {
   3.856266218181315*^9, 3.856266265309589*^9}, {3.8648731612104197`*^9, 
   3.86487324319944*^9}, {3.864873279382875*^9, 3.864873356156102*^9}, {
   3.864873389932777*^9, 3.864873472668882*^9}, {3.864873518342358*^9, 
   3.864873549460843*^9}, {3.864874168130307*^9, 3.8648741741326714`*^9}, {
   3.86487440285108*^9, 3.864874460207181*^9}, {3.8648744999178667`*^9, 
   3.8648745559487886`*^9}, {3.864874586030237*^9, 3.864874642191409*^9}, {
   3.864874755108639*^9, 3.86487495792163*^9}, {3.864875013638769*^9, 
   3.8648752143984423`*^9}, {3.864875252328133*^9, 3.8648752669511538`*^9}, {
   3.8648753336781797`*^9, 3.864875340367936*^9}, {3.864875440603174*^9, 
   3.8648754552592*^9}, {3.864875487138927*^9, 3.8648756015515003`*^9}, {
   3.864875646150199*^9, 3.8648756574427767`*^9}, {3.864875728858073*^9, 
   3.864875757206366*^9}, {3.8648757894020977`*^9, 3.864875854367709*^9}, {
   3.864875947155115*^9, 3.864875979466237*^9}, {3.864876125808241*^9, 
   3.864876127200335*^9}, {3.864876180608938*^9, 3.864876288525322*^9}, {
   3.864876351660781*^9, 3.864876352475305*^9}, {3.8648768968184767`*^9, 
   3.86487690189832*^9}, {3.8648776548592663`*^9, 3.8648777507515917`*^9}, {
   3.864880377164423*^9, 3.864880408773924*^9}, {3.8648806922352333`*^9, 
   3.864880768551421*^9}, {3.8648808058621273`*^9, 3.864880817444998*^9}, {
   3.8648808545727777`*^9, 3.864880865506236*^9}, {3.8648809005342493`*^9, 
   3.864880909199214*^9}, {3.864882295976788*^9, 3.864882339019505*^9}, {
   3.864882401410111*^9, 3.8648824223167067`*^9}, {3.864898392601178*^9, 
   3.864898437339892*^9}, {3.864902209972879*^9, 3.864902228565387*^9}, {
   3.866539382707962*^9, 3.866539382939261*^9}, {3.866539428994544*^9, 
   3.866539442212142*^9}, {3.8665395101884813`*^9, 3.866539577619453*^9}, {
   3.866539623543486*^9, 3.866539654068369*^9}, {3.8665396927092247`*^9, 
   3.8665400004717693`*^9}, {3.866540085120122*^9, 3.866540444091405*^9}, 
   3.8665405107324*^9, {3.8665407644691687`*^9, 3.866540796286146*^9}, {
   3.866540848783497*^9, 3.8665408995610123`*^9}, {3.8665409333847218`*^9, 
   3.866540964354241*^9}, {3.866541070761216*^9, 3.866541088234956*^9}, {
   3.866541173075671*^9, 3.866541200635931*^9}, {3.866541323797028*^9, 
   3.8665413439878483`*^9}, {3.866541397645172*^9, 3.866541401865611*^9}, {
   3.8665414737821712`*^9, 3.866541486070557*^9}, {3.866541641824884*^9, 
   3.8665416804073668`*^9}, {3.866542129901396*^9, 3.866542133091419*^9}, {
   3.86654240802556*^9, 3.866542430407654*^9}, {3.866542889121862*^9, 
   3.866542890029676*^9}, {3.866543100622946*^9, 3.866543223415862*^9}, {
   3.86654326021805*^9, 3.866543263431172*^9}, {3.873950675386077*^9, 
   3.873950681703293*^9}, {3.8739511044469*^9, 3.873951123302375*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples", "Section",
 CellChangeTimes->{{3.866541791168487*^9, 3.866541793008761*^9}}],

Cell[CellGroupData[{

Cell["69 bits security ", "Subsection",
 CellChangeTimes->{{3.866539105262838*^9, 3.866539185751379*^9}, {
  3.866542372445839*^9, 3.866542374006098*^9}, {3.870951122750996*^9, 
  3.8709511248695393`*^9}, {3.870951411807548*^9, 3.870951411962055*^9}, {
  3.873431700036619*^9, 3.873431701858612*^9}, {3.873950886037979*^9, 
  3.8739508864900618`*^9}}],

Cell[CellGroupData[{

Cell["degree 2 extensions", "Subsubsection",
 CellChangeTimes->{{3.866546288401956*^9, 3.866546291697816*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "67"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsCode", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", 
   RowBox[{"{", 
    RowBox[{"100", ",", "100", ",", "100"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"capLevel", "=", "5"}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "set", " ", "to", " ", "minimize", " ", "the", " ", "proof", " ", "size"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"numHashes", ",", " ", "proofBytes"}], "}"}], "=", 
   RowBox[{"prover", "[", 
    RowBox[{"numPolys", ",", " ", "bitsCode", ",", " ", 
     RowBox[{"{", 
      RowBox[{"bitsSec", ",", "bitsRate", ",", "arities", ",", "capLevel"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<BitsBaseField\>\"", "\[Rule]", "64"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<ExtensionDegree\>\"", "\[Rule]", "2"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Hiding\>\"", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQ7atvw3Dj3BvHuppLYHqKfxMXiF7D3SsJorWjTRVA
9DUeWSUQ3ftwoR6InjM50QFEH7+xLAJEH7rfEQ9Wx6uSAqI9DjaD6V/VYnkg
etqBXDBtzHGoHESzyZ0A08Kr1i0F0S0TuVaD6GyPvxtBNOOh34dBdMCjjBsg
+pWt8m0QXZHS8QhEz1M3fQyiYzZkvALR0ifywPQ0M6X/N4F00xV1MH0nS+2O
w/U3jn+cZz4D0Q8vfPoHon3yWVgcgfSXpGhOEP1fuI0PRLNMDmD4cxuor2Ud
G4ies61UEETzJ8wC0/ucTjz6B6Td4hWfgmgjjZgpP+8Aw80wD0w7iJzdDqKF
mC+B6a2qH+6C6Df7Dz4A0QBSc9t2
  "]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox["\<\"Code bits: \\!\\(12\\)\"\>",
      StringForm["Code bits: ``", 12],
      Editable->False]},
    {
     InterpretationBox["\<\"Sampling domain bits: \\!\\(15\\)\"\>",
      StringForm["Sampling domain bits: ``", 15],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of polynomials for batch open: \
\\!\\(300\\)\"\>",
      StringForm["Number of polynomials for batch open: ``", 300],
      Editable->False]},
    {
     InterpretationBox["\<\"Johnson proximity m: \\!\\(6\\)\"\>",
      StringForm["Johnson proximity m: ``", 6],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error commit phase: \
2^\\!\\(-68.95547228087456`\\)\"\>",
      StringForm["Soundness error commit phase: 2^``", -68.95547228087456],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of query rounds: \\!\\(50\\)\"\>",
      StringForm["Number of query rounds: ``", 50],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error query phase: \
2^\\!\\(-69.2261391290032`\\)\"\>",
      StringForm["Soundness error query phase: 2^``", -69.2261391290032],
      Editable->False]},
    {
     InterpretationBox["\<\"revealed poly size: \\!\\(32\\) FE\"\>",
      StringForm["revealed poly size: `` FE", 32],
      Editable->False]},
    {
     InterpretationBox["\<\"per round: \\!\\(64\\) path elems + \\!\\(348\\) \
values = \\!\\(412\\) FE\"\>",
      StringForm["per round: `` path elems + `` values = `` FE", 64, 348, 412],
      Editable->False]},
    {
     InterpretationBox["\<\"\\!\\(50\\) rounds: \\!\\(20600\\) FE\"\>",
      StringForm["`` rounds: `` FE", 50, 20600],
      Editable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.8665461708931227`*^9, {3.870951143774881*^9, 3.870951178403344*^9}, {
   3.870951212520018*^9, 3.870951221170415*^9}, {3.870951417555764*^9, 
   3.870951457271319*^9}, {3.870951500756414*^9, 3.870951540653863*^9}, 
   3.8734315239450493`*^9, {3.873431556525234*^9, 3.87343160579897*^9}, 
   3.873431693223435*^9, 3.873431966453249*^9, {3.8734374639055862`*^9, 
   3.873437481392959*^9}, 3.873950051145707*^9, 3.873950889346106*^9, 
   3.873951010957643*^9, 3.873951173249077*^9, {3.873951468238414*^9, 
   3.873951494456705*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"17408", ",", "170176"}], "}"}]], "Output",
 CellChangeTimes->{
  3.86654617089966*^9, {3.870951143778926*^9, 3.870951178416106*^9}, {
   3.87095121253089*^9, 3.870951221181033*^9}, {3.8709514175654993`*^9, 
   3.870951457329879*^9}, {3.87095150077664*^9, 3.8709515406640463`*^9}, 
   3.873431523988371*^9, {3.8734315565756693`*^9, 3.873431605808683*^9}, 
   3.873431693234951*^9, 3.8734319664672537`*^9, {3.87343746394009*^9, 
   3.87343748144678*^9}, 3.8739500511990547`*^9, 3.873950889401628*^9, 
   3.873951010976982*^9, 3.8739511732786007`*^9, {3.873951468258103*^9, 
   3.873951494471303*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "67"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsCode", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", 
   RowBox[{"{", 
    RowBox[{"100", ",", "100", ",", "100"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"capLevel", "=", "4"}], ";", 
  RowBox[{"(*", " ", 
   RowBox[{
   "set", " ", "to", " ", "minimize", " ", "the", " ", "proof", " ", "size"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"numHashes", ",", " ", "proofBytes"}], "}"}], "=", 
   RowBox[{"prover", "[", 
    RowBox[{"numPolys", ",", " ", "bitsCode", ",", " ", 
     RowBox[{"{", 
      RowBox[{"bitsSec", ",", "bitsRate", ",", "arities", ",", "capLevel"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<BitsBaseField\>\"", "\[Rule]", "64"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<ExtensionDegree\>\"", "\[Rule]", "2"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Hiding\>\"", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQ7atvw3Dj3BvHuppLYHqKfxMXiF7D3SsJorWjTRVA
9DUeWSUQ3ftwoR6InjM50QFEH7+xLAJEH7rfEQ9Wx6uSAqI9DjaD6V/VYnkg
etqBXDBtzHGoHESzyZ0A08Kr1i0F0S0TuVaD6GyPvxtBNOOh34dBdMCjjBsg
+pWt8m0QXZHS8QhEz1M3fQyiYzZkvALR0ifywHTAg6vsf26/cexTvAWmPZu1
BUC0kXA8mH5k0/f0H5DelXX1BYjmUdo94+edN44T5h0G01FRtjtA9IZHDmD6
wIZLD0E0C7PNYxANAAXvt48=
  "]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox["\<\"Code bits: \\!\\(12\\)\"\>",
      StringForm["Code bits: ``", 12],
      Editable->False]},
    {
     InterpretationBox["\<\"Sampling domain bits: \\!\\(16\\)\"\>",
      StringForm["Sampling domain bits: ``", 16],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of polynomials for batch open: \
\\!\\(300\\)\"\>",
      StringForm["Number of polynomials for batch open: ``", 300],
      Editable->False]},
    {
     InterpretationBox["\<\"Johnson proximity m: \\!\\(4\\)\"\>",
      StringForm["Johnson proximity m: ``", 4],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error commit phase: \
2^\\!\\(-69.16907529767686`\\)\"\>",
      StringForm["Soundness error commit phase: 2^``", -69.16907529767686],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of query rounds: \\!\\(38\\)\"\>",
      StringForm["Number of query rounds: ``", 38],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error query phase: \
2^\\!\\(-69.54284994519213`\\)\"\>",
      StringForm["Soundness error query phase: 2^``", -69.54284994519213],
      Editable->False]},
    {
     InterpretationBox["\<\"revealed poly size: \\!\\(32\\) FE\"\>",
      StringForm["revealed poly size: `` FE", 32],
      Editable->False]},
    {
     InterpretationBox["\<\"per round: \\!\\(80\\) path elems + \\!\\(348\\) \
values = \\!\\(428\\) FE\"\>",
      StringForm["per round: `` path elems + `` values = `` FE", 80, 348, 428],
      Editable->False]},
    {
     InterpretationBox["\<\"\\!\\(38\\) rounds: \\!\\(16264\\) FE\"\>",
      StringForm["`` rounds: `` FE", 38, 16264],
      Editable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.866542196547394*^9, {3.86654223257095*^9, 3.866542284732374*^9}, {
   3.866542338678318*^9, 3.866542353117196*^9}, {3.8665424356466703`*^9, 
   3.866542527575019*^9}, {3.8665425726357393`*^9, 3.866542595294553*^9}, {
   3.866542790277342*^9, 3.866542845063671*^9}, 3.866542894768511*^9, 
   3.866542963853855*^9, 3.866543039306938*^9, 3.866543286186488*^9, {
   3.866543406729124*^9, 3.8665434488173637`*^9}, {3.866543504651679*^9, 
   3.866543605187439*^9}, 3.866543648328972*^9, {3.8665438121841097`*^9, 
   3.8665438335478277`*^9}, {3.866543893065481*^9, 3.866543898244235*^9}, 
   3.8665439561582403`*^9, 3.873431616469975*^9, 3.873431683364009*^9, 
   3.87343190980338*^9, {3.8734374958801527`*^9, 3.87343751119865*^9}, {
   3.873950081267803*^9, 3.87395010778646*^9}, 3.8739509187112017`*^9, 
   3.873951014286161*^9, 3.87395117066483*^9, {3.873951503848557*^9, 
   3.873951514173452*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"34816", ",", "132928"}], "}"}]], "Output",
 CellChangeTimes->{
  3.86654183404768*^9, 3.866542196543552*^9, {3.866542232569265*^9, 
   3.8665422847307463`*^9}, {3.8665423386765823`*^9, 3.866542353115292*^9}, {
   3.866542435644663*^9, 3.8665425275786858`*^9}, {3.86654257263724*^9, 
   3.866542595299255*^9}, {3.866542790282337*^9, 3.866542845067947*^9}, 
   3.866542894773161*^9, 3.8665429638588133`*^9, 3.86654303931131*^9, 
   3.866543286193061*^9, {3.866543406733096*^9, 3.866543448821344*^9}, {
   3.866543504655888*^9, 3.866543605191736*^9}, 3.866543648333084*^9, {
   3.866543812188031*^9, 3.866543833552979*^9}, {3.866543893071165*^9, 
   3.8665438982480583`*^9}, 3.86654395616363*^9, 3.873431616534539*^9, 
   3.873431683417756*^9, 3.873431909813448*^9, {3.8734374959264317`*^9, 
   3.8734375112205687`*^9}, {3.873950081281371*^9, 3.873950107797647*^9}, 
   3.873950918758464*^9, 3.8739510143020773`*^9, 3.873951170679874*^9, {
   3.873951503897234*^9, 3.8739515141884127`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "67"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsCode", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", 
   RowBox[{"{", 
    RowBox[{"100", ",", "100", ",", "100"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"capLevel", "=", "4"}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "set", " ", "to", " ", "minimize", " ", "the", " ", "proof", " ", "size"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"numHashes", ",", " ", "proofBytes"}], "}"}], "=", 
   RowBox[{"prover", "[", 
    RowBox[{"numPolys", ",", " ", "bitsCode", ",", " ", 
     RowBox[{"{", 
      RowBox[{"bitsSec", ",", "bitsRate", ",", "arities", ",", "capLevel"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<BitsBaseField\>\"", "\[Rule]", "64"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<ExtensionDegree\>\"", "\[Rule]", "2"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Hiding\>\"", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQ7atvw3Dj3BvHuppLYHqKfxMXiF7D3SsJorWjTRVA
9DUeWSUQ3ftwoR6InjM50QFEH7+xLAJEH7rfEQ9Wx6uSAqI9DjaD6V/VYnkg
etqBXDBtzHGoHESzyZ0A08Kr1i0F0S0TuVaD6GyPvxtBNOOh34dBdMCjjBsg
+pWt8m0QXZHS8QhEz1M3fQyiYzZkvALRV+q3vQHRe5yVvoHoCed+gOmskrUG
N4F0XCGrMYjewhfXBqJjf2e0g/mu0+Udr79xTFv4TBFE75Pbz/Xn9hvHJ4bc
vCDaxPXny39AmjHW/i2IdtL/2vjzzhtHZofqVhDdsV5sC4j+prYUTE+sU3oC
ou/NKXoKogHeJ9OB
  "]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox["\<\"Code bits: \\!\\(12\\)\"\>",
      StringForm["Code bits: ``", 12],
      Editable->False]},
    {
     InterpretationBox["\<\"Sampling domain bits: \\!\\(17\\)\"\>",
      StringForm["Sampling domain bits: ``", 17],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of polynomials for batch open: \
\\!\\(300\\)\"\>",
      StringForm["Number of polynomials for batch open: ``", 300],
      Editable->False]},
    {
     InterpretationBox["\<\"Johnson proximity m: \\!\\(3\\)\"\>",
      StringForm["Johnson proximity m: ``", 3],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error commit phase: \
2^\\!\\(-68.2070658533492`\\)\"\>",
      StringForm["Soundness error commit phase: 2^``", -68.2070658533492],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of query rounds: \\!\\(30\\)\"\>",
      StringForm["Number of query rounds: ``", 30],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error query phase: \
2^\\!\\(-68.32822735990656`\\)\"\>",
      StringForm["Soundness error query phase: 2^``", -68.32822735990656],
      Editable->False]},
    {
     InterpretationBox["\<\"revealed poly size: \\!\\(32\\) FE\"\>",
      StringForm["revealed poly size: `` FE", 32],
      Editable->False]},
    {
     InterpretationBox["\<\"per round: \\!\\(88\\) path elems + \\!\\(348\\) \
values = \\!\\(436\\) FE\"\>",
      StringForm["per round: `` path elems + `` values = `` FE", 88, 348, 436],
      Editable->False]},
    {
     InterpretationBox["\<\"\\!\\(30\\) rounds: \\!\\(13080\\) FE\"\>",
      StringForm["`` rounds: `` FE", 30, 13080],
      Editable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.866542196547394*^9, {3.86654223257095*^9, 3.866542284732374*^9}, {
   3.866542338678318*^9, 3.866542353117196*^9}, {3.8665424356466703`*^9, 
   3.866542527575019*^9}, {3.8665425726357393`*^9, 3.866542595294553*^9}, {
   3.866542790277342*^9, 3.866542845063671*^9}, 3.866542894768511*^9, 
   3.866542963853855*^9, 3.866543039306938*^9, 3.866543286186488*^9, {
   3.866543406729124*^9, 3.8665434488173637`*^9}, {3.866543504651679*^9, 
   3.866543605187439*^9}, 3.866543648328972*^9, {3.8665438121841097`*^9, 
   3.8665438335478277`*^9}, {3.866543893065481*^9, 3.866543898244235*^9}, {
   3.8665439561582403`*^9, 3.8665439757646217`*^9}, {3.866544049637267*^9, 
   3.866544056211337*^9}, {3.866544520664857*^9, 3.86654453653449*^9}, {
   3.866545204012076*^9, 3.866545211875614*^9}, {3.870951681635297*^9, 
   3.8709516954945307`*^9}, {3.873431638863162*^9, 3.8734316567580357`*^9}, {
   3.873437524135283*^9, 3.873437541901154*^9}, 3.873949907149314*^9, 
   3.873950129568842*^9, {3.8739507258156757`*^9, 3.873950764857752*^9}, 
   3.873950956820858*^9, 3.8739510166393967`*^9, {3.8739511336850243`*^9, 
   3.873951141784121*^9}, {3.873951522014885*^9, 3.8739515318820133`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"69632", ",", "107456"}], "}"}]], "Output",
 CellChangeTimes->{
  3.86654183404768*^9, 3.866542196543552*^9, {3.866542232569265*^9, 
   3.8665422847307463`*^9}, {3.8665423386765823`*^9, 3.866542353115292*^9}, {
   3.866542435644663*^9, 3.8665425275786858`*^9}, {3.86654257263724*^9, 
   3.866542595299255*^9}, {3.866542790282337*^9, 3.866542845067947*^9}, 
   3.866542894773161*^9, 3.8665429638588133`*^9, 3.86654303931131*^9, 
   3.866543286193061*^9, {3.866543406733096*^9, 3.866543448821344*^9}, {
   3.866543504655888*^9, 3.866543605191736*^9}, 3.866543648333084*^9, {
   3.866543812188031*^9, 3.866543833552979*^9}, {3.866543893071165*^9, 
   3.8665438982480583`*^9}, {3.86654395616363*^9, 3.866543975768345*^9}, {
   3.8665440496407337`*^9, 3.866544056216234*^9}, {3.866544520669153*^9, 
   3.8665445365393677`*^9}, {3.866545204015991*^9, 3.8665452118798847`*^9}, {
   3.8709516816767197`*^9, 3.870951695504098*^9}, {3.873431638877461*^9, 
   3.8734316567678013`*^9}, {3.873437524149333*^9, 3.873437541935451*^9}, 
   3.873949907183792*^9, 3.873950129595717*^9, {3.873950725828792*^9, 
   3.873950764912981*^9}, 3.8739509568465233`*^9, 3.873951016649795*^9, {
   3.87395113371194*^9, 3.873951141795042*^9}, {3.873951522029222*^9, 
   3.873951531893621*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["degree 3 extensions", "Subsubsection",
 CellChangeTimes->{{3.8665463042264023`*^9, 3.86654630885823*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "67"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsCode", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", 
   RowBox[{"{", 
    RowBox[{"100", ",", "100", ",", "100"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"capLevel", "=", "4"}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "set", " ", "to", " ", "minimize", " ", "the", " ", "proof", " ", "size"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"numHashes", ",", " ", "proofBytes"}], "}"}], "=", 
   RowBox[{"prover", "[", 
    RowBox[{"numPolys", ",", " ", "bitsCode", ",", " ", 
     RowBox[{"{", 
      RowBox[{"bitsSec", ",", "bitsRate", ",", "arities", ",", "capLevel"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<BitsBaseField\>\"", "\[Rule]", "64"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<ExtensionDegree\>\"", "\[Rule]", "3"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Hiding\>\"", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.866542081880774*^9, 3.866542086577697*^9}, {
  3.866542164072214*^9, 3.866542284407675*^9}, {3.866542337667379*^9, 
  3.866542352907817*^9}, {3.866542453058783*^9, 3.8665425950492687`*^9}, {
  3.866542653028118*^9, 3.866542653357418*^9}, {3.866543727909346*^9, 
  3.866543760565065*^9}, {3.8665442582169943`*^9, 3.8665442821528673`*^9}, {
  3.866544418602263*^9, 3.866544438520904*^9}, {3.866545280283021*^9, 
  3.86654528043489*^9}, {3.873432080553018*^9, 3.87343208201306*^9}, {
  3.8734374299224586`*^9, 3.873437454424388*^9}, {3.873951046413746*^9, 
  3.873951046795083*^9}, {3.8739512093380136`*^9, 3.87395120969669*^9}, {
  3.87395153732437*^9, 3.873951565400722*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox["\<\"Code bits: \\!\\(12\\)\"\>",
      StringForm["Code bits: ``", 12],
      Editable->False]},
    {
     InterpretationBox["\<\"Sampling domain bits: \\!\\(18\\)\"\>",
      StringForm["Sampling domain bits: ``", 18],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of polynomials for batch open: \
\\!\\(300\\)\"\>",
      StringForm["Number of polynomials for batch open: ``", 300],
      Editable->False]},
    {
     InterpretationBox["\<\"Johnson proximity m: \\!\\(1427\\)\"\>",
      StringForm["Johnson proximity m: ``", 1427],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error commit phase: \
2^\\!\\(-68.00362509618094`\\)\"\>",
      StringForm["Soundness error commit phase: 2^``", -68.00362509618094],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of query rounds: \\!\\(23\\)\"\>",
      StringForm["Number of query rounds: ``", 23],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error query phase: \
2^\\!\\(-68.98837555218785`\\)\"\>",
      StringForm["Soundness error query phase: 2^``", -68.98837555218785],
      Editable->False]},
    {
     InterpretationBox["\<\"revealed poly size: \\!\\(32\\) FE\"\>",
      StringForm["revealed poly size: `` FE", 32],
      Editable->False]},
    {
     InterpretationBox["\<\"per round: \\!\\(96\\) path elems + \\!\\(372\\) \
values = \\!\\(468\\) FE\"\>",
      StringForm["per round: `` path elems + `` values = `` FE", 96, 372, 468],
      Editable->False]},
    {
     InterpretationBox["\<\"\\!\\(23\\) rounds: \\!\\(10764\\) FE\"\>",
      StringForm["`` rounds: `` FE", 23, 10764],
      Editable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.866542196547394*^9, {3.86654223257095*^9, 3.866542284732374*^9}, {
   3.866542338678318*^9, 3.866542353117196*^9}, {3.8665424356466703`*^9, 
   3.866542527575019*^9}, {3.8665425726357393`*^9, 3.866542595294553*^9}, 
   3.8665426825107327`*^9, {3.866543739713994*^9, 3.866543763471264*^9}, {
   3.866544259666651*^9, 3.866544282418334*^9}, {3.86654442071981*^9, 
   3.866544438934843*^9}, 3.866545287930093*^9, 3.873432044002719*^9, 
   3.873432083202064*^9, {3.873437439969797*^9, 3.87343745468762*^9}, 
   3.873950165600582*^9, 3.8739502966235123`*^9, 3.873951047428334*^9, 
   3.873951210438099*^9, {3.873951538225645*^9, 3.873951565715302*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"208896", ",", "88928"}], "}"}]], "Output",
 CellChangeTimes->{
  3.86654183404768*^9, 3.866542196543552*^9, {3.866542232569265*^9, 
   3.8665422847307463`*^9}, {3.8665423386765823`*^9, 3.866542353115292*^9}, {
   3.866542435644663*^9, 3.8665425275786858`*^9}, {3.86654257263724*^9, 
   3.866542595299255*^9}, 3.866542682517784*^9, {3.8665437397185926`*^9, 
   3.866543763475625*^9}, {3.866544259673326*^9, 3.866544282422586*^9}, {
   3.8665444207249413`*^9, 3.866544438939168*^9}, 3.866545287936496*^9, 
   3.873432044014929*^9, 3.873432083211025*^9, {3.8734374399804688`*^9, 
   3.873437454700328*^9}, 3.873950165612578*^9, 3.873950296633833*^9, 
   3.873951047438266*^9, 3.873951210452876*^9, {3.873951538236418*^9, 
   3.87395156572582*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "67"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsCode", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", 
   RowBox[{"{", 
    RowBox[{"100", ",", "100", ",", "100"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"capLevel", "=", "3"}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "set", " ", "to", " ", "minimize", " ", "the", " ", "proof", " ", "size"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"numHashes", ",", " ", "proofBytes"}], "}"}], "=", 
   RowBox[{"prover", "[", 
    RowBox[{"numPolys", ",", " ", "bitsCode", ",", " ", 
     RowBox[{"{", 
      RowBox[{"bitsSec", ",", "bitsRate", ",", "arities", ",", "capLevel"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<BitsBaseField\>\"", "\[Rule]", "64"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<ExtensionDegree\>\"", "\[Rule]", "3"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Hiding\>\"", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQ7atvw3Dj3BvHuppLYHqKfxMXiF7D3SsJorWjTRVA
9DUeWSUQ3ftwoR6InjM50QFERzxb4A6if+SvBtOxkn/PgmhmUaFLIHreRzeB
m0Da64mLMIje6xqsAqLtV19QA9FNfJwTQPS8V7xgOmVL+SEQrba6HUxXnfhy
CkQvf3HhLIgOdjh5CURr9D8E0z/uR0ndAtIJ6SLSIFpxr70iiLbx3wWmC2Yy
O/+5/cZRZ50HmH4x6eTtf0BafeqxuyB6xbMFK3/eeePYZ78KTH+T6DsIohnk
ZoDpR9+uvQHRYYKN70A0ABIft60=
  "]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox["\<\"Code bits: \\!\\(12\\)\"\>",
      StringForm["Code bits: ``", 12],
      Editable->False]},
    {
     InterpretationBox["\<\"Sampling domain bits: \\!\\(20\\)\"\>",
      StringForm["Sampling domain bits: ``", 20],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of polynomials for batch open: \
\\!\\(300\\)\"\>",
      StringForm["Number of polynomials for batch open: ``", 300],
      Editable->False]},
    {
     InterpretationBox["\<\"Johnson proximity m: \\!\\(713\\)\"\>",
      StringForm["Johnson proximity m: ``", 713],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error commit phase: \
2^\\!\\(-68.00716297160203`\\)\"\>",
      StringForm["Soundness error commit phase: 2^``", -68.00716297160203],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of query rounds: \\!\\(18\\)\"\>",
      StringForm["Number of query rounds: ``", 18],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error query phase: \
2^\\!\\(-71.98179564542625`\\)\"\>",
      StringForm["Soundness error query phase: 2^``", -71.98179564542625],
      Editable->False]},
    {
     InterpretationBox["\<\"revealed poly size: \\!\\(32\\) FE\"\>",
      StringForm["revealed poly size: `` FE", 32],
      Editable->False]},
    {
     InterpretationBox["\<\"per round: \\!\\(120\\) path elems + \\!\\(372\\) \
values = \\!\\(492\\) FE\"\>",
      StringForm[
      "per round: `` path elems + `` values = `` FE", 120, 372, 492],
      Editable->False]},
    {
     InterpretationBox["\<\"\\!\\(18\\) rounds: \\!\\(8856\\) FE\"\>",
      StringForm["`` rounds: `` FE", 18, 8856],
      Editable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.866545685589541*^9, {3.86654575270338*^9, 3.866545775046981*^9}, 
   3.866545815414405*^9, 3.8665463933320017`*^9, {3.8665464425425262`*^9, 
   3.866546446143752*^9}, 3.873432050163537*^9, 3.87343210487059*^9, 
   3.873432285558159*^9, {3.87343741369508*^9, 3.8734374225227337`*^9}, 
   3.8739501842363586`*^9, 3.873950303357049*^9, 3.873951053956312*^9, 
   3.873951245524684*^9, {3.873951591407819*^9, 3.873951604375156*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"835584", ",", "72384"}], "}"}]], "Output",
 CellChangeTimes->{
  3.866545685595701*^9, {3.8665457527071*^9, 3.866545775051065*^9}, 
   3.866545815417647*^9, 3.8665463933368607`*^9, {3.866546442546414*^9, 
   3.8665464461478643`*^9}, 3.873432050171823*^9, 3.8734321048807373`*^9, 
   3.8734322855681*^9, {3.8734374137070637`*^9, 3.873437422534333*^9}, 
   3.8739501842472553`*^9, 3.87395030337147*^9, 3.873951053972824*^9, 
   3.87395124553996*^9, {3.873951591421624*^9, 3.873951604386754*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "67"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsCode", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", 
   RowBox[{"{", 
    RowBox[{"100", ",", "100", ",", "100"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"capLevel", "=", "3"}], ";", 
  RowBox[{"(*", " ", 
   RowBox[{
   "set", " ", "to", " ", "minimize", " ", "the", " ", "proof", " ", "size"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"numHashes", ",", " ", "proofBytes"}], "}"}], "=", 
   RowBox[{"prover", "[", 
    RowBox[{"numPolys", ",", " ", "bitsCode", ",", " ", 
     RowBox[{"{", 
      RowBox[{"bitsSec", ",", "bitsRate", ",", "arities", ",", "capLevel"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<BitsBaseField\>\"", "\[Rule]", "64"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<ExtensionDegree\>\"", "\[Rule]", "3"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Hiding\>\"", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQ7atvw3Dj3BvHuppLYHqKfxMXiF7D3SsJorWjTRVA
9DUeWSUQ3ftwoR6InjM50QFERzxb4A6if+SvBtOxkn/PgmhmUaFLIHreRzeB
m0Da64mLMIje6xqsAqLtV19QA9FNfJwTQPS8V7xgOmVL+SEQrba6HUxXnfhy
CkQvf3HhLIgOdjh5CURr9D8E0z/uR0ndAtIJ6SLSIFpxr70iiM7Jn68Goqcd
6XX9c/uN47KkBWB6mjfjtX9Aum/uu1sgesddtVU/77xx5F5hCKb5vKcfBdFh
V+aD6dtv3d+D6Dmnp34A0QAwq7hf
  "]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox["\<\"Code bits: \\!\\(12\\)\"\>",
      StringForm["Code bits: ``", 12],
      Editable->False]},
    {
     InterpretationBox["\<\"Sampling domain bits: \\!\\(22\\)\"\>",
      StringForm["Sampling domain bits: ``", 22],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of polynomials for batch open: \
\\!\\(300\\)\"\>",
      StringForm["Number of polynomials for batch open: ``", 300],
      Editable->False]},
    {
     InterpretationBox["\<\"Johnson proximity m: \\!\\(356\\)\"\>",
      StringForm["Johnson proximity m: ``", 356],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error commit phase: \
2^\\!\\(-68.01424244282516`\\)\"\>",
      StringForm["Soundness error commit phase: 2^``", -68.01424244282516],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of query rounds: \\!\\(14\\)\"\>",
      StringForm["Number of query rounds: ``", 14],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error query phase: \
2^\\!\\(-69.97165230331514`\\)\"\>",
      StringForm["Soundness error query phase: 2^``", -69.97165230331514],
      Editable->False]},
    {
     InterpretationBox["\<\"revealed poly size: \\!\\(32\\) FE\"\>",
      StringForm["revealed poly size: `` FE", 32],
      Editable->False]},
    {
     InterpretationBox["\<\"per round: \\!\\(136\\) path elems + \\!\\(372\\) \
values = \\!\\(508\\) FE\"\>",
      StringForm[
      "per round: `` path elems + `` values = `` FE", 136, 372, 508],
      Editable->False]},
    {
     InterpretationBox["\<\"\\!\\(14\\) rounds: \\!\\(7112\\) FE\"\>",
      StringForm["`` rounds: `` FE", 14, 7112],
      Editable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{{3.8665464699777184`*^9, 3.866546485252984*^9}, 
   3.873432053621418*^9, 3.8734321095923967`*^9, 3.873432332863721*^9, {
   3.873437362678823*^9, 3.873437399682704*^9}, 3.8739503133251057`*^9, 
   3.873951057860846*^9, 3.8739512776629133`*^9, {3.873951610746768*^9, 
   3.873951621155652*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3342336", ",", "58432"}], "}"}]], "Output",
 CellChangeTimes->{{3.866546469986479*^9, 3.866546485256516*^9}, 
   3.873432053635462*^9, 3.8734321096152067`*^9, 3.8734323328813763`*^9, {
   3.873437362691164*^9, 3.873437399691877*^9}, 3.873950313341543*^9, 
   3.87395105787259*^9, 3.873951277690578*^9, {3.873951610760117*^9, 
   3.873951621179821*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["112 bits security ", "Subsection",
 CellChangeTimes->{{3.866539105262838*^9, 3.866539185751379*^9}, {
  3.866542372445839*^9, 3.866542374006098*^9}, {3.866547085257069*^9, 
  3.866547093968883*^9}}],

Cell[CellGroupData[{

Cell["degree 3 extensions", "Subsubsection",
 CellChangeTimes->{{3.8665463042264023`*^9, 3.86654630885823*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "112"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsCode", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", 
   RowBox[{"{", 
    RowBox[{"100", ",", "100", ",", "100"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"capLevel", "=", "4"}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "set", " ", "to", " ", "minimize", " ", "the", " ", "proof", " ", "size"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"numHashes", ",", " ", "proofBytes"}], "}"}], "=", 
   RowBox[{"prover", "[", 
    RowBox[{"numPolys", ",", " ", "bitsCode", ",", " ", 
     RowBox[{"{", 
      RowBox[{"bitsSec", ",", "bitsRate", ",", "arities", ",", "capLevel"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<BitsBaseField\>\"", "\[Rule]", "64"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<ExtensionDegree\>\"", "\[Rule]", "3"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Hiding\>\"", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.866542081880774*^9, 3.866542086577697*^9}, {
  3.866542164072214*^9, 3.866542284407675*^9}, {3.866542337667379*^9, 
  3.866542352907817*^9}, {3.866542453058783*^9, 3.8665425950492687`*^9}, {
  3.866542653028118*^9, 3.866542653357418*^9}, {3.866543727909346*^9, 
  3.866543760565065*^9}, {3.8665442582169943`*^9, 3.8665442821528673`*^9}, {
  3.866544418602263*^9, 3.866544438520904*^9}, {3.866545280283021*^9, 
  3.86654528043489*^9}, {3.8665471027175903`*^9, 3.866547104002684*^9}, {
  3.866547196399304*^9, 3.866547210028801*^9}, {3.873437262164509*^9, 
  3.8734373007711697`*^9}, {3.873951398000648*^9, 3.8739514126918783`*^9}, {
  3.87395166166018*^9, 3.8739516765081663`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox["\<\"Code bits: \\!\\(12\\)\"\>",
      StringForm["Code bits: ``", 12],
      Editable->False]},
    {
     InterpretationBox["\<\"Sampling domain bits: \\!\\(18\\)\"\>",
      StringForm["Sampling domain bits: ``", 18],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of polynomials for batch open: \
\\!\\(300\\)\"\>",
      StringForm["Number of polynomials for batch open: ``", 300],
      Editable->False]},
    {
     InterpretationBox["\<\"Johnson proximity m: \\!\\(16\\)\"\>",
      StringForm["Johnson proximity m: ``", 16],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error commit phase: \
2^\\!\\(-113.0477914724232`\\)\"\>",
      StringForm["Soundness error commit phase: 2^``", -113.0477914724232],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of query rounds: \\!\\(39\\)\"\>",
      StringForm["Number of query rounds: ``", 39],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error query phase: \
2^\\!\\(-115.26862934502032`\\)\"\>",
      StringForm["Soundness error query phase: 2^``", -115.26862934502032`],
      Editable->False]},
    {
     InterpretationBox["\<\"revealed poly size: \\!\\(32\\) FE\"\>",
      StringForm["revealed poly size: `` FE", 32],
      Editable->False]},
    {
     InterpretationBox["\<\"per round: \\!\\(96\\) path elems + \\!\\(372\\) \
values = \\!\\(468\\) FE\"\>",
      StringForm["per round: `` path elems + `` values = `` FE", 96, 372, 468],
      Editable->False]},
    {
     InterpretationBox["\<\"\\!\\(39\\) rounds: \\!\\(18252\\) FE\"\>",
      StringForm["`` rounds: `` FE", 39, 18252],
      Editable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.866542196547394*^9, {3.86654223257095*^9, 3.866542284732374*^9}, {
   3.866542338678318*^9, 3.866542353117196*^9}, {3.8665424356466703`*^9, 
   3.866542527575019*^9}, {3.8665425726357393`*^9, 3.866542595294553*^9}, 
   3.8665426825107327`*^9, {3.866543739713994*^9, 3.866543763471264*^9}, {
   3.866544259666651*^9, 3.866544282418334*^9}, {3.86654442071981*^9, 
   3.866544438934843*^9}, 3.866545287930093*^9, 3.866547106431048*^9, {
   3.8665471970936728`*^9, 3.866547210391577*^9}, 3.8665472861898737`*^9, 
   3.8734323747154083`*^9, 3.873432525698695*^9, {3.873437265144269*^9, 
   3.8734372787086153`*^9}, 3.873950326663426*^9, 3.8739513446994247`*^9, {
   3.873951400479065*^9, 3.8739514137892447`*^9}, {3.873951643509849*^9, 
   3.87395167757442*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"208896", ",", "148832"}], "}"}]], "Output",
 CellChangeTimes->{
  3.86654183404768*^9, 3.866542196543552*^9, {3.866542232569265*^9, 
   3.8665422847307463`*^9}, {3.8665423386765823`*^9, 3.866542353115292*^9}, {
   3.866542435644663*^9, 3.8665425275786858`*^9}, {3.86654257263724*^9, 
   3.866542595299255*^9}, 3.866542682517784*^9, {3.8665437397185926`*^9, 
   3.866543763475625*^9}, {3.866544259673326*^9, 3.866544282422586*^9}, {
   3.8665444207249413`*^9, 3.866544438939168*^9}, 3.866545287936496*^9, 
   3.8665471064359503`*^9, {3.866547197099378*^9, 3.866547210396707*^9}, 
   3.8665472861949577`*^9, 3.873432374726125*^9, 3.873432525713697*^9, {
   3.8734372651585693`*^9, 3.8734372787240562`*^9}, 3.873950326672934*^9, 
   3.87395134476292*^9, {3.873951400496842*^9, 3.873951413827474*^9}, {
   3.873951643557379*^9, 3.873951677613812*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "112"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsCode", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", 
   RowBox[{"{", 
    RowBox[{"100", ",", "100", ",", "100"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"capLevel", "=", "4"}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "set", " ", "to", " ", "minimize", " ", "the", " ", "proof", " ", "size"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"numHashes", ",", " ", "proofBytes"}], "}"}], "=", 
   RowBox[{"prover", "[", 
    RowBox[{"numPolys", ",", " ", "bitsCode", ",", " ", 
     RowBox[{"{", 
      RowBox[{"bitsSec", ",", "bitsRate", ",", "arities", ",", "capLevel"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<BitsBaseField\>\"", "\[Rule]", "64"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<ExtensionDegree\>\"", "\[Rule]", "3"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Hiding\>\"", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQ7atvw3Dj3BvHuppLYHqKfxMXiF7D3SsJorWjTRVA
9DUeWSUQ3ftwoR6InjM50QFERzxb4A6if+SvBtOxkn/PgmhmUaFLIHreRzeB
m0Da64mLMIje6xqsAqLtV19QA9FNfJwTQPS8V7xgOmVL+SEQrba6HUxXnfhy
CkQvf3HhLIgOdjh5CURr9D8E0z/uR0ndAtIJ6SLSIFpxr70iiLbx3wWmeY6J
l4HoGStMwLSLsP2xf7ffOL4qPnsCRHuo9ZwH0U0rpoDpLzmGN37eeeNYO1nw
Fohe3T7zN4jW+7fnD4gGALq1tuY=
  "]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox["\<\"Code bits: \\!\\(12\\)\"\>",
      StringForm["Code bits: ``", 12],
      Editable->False]},
    {
     InterpretationBox["\<\"Sampling domain bits: \\!\\(20\\)\"\>",
      StringForm["Sampling domain bits: ``", 20],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of polynomials for batch open: \
\\!\\(300\\)\"\>",
      StringForm["Number of polynomials for batch open: ``", 300],
      Editable->False]},
    {
     InterpretationBox["\<\"Johnson proximity m: \\!\\(7\\)\"\>",
      StringForm["Johnson proximity m: ``", 7],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error commit phase: \
2^\\!\\(-114.01031613867272`\\)\"\>",
      StringForm["Soundness error commit phase: 2^``", -114.01031613867272`],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of query rounds: \\!\\(29\\)\"\>",
      StringForm["Number of query rounds: ``", 29],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error query phase: \
2^\\!\\(-113.11346546702347`\\)\"\>",
      StringForm["Soundness error query phase: 2^``", -113.11346546702347`],
      Editable->False]},
    {
     InterpretationBox["\<\"revealed poly size: \\!\\(32\\) FE\"\>",
      StringForm["revealed poly size: `` FE", 32],
      Editable->False]},
    {
     InterpretationBox["\<\"per round: \\!\\(112\\) path elems + \\!\\(372\\) \
values = \\!\\(484\\) FE\"\>",
      StringForm[
      "per round: `` path elems + `` values = `` FE", 112, 372, 484],
      Editable->False]},
    {
     InterpretationBox["\<\"\\!\\(29\\) rounds: \\!\\(14036\\) FE\"\>",
      StringForm["`` rounds: `` FE", 29, 14036],
      Editable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.866545685589541*^9, {3.86654575270338*^9, 3.866545775046981*^9}, 
   3.866545815414405*^9, 3.8665463933320017`*^9, {3.8665464425425262`*^9, 
   3.866546446143752*^9}, 3.866547122055551*^9, 3.873432380646006*^9, {
   3.873437230548015*^9, 3.8734372548245897`*^9}, 3.873950330883116*^9, 
   3.873951341801453*^9, {3.8739514288790483`*^9, 3.873951440948463*^9}, {
   3.873951705966744*^9, 3.8739517182129507`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"835584", ",", "115104"}], "}"}]], "Output",
 CellChangeTimes->{
  3.866545685595701*^9, {3.8665457527071*^9, 3.866545775051065*^9}, 
   3.866545815417647*^9, 3.8665463933368607`*^9, {3.866546442546414*^9, 
   3.8665464461478643`*^9}, 3.866547122062665*^9, 3.873432380659433*^9, {
   3.873437230559114*^9, 3.873437254874897*^9}, 3.873950330894354*^9, 
   3.8739513418131332`*^9, {3.873951428891062*^9, 3.873951440982752*^9}, {
   3.8739517059918127`*^9, 3.8739517182447863`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "112"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsCode", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", 
   RowBox[{"{", 
    RowBox[{"100", ",", "100", ",", "100"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"capLevel", "=", "4"}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "set", " ", "to", " ", "minimize", " ", "the", " ", "proof", " ", "size"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"numHashes", ",", " ", "proofBytes"}], "}"}], "=", 
   RowBox[{"prover", "[", 
    RowBox[{"numPolys", ",", " ", "bitsCode", ",", " ", 
     RowBox[{"{", 
      RowBox[{"bitsSec", ",", "bitsRate", ",", "arities", ",", "capLevel"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<BitsBaseField\>\"", "\[Rule]", "64"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<ExtensionDegree\>\"", "\[Rule]", "3"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Hiding\>\"", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQ7atvw3Dj3BvHuppLYHqKfxMXiF7D3SsJorWjTRVA
9DUeWSUQ3ftwoR6InjM50QFERzxb4A6if+SvBtOxkn/PgmhmUaFLIHreRzeB
m0Da64mLMIje6xqsAqLtV19QA9FNfJwTQPS8V7xgOmVL+SEQrba6HUxXnfhy
CkQvf3HhLIgOdjh5CURr9D8E0z/uR0ndAtIJ6SLSIFpxr70iiM7Jn68GonfN
uVQGoj8dYi4H0SIr+A7+u/3GUdZj+xEQvUnv9XkQ7bfjM5jOeW1x4eedN45F
xnUXQXSI0JpbINrNW/sOiAYAK5K2lQ==
  "]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox["\<\"Code bits: \\!\\(12\\)\"\>",
      StringForm["Code bits: ``", 12],
      Editable->False]},
    {
     InterpretationBox["\<\"Sampling domain bits: \\!\\(22\\)\"\>",
      StringForm["Sampling domain bits: ``", 22],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of polynomials for batch open: \
\\!\\(300\\)\"\>",
      StringForm["Number of polynomials for batch open: ``", 300],
      Editable->False]},
    {
     InterpretationBox["\<\"Johnson proximity m: \\!\\(3\\)\"\>",
      StringForm["Johnson proximity m: ``", 3],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error commit phase: \
2^\\!\\(-114.70706585352897`\\)\"\>",
      StringForm["Soundness error commit phase: 2^``", -114.70706585352897`],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of query rounds: \\!\\(24\\)\"\>",
      StringForm["Number of query rounds: ``", 24],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error query phase: \
2^\\!\\(-114.66258188792526`\\)\"\>",
      StringForm["Soundness error query phase: 2^``", -114.66258188792526`],
      Editable->False]},
    {
     InterpretationBox["\<\"revealed poly size: \\!\\(32\\) FE\"\>",
      StringForm["revealed poly size: `` FE", 32],
      Editable->False]},
    {
     InterpretationBox["\<\"per round: \\!\\(128\\) path elems + \\!\\(372\\) \
values = \\!\\(500\\) FE\"\>",
      StringForm[
      "per round: `` path elems + `` values = `` FE", 128, 372, 500],
      Editable->False]},
    {
     InterpretationBox["\<\"\\!\\(24\\) rounds: \\!\\(12000\\) FE\"\>",
      StringForm["`` rounds: `` FE", 24, 12000],
      Editable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{{3.8665464699777184`*^9, 3.866546485252984*^9}, 
   3.8665471289238253`*^9, 3.873432384031633*^9, {3.873437188732526*^9, 
   3.87343722217806*^9}, 3.873950336274542*^9, 3.8739513274316196`*^9, {
   3.8739513627679863`*^9, 3.873951372911722*^9}, {3.8739514465504217`*^9, 
   3.87395145785714*^9}, 3.873951740311594*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3342336", ",", "98816"}], "}"}]], "Output",
 CellChangeTimes->{{3.866546469986479*^9, 3.866546485256516*^9}, 
   3.866547128929674*^9, 3.873432384050846*^9, {3.8734371887334757`*^9, 
   3.873437222229694*^9}, 3.8739503363437557`*^9, 3.873951327442698*^9, {
   3.873951362805085*^9, 3.873951372963593*^9}, {3.87395144656605*^9, 
   3.873951457866828*^9}, 3.873951740323535*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["108 bits security", "Subsection",
 CellChangeTimes->{{3.873433608264882*^9, 3.87343361127931*^9}}],

Cell[CellGroupData[{

Cell["degree 3 extensions", "Subsubsection",
 CellChangeTimes->{{3.8734336218789167`*^9, 3.8734336251821957`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "109"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsCode", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "11"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", 
   RowBox[{"{", 
    RowBox[{"100", ",", "100", ",", "100"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"capLevel", "=", "4"}], ";", 
  RowBox[{"(*", " ", 
   RowBox[{
   "set", " ", "to", " ", "minimize", " ", "the", " ", "proof", " ", "size"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"numHashes", ",", " ", "proofBytes"}], "}"}], "=", 
   RowBox[{"prover", "[", 
    RowBox[{"numPolys", ",", " ", "bitsCode", ",", " ", 
     RowBox[{"{", 
      RowBox[{"bitsSec", ",", "bitsRate", ",", "arities", ",", "capLevel"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<BitsBaseField\>\"", "\[Rule]", "64"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<ExtensionDegree\>\"", "\[Rule]", "3"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Hiding\>\"", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQ7atvw3Dj3BvHuppLYHqKfxMXiF7D3SsJorWjTRVA
9DUeWSUQ3ftwoR6InjM50QFERzxb4A6if+SvBtOxkn/PgmhmUaFLIHreRzeB
m0Da64mLMIje6xqsAqLtV19QA9FNfJwTQPS8V7xgOmVL+SEQrba6HUxXnfhy
CkQvf3HhLIgOdjh5CURr9D8E0z/uR0ndAtIJ6SLSIFpxr70iiM7Jn68GonfN
uVQGoj8dYi4H0Ye4Pz/4c/uNY8jhB09A9KRMX46/QHrX+ZVCIDpubocsiP7E
HSEHovV8L134B6RvvZt6GUQDAEaYt2g=
  "]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox["\<\"Code bits: \\!\\(12\\)\"\>",
      StringForm["Code bits: ``", 12],
      Editable->False]},
    {
     InterpretationBox["\<\"Sampling domain bits: \\!\\(23\\)\"\>",
      StringForm["Sampling domain bits: ``", 23],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of polynomials for batch open: \
\\!\\(300\\)\"\>",
      StringForm["Number of polynomials for batch open: ``", 300],
      Editable->False]},
    {
     InterpretationBox["\<\"Johnson proximity m: \\!\\(3\\)\"\>",
      StringForm["Johnson proximity m: ``", 3],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error commit phase: \
2^\\!\\(-109.62210335280797`\\)\"\>",
      StringForm["Soundness error commit phase: 2^``", -109.62210335280797`],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of query rounds: \\!\\(21\\)\"\>",
      StringForm["Number of query rounds: ``", 21],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error query phase: \
2^\\!\\(-110.8297591519346`\\)\"\>",
      StringForm["Soundness error query phase: 2^``", -110.8297591519346],
      Editable->False]},
    {
     InterpretationBox["\<\"revealed poly size: \\!\\(32\\) FE\"\>",
      StringForm["revealed poly size: `` FE", 32],
      Editable->False]},
    {
     InterpretationBox["\<\"per round: \\!\\(136\\) path elems + \\!\\(372\\) \
values = \\!\\(508\\) FE\"\>",
      StringForm[
      "per round: `` path elems + `` values = `` FE", 136, 372, 508],
      Editable->False]},
    {
     InterpretationBox["\<\"\\!\\(21\\) rounds: \\!\\(10668\\) FE\"\>",
      StringForm["`` rounds: `` FE", 21, 10668],
      Editable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{{3.8665464699777184`*^9, 3.866546485252984*^9}, 
   3.8665471289238253`*^9, 3.873432384031633*^9, {3.8734333521524897`*^9, 
   3.873433383680979*^9}, 3.8734336303163643`*^9, {3.873433667724721*^9, 
   3.873433749913817*^9}, {3.873433837268221*^9, 3.873433843472378*^9}, {
   3.873437324497004*^9, 3.873437340984274*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6684672", ",", "88160"}], "}"}]], "Output",
 CellChangeTimes->{{3.866546469986479*^9, 3.866546485256516*^9}, 
   3.866547128929674*^9, 3.873432384050846*^9, {3.873433352161626*^9, 
   3.873433383692193*^9}, 3.8734336303700647`*^9, {3.873433667736868*^9, 
   3.8734337499648237`*^9}, {3.8734338372827044`*^9, 3.873433843484642*^9}, {
   3.873437324518922*^9, 3.87343734099718*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["128 bits security ", "Subsection",
 CellChangeTimes->{{3.866539105262838*^9, 3.866539185751379*^9}, {
  3.866542372445839*^9, 3.866542374006098*^9}, {3.866547085257069*^9, 
  3.866547093968883*^9}, {3.866547428188251*^9, 3.8665474292117567`*^9}, {
  3.873432991015148*^9, 3.873432991306952*^9}, {3.873438714676972*^9, 
  3.873438715038845*^9}}],

Cell[CellGroupData[{

Cell["degree 3 extensions", "Subsubsection",
 CellChangeTimes->{{3.8665463042264023`*^9, 3.86654630885823*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "128"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsCode", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", 
   RowBox[{"{", 
    RowBox[{"100", ",", "100", ",", "100"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"capLevel", "=", "6"}], ";", 
  RowBox[{"(*", " ", 
   RowBox[{
   "set", " ", "to", " ", "minimize", " ", "the", " ", "proof", " ", "size"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"numHashes", ",", " ", "proofBytes"}], "}"}], "=", 
   RowBox[{"prover", "[", 
    RowBox[{"numPolys", ",", " ", "bitsCode", ",", " ", 
     RowBox[{"{", 
      RowBox[{"bitsSec", ",", "bitsRate", ",", "arities", ",", "capLevel"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<BitsBaseField\>\"", "\[Rule]", "64"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<ExtensionDegree\>\"", "\[Rule]", "3"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Hiding\>\"", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQ7atvw3Dj3BvHuppLYHqKfxMXiF7D3SsJorWjTRVA
9DUeWSUQ3ftwoR6InjM50QFERzxb4A6if+SvBtOxkn/PgmhmUaFLIHreRzeB
m0Da64mLMIje6xqsAqLtV19QA9FNfJwTQPS8V7xguuHbteJbQPqvKEMJiJY8
3lMPoj+8dmgE0QyCEnNB9KLlhmD637RT0/7cBrp/fssMED3Xk3E1iP5QvhxM
r1f7sQ1Eu17X3wGiX6WaHQbRhmpWYPq2Q4PZXyA9Y3k3mJYzelz/H0irPBJq
BdGqrJNZf91548gmuosdRAMAlH6y/g==
  "]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox["\<\"Code bits: \\!\\(12\\)\"\>",
      StringForm["Code bits: ``", 12],
      Editable->False]},
    {
     InterpretationBox["\<\"Sampling domain bits: \\!\\(15\\)\"\>",
      StringForm["Sampling domain bits: ``", 15],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of polynomials for batch open: \
\\!\\(300\\)\"\>",
      StringForm["Number of polynomials for batch open: ``", 300],
      Editable->False]},
    {
     InterpretationBox["\<\"Johnson proximity m: \\!\\(9\\)\"\>",
      StringForm["Johnson proximity m: ``", 9],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error commit phase: \
2^\\!\\(-129.12305771382006`\\)\"\>",
      StringForm["Soundness error commit phase: 2^``", -129.12305771382006`],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of query rounds: \\!\\(91\\)\"\>",
      StringForm["Number of query rounds: ``", 91],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error query phase: \
2^\\!\\(-129.40177140788415`\\)\"\>",
      StringForm["Soundness error query phase: 2^``", -129.40177140788415`],
      Editable->False]},
    {
     InterpretationBox["\<\"revealed poly size: \\!\\(32\\) FE\"\>",
      StringForm["revealed poly size: `` FE", 32],
      Editable->False]},
    {
     InterpretationBox["\<\"per round: \\!\\(56\\) path elems + \\!\\(372\\) \
values = \\!\\(428\\) FE\"\>",
      StringForm["per round: `` path elems + `` values = `` FE", 56, 372, 428],
      Editable->False]},
    {
     InterpretationBox["\<\"\\!\\(91\\) rounds: \\!\\(38948\\) FE\"\>",
      StringForm["`` rounds: `` FE", 91, 38948],
      Editable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.866542196547394*^9, {3.86654223257095*^9, 3.866542284732374*^9}, {
   3.866542338678318*^9, 3.866542353117196*^9}, {3.8665424356466703`*^9, 
   3.866542527575019*^9}, {3.8665425726357393`*^9, 3.866542595294553*^9}, 
   3.8665426825107327`*^9, {3.866543739713994*^9, 3.866543763471264*^9}, {
   3.866544259666651*^9, 3.866544282418334*^9}, {3.86654442071981*^9, 
   3.866544438934843*^9}, 3.866545287930093*^9, 3.866547106431048*^9, {
   3.8665471970936728`*^9, 3.866547210391577*^9}, 3.8665472861898737`*^9, 
   3.866547435033017*^9, 3.866547609547242*^9, 3.870950144548717*^9, {
   3.873432741621923*^9, 3.873432772613624*^9}, {3.8734329210089006`*^9, 
   3.873432925735627*^9}, {3.873433016594254*^9, 3.873433026775639*^9}, 
   3.8734331142021646`*^9, 3.873434037161766*^9, {3.873438735196495*^9, 
   3.8734387610022*^9}, 3.873950466812298*^9, {3.873951769270165*^9, 
   3.873951806142984*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"26112", ",", "322080"}], "}"}]], "Output",
 CellChangeTimes->{
  3.86654183404768*^9, 3.866542196543552*^9, {3.866542232569265*^9, 
   3.8665422847307463`*^9}, {3.8665423386765823`*^9, 3.866542353115292*^9}, {
   3.866542435644663*^9, 3.8665425275786858`*^9}, {3.86654257263724*^9, 
   3.866542595299255*^9}, 3.866542682517784*^9, {3.8665437397185926`*^9, 
   3.866543763475625*^9}, {3.866544259673326*^9, 3.866544282422586*^9}, {
   3.8665444207249413`*^9, 3.866544438939168*^9}, 3.866545287936496*^9, 
   3.8665471064359503`*^9, {3.866547197099378*^9, 3.866547210396707*^9}, 
   3.8665472861949577`*^9, 3.866547435037217*^9, 3.8665476095516443`*^9, 
   3.870950144550324*^9, {3.873432741636883*^9, 3.873432772624868*^9}, {
   3.8734329210198927`*^9, 3.87343292574747*^9}, {3.8734330166397877`*^9, 
   3.8734330268075743`*^9}, 3.8734331142127447`*^9, 3.873434037216776*^9, {
   3.873438735213151*^9, 3.873438761011619*^9}, 3.8739504668233128`*^9, {
   3.87395176927956*^9, 3.873951806161971*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "128"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsCode", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", 
   RowBox[{"{", 
    RowBox[{"100", ",", "100", ",", "100"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"capLevel", "=", "5"}], ";", 
  RowBox[{"(*", " ", 
   RowBox[{
   "set", " ", "to", " ", "minimize", " ", "the", " ", "proof", " ", "size"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"numHashes", ",", " ", "proofBytes"}], "}"}], "=", 
   RowBox[{"prover", "[", 
    RowBox[{"numPolys", ",", " ", "bitsCode", ",", " ", 
     RowBox[{"{", 
      RowBox[{"bitsSec", ",", "bitsRate", ",", "arities", ",", "capLevel"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<BitsBaseField\>\"", "\[Rule]", "64"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<ExtensionDegree\>\"", "\[Rule]", "3"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Hiding\>\"", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.866542081880774*^9, 3.866542086577697*^9}, {
  3.866542164072214*^9, 3.866542284407675*^9}, {3.866542337667379*^9, 
  3.866542352907817*^9}, {3.866542453058783*^9, 3.8665425950492687`*^9}, {
  3.866542653028118*^9, 3.866542653357418*^9}, {3.866543727909346*^9, 
  3.866543760565065*^9}, {3.8665442582169943`*^9, 3.8665442821528673`*^9}, {
  3.866544418602263*^9, 3.866544438520904*^9}, {3.866545280283021*^9, 
  3.86654528043489*^9}, {3.8665471027175903`*^9, 3.866547104002684*^9}, {
  3.866547196399304*^9, 3.866547210028801*^9}, {3.866547432752075*^9, 
  3.866547433551713*^9}, {3.8734327583309317`*^9, 3.8734327721444693`*^9}, {
  3.873432920040236*^9, 3.873432925233391*^9}, {3.873433015754722*^9, 
  3.873433025495028*^9}, {3.873434054778067*^9, 3.873434055694366*^9}, {
  3.8734387764971743`*^9, 3.873438791884571*^9}, {3.8739518238402147`*^9, 
  3.873951834501615*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox["\<\"Code bits: \\!\\(12\\)\"\>",
      StringForm["Code bits: ``", 12],
      Editable->False]},
    {
     InterpretationBox["\<\"Sampling domain bits: \\!\\(16\\)\"\>",
      StringForm["Sampling domain bits: ``", 16],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of polynomials for batch open: \
\\!\\(300\\)\"\>",
      StringForm["Number of polynomials for batch open: ``", 300],
      Editable->False]},
    {
     InterpretationBox["\<\"Johnson proximity m: \\!\\(6\\)\"\>",
      StringForm["Johnson proximity m: ``", 6],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error commit phase: \
2^\\!\\(-129.45547228092718`\\)\"\>",
      StringForm["Soundness error commit phase: 2^``", -129.45547228092718`],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of query rounds: \\!\\(69\\)\"\>",
      StringForm["Number of query rounds: ``", 69],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error query phase: \
2^\\!\\(-130.03207199802443`\\)\"\>",
      StringForm["Soundness error query phase: 2^``", -130.03207199802443`],
      Editable->False]},
    {
     InterpretationBox["\<\"revealed poly size: \\!\\(32\\) FE\"\>",
      StringForm["revealed poly size: `` FE", 32],
      Editable->False]},
    {
     InterpretationBox["\<\"per round: \\!\\(72\\) path elems + \\!\\(372\\) \
values = \\!\\(444\\) FE\"\>",
      StringForm["per round: `` path elems + `` values = `` FE", 72, 372, 444],
      Editable->False]},
    {
     InterpretationBox["\<\"\\!\\(69\\) rounds: \\!\\(30636\\) FE\"\>",
      StringForm["`` rounds: `` FE", 69, 30636],
      Editable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.866542196547394*^9, {3.86654223257095*^9, 3.866542284732374*^9}, {
   3.866542338678318*^9, 3.866542353117196*^9}, {3.8665424356466703`*^9, 
   3.866542527575019*^9}, {3.8665425726357393`*^9, 3.866542595294553*^9}, 
   3.8665426825107327`*^9, {3.866543739713994*^9, 3.866543763471264*^9}, {
   3.866544259666651*^9, 3.866544282418334*^9}, {3.86654442071981*^9, 
   3.866544438934843*^9}, 3.866545287930093*^9, 3.866547106431048*^9, {
   3.8665471970936728`*^9, 3.866547210391577*^9}, 3.8665472861898737`*^9, 
   3.866547435033017*^9, 3.866547609547242*^9, 3.870950144548717*^9, {
   3.873432741621923*^9, 3.873432772613624*^9}, {3.8734329210089006`*^9, 
   3.873432925735627*^9}, {3.873433016594254*^9, 3.873433026775639*^9}, 
   3.873434056468896*^9, {3.87343878096661*^9, 3.873438792248638*^9}, 
   3.8739504724705048`*^9, {3.873951811729803*^9, 3.873951834717222*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"52224", ",", "250464"}], "}"}]], "Output",
 CellChangeTimes->{
  3.86654183404768*^9, 3.866542196543552*^9, {3.866542232569265*^9, 
   3.8665422847307463`*^9}, {3.8665423386765823`*^9, 3.866542353115292*^9}, {
   3.866542435644663*^9, 3.8665425275786858`*^9}, {3.86654257263724*^9, 
   3.866542595299255*^9}, 3.866542682517784*^9, {3.8665437397185926`*^9, 
   3.866543763475625*^9}, {3.866544259673326*^9, 3.866544282422586*^9}, {
   3.8665444207249413`*^9, 3.866544438939168*^9}, 3.866545287936496*^9, 
   3.8665471064359503`*^9, {3.866547197099378*^9, 3.866547210396707*^9}, 
   3.8665472861949577`*^9, 3.866547435037217*^9, 3.8665476095516443`*^9, 
   3.870950144550324*^9, {3.873432741636883*^9, 3.873432772624868*^9}, {
   3.8734329210198927`*^9, 3.87343292574747*^9}, {3.8734330166397877`*^9, 
   3.8734330268075743`*^9}, 3.873434056510002*^9, {3.873438780998046*^9, 
   3.873438792294939*^9}, 3.8739504724861403`*^9, {3.873951811743061*^9, 
   3.873951834739525*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "128"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsCode", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", 
   RowBox[{"{", 
    RowBox[{"100", ",", "100", ",", "100"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"capLevel", "=", "5"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "set", " ", "to", " ", "minimize", " ", "the", " ", "proof", " ", "size"}],
    " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"numHashes", ",", " ", "proofBytes"}], "}"}], "=", 
  RowBox[{"prover", "[", 
   RowBox[{"numPolys", ",", " ", "bitsCode", ",", " ", 
    RowBox[{"{", 
     RowBox[{"bitsSec", ",", "bitsRate", ",", "arities", ",", "capLevel"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<BitsBaseField\>\"", "\[Rule]", "64"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<ExtensionDegree\>\"", "\[Rule]", "3"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Hiding\>\"", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.866542081880774*^9, 3.866542086577697*^9}, {
  3.866542164072214*^9, 3.866542284407675*^9}, {3.866542337667379*^9, 
  3.866542352907817*^9}, {3.866542453058783*^9, 3.8665425950492687`*^9}, {
  3.866542653028118*^9, 3.866542653357418*^9}, {3.866543727909346*^9, 
  3.866543760565065*^9}, {3.8665442582169943`*^9, 3.8665442821528673`*^9}, {
  3.866544418602263*^9, 3.866544438520904*^9}, {3.866545280283021*^9, 
  3.86654528043489*^9}, {3.8665471027175903`*^9, 3.866547104002684*^9}, {
  3.866547196399304*^9, 3.866547210028801*^9}, {3.866547432752075*^9, 
  3.866547433551713*^9}, {3.8734327583309317`*^9, 3.8734327721444693`*^9}, {
  3.873432920040236*^9, 3.873432925233391*^9}, {3.873433015754722*^9, 
  3.8734330427515697`*^9}, {3.8734388201249933`*^9, 3.873438852568261*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox["\<\"Code bits: \\!\\(12\\)\"\>",
      StringForm["Code bits: ``", 12],
      Editable->False]},
    {
     InterpretationBox["\<\"Sampling domain bits: \\!\\(17\\)\"\>",
      StringForm["Sampling domain bits: ``", 17],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of polynomials for batch open: \
\\!\\(300\\)\"\>",
      StringForm["Number of polynomials for batch open: ``", 300],
      Editable->False]},
    {
     InterpretationBox["\<\"Johnson proximity m: \\!\\(4\\)\"\>",
      StringForm["Johnson proximity m: ``", 4],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error commit phase: \
2^\\!\\(-129.66907529779635`\\)\"\>",
      StringForm["Soundness error commit phase: 2^``", -129.66907529779635`],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of query rounds: \\!\\(56\\)\"\>",
      StringForm["Number of query rounds: ``", 56],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error query phase: \
2^\\!\\(-130.48419991923052`\\)\"\>",
      StringForm["Soundness error query phase: 2^``", -130.48419991923052`],
      Editable->False]},
    {
     InterpretationBox["\<\"revealed poly size: \\!\\(32\\) FE\"\>",
      StringForm["revealed poly size: `` FE", 32],
      Editable->False]},
    {
     InterpretationBox["\<\"per round: \\!\\(80\\) path elems + \\!\\(372\\) \
values = \\!\\(452\\) FE\"\>",
      StringForm["per round: `` path elems + `` values = `` FE", 80, 372, 452],
      Editable->False]},
    {
     InterpretationBox["\<\"\\!\\(56\\) rounds: \\!\\(25312\\) FE\"\>",
      StringForm["`` rounds: `` FE", 56, 25312],
      Editable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.866542196547394*^9, {3.86654223257095*^9, 3.866542284732374*^9}, {
   3.866542338678318*^9, 3.866542353117196*^9}, {3.8665424356466703`*^9, 
   3.866542527575019*^9}, {3.8665425726357393`*^9, 3.866542595294553*^9}, 
   3.8665426825107327`*^9, {3.866543739713994*^9, 3.866543763471264*^9}, {
   3.866544259666651*^9, 3.866544282418334*^9}, {3.86654442071981*^9, 
   3.866544438934843*^9}, 3.866545287930093*^9, 3.866547106431048*^9, {
   3.8665471970936728`*^9, 3.866547210391577*^9}, 3.8665472861898737`*^9, 
   3.866547435033017*^9, 3.866547609547242*^9, 3.870950144548717*^9, {
   3.873432741621923*^9, 3.873432772613624*^9}, {3.8734329210089006`*^9, 
   3.873432925735627*^9}, 3.873433016594254*^9, 3.873433047622652*^9, 
   3.873433248953869*^9, 3.873434062089275*^9, {3.8734388345057373`*^9, 
   3.873438852974257*^9}, 3.873950475476124*^9, 3.8739505550464153`*^9, 
   3.8739518460638742`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"104448", ",", "207872"}], "}"}]], "Output",
 CellChangeTimes->{
  3.86654183404768*^9, 3.866542196543552*^9, {3.866542232569265*^9, 
   3.8665422847307463`*^9}, {3.8665423386765823`*^9, 3.866542353115292*^9}, {
   3.866542435644663*^9, 3.8665425275786858`*^9}, {3.86654257263724*^9, 
   3.866542595299255*^9}, 3.866542682517784*^9, {3.8665437397185926`*^9, 
   3.866543763475625*^9}, {3.866544259673326*^9, 3.866544282422586*^9}, {
   3.8665444207249413`*^9, 3.866544438939168*^9}, 3.866545287936496*^9, 
   3.8665471064359503`*^9, {3.866547197099378*^9, 3.866547210396707*^9}, 
   3.8665472861949577`*^9, 3.866547435037217*^9, 3.8665476095516443`*^9, 
   3.870950144550324*^9, {3.873432741636883*^9, 3.873432772624868*^9}, {
   3.8734329210198927`*^9, 3.87343292574747*^9}, 3.8734330166397877`*^9, 
   3.873433047643879*^9, 3.873433248965991*^9, 3.873434062107437*^9, {
   3.8734388345506277`*^9, 3.873438853018525*^9}, 3.8739504754904127`*^9, 
   3.873950555059485*^9, 3.873951846072536*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "128"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsCode", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", 
   RowBox[{"{", 
    RowBox[{"100", ",", "100", ",", "100"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"capLevel", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"numHashes", ",", " ", "proofBytes"}], "}"}], "=", 
  RowBox[{"prover", "[", 
   RowBox[{"numPolys", ",", " ", "bitsCode", ",", " ", 
    RowBox[{"{", 
     RowBox[{"bitsSec", ",", "bitsRate", ",", "arities", ",", "capLevel"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<BitsBaseField\>\"", "\[Rule]", "64"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<ExtensionDegree\>\"", "\[Rule]", "3"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Hiding\>\"", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.866542081880774*^9, 3.866542086577697*^9}, {
  3.866542164072214*^9, 3.866542284407675*^9}, {3.866542337667379*^9, 
  3.866542352907817*^9}, {3.866542453058783*^9, 3.8665425950492687`*^9}, {
  3.866542653028118*^9, 3.866542653357418*^9}, {3.866543727909346*^9, 
  3.866543760565065*^9}, {3.8665442582169943`*^9, 3.8665442821528673`*^9}, {
  3.866544418602263*^9, 3.866544438520904*^9}, {3.866545280283021*^9, 
  3.86654528043489*^9}, {3.8665471027175903`*^9, 3.866547104002684*^9}, {
  3.866547196399304*^9, 3.866547210028801*^9}, {3.866547432752075*^9, 
  3.866547433551713*^9}, {3.8734327583309317`*^9, 3.8734327721444693`*^9}, {
  3.873432920040236*^9, 3.873432925233391*^9}, {3.873433015754722*^9, 
  3.8734330427515697`*^9}, {3.873433311453938*^9, 3.873433311607769*^9}, {
  3.873438865555835*^9, 3.873438865914153*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox["\<\"Code bits: \\!\\(12\\)\"\>",
      StringForm["Code bits: ``", 12],
      Editable->False]},
    {
     InterpretationBox["\<\"Sampling domain bits: \\!\\(18\\)\"\>",
      StringForm["Sampling domain bits: ``", 18],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of polynomials for batch open: \
\\!\\(300\\)\"\>",
      StringForm["Number of polynomials for batch open: ``", 300],
      Editable->False]},
    {
     InterpretationBox["\<\"Johnson proximity m: \\!\\(-\[Infinity]\\)\"\>",
      StringForm["Johnson proximity m: ``", 
       DirectedInfinity[-1]],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error commit phase: 2^\\!\\(\[Infinity]\
\\)\"\>",
      StringForm["Soundness error commit phase: 2^``", 
       DirectedInfinity[1]],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of query rounds: \\!\\(43\\)\"\>",
      StringForm["Number of query rounds: ``", 43],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error query phase: \
2^\\!\\(-129.`\\)\"\>",
      StringForm["Soundness error query phase: 2^``", -129.],
      Editable->False]},
    {
     InterpretationBox["\<\"revealed poly size: \\!\\(32\\) FE\"\>",
      StringForm["revealed poly size: `` FE", 32],
      Editable->False]},
    {
     InterpretationBox["\<\"per round: \\!\\(88\\) path elems + \\!\\(372\\) \
values = \\!\\(460\\) FE\"\>",
      StringForm["per round: `` path elems + `` values = `` FE", 88, 372, 460],
      Editable->False]},
    {
     InterpretationBox["\<\"\\!\\(43\\) rounds: \\!\\(19780\\) FE\"\>",
      StringForm["`` rounds: `` FE", 43, 19780],
      Editable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.866542196547394*^9, {3.86654223257095*^9, 3.866542284732374*^9}, {
   3.866542338678318*^9, 3.866542353117196*^9}, {3.8665424356466703`*^9, 
   3.866542527575019*^9}, {3.8665425726357393`*^9, 3.866542595294553*^9}, 
   3.8665426825107327`*^9, {3.866543739713994*^9, 3.866543763471264*^9}, {
   3.866544259666651*^9, 3.866544282418334*^9}, {3.86654442071981*^9, 
   3.866544438934843*^9}, 3.866545287930093*^9, 3.866547106431048*^9, {
   3.8665471970936728`*^9, 3.866547210391577*^9}, 3.8665472861898737`*^9, 
   3.866547435033017*^9, 3.866547609547242*^9, 3.870950144548717*^9, {
   3.873432741621923*^9, 3.873432772613624*^9}, {3.8734329210089006`*^9, 
   3.873432925735627*^9}, 3.873433016594254*^9, 3.873433047622652*^9, 
   3.873433248953869*^9, 3.8734333119274063`*^9, 3.8734388661303263`*^9, 
   3.873950478967498*^9, 3.873951872932138*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"208896", ",", "163616"}], "}"}]], "Output",
 CellChangeTimes->{
  3.86654183404768*^9, 3.866542196543552*^9, {3.866542232569265*^9, 
   3.8665422847307463`*^9}, {3.8665423386765823`*^9, 3.866542353115292*^9}, {
   3.866542435644663*^9, 3.8665425275786858`*^9}, {3.86654257263724*^9, 
   3.866542595299255*^9}, 3.866542682517784*^9, {3.8665437397185926`*^9, 
   3.866543763475625*^9}, {3.866544259673326*^9, 3.866544282422586*^9}, {
   3.8665444207249413`*^9, 3.866544438939168*^9}, 3.866545287936496*^9, 
   3.8665471064359503`*^9, {3.866547197099378*^9, 3.866547210396707*^9}, 
   3.8665472861949577`*^9, 3.866547435037217*^9, 3.8665476095516443`*^9, 
   3.870950144550324*^9, {3.873432741636883*^9, 3.873432772624868*^9}, {
   3.8734329210198927`*^9, 3.87343292574747*^9}, 3.8734330166397877`*^9, 
   3.873433047643879*^9, 3.873433248965991*^9, 3.873433311939411*^9, 
   3.8734388661440773`*^9, 3.8739504789837437`*^9, 3.873951872979701*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
(similar to) ethSTARK parameters\
\>", "Section",
 CellChangeTimes->{{3.866539105262838*^9, 3.866539185751379*^9}, {
  3.866542372445839*^9, 3.866542374006098*^9}, {3.870951122750996*^9, 
  3.8709511248695393`*^9}, {3.870951411807548*^9, 3.870951411962055*^9}, {
  3.870952221926568*^9, 3.8709522248544283`*^9}, {3.870952548842773*^9, 
  3.870952551251109*^9}, {3.870952664949113*^9, 3.870952685947901*^9}}],

Cell[CellGroupData[{

Cell["80 bit security", "Subsubsection",
 CellChangeTimes->{{3.866546288401956*^9, 3.866546291697816*^9}, {
  3.8709525248756332`*^9, 3.870952525865576*^9}, {3.870952557292691*^9, 
  3.870952560139166*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "80"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsCode", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", 
   RowBox[{"{", 
    RowBox[{"100", ",", "100"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"capLevel", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"numHashes", ",", " ", "proofBytes"}], "}"}], "=", 
  RowBox[{"prover", "[", 
   RowBox[{"numPolys", ",", " ", "bitsCode", ",", " ", 
    RowBox[{"{", 
     RowBox[{"bitsSec", ",", "bitsRate", ",", "arities", ",", "capLevel"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<BitsBaseField\>\"", "\[Rule]", "64"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<ExtensionDegree\>\"", "\[Rule]", "3"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Hiding\>\"", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.866542081880774*^9, 3.866542086577697*^9}, {
   3.866542164072214*^9, 3.866542284407675*^9}, {3.866542337667379*^9, 
   3.866542352907817*^9}, {3.866542453058783*^9, 3.8665425950492687`*^9}, {
   3.866542789213962*^9, 3.866542844277314*^9}, {3.866542881126689*^9, 
   3.866542884117344*^9}, {3.866542960702634*^9, 3.866542963429759*^9}, {
   3.866543038063501*^9, 3.866543038253665*^9}, {3.866543405458261*^9, 
   3.866543448330263*^9}, {3.86654350391509*^9, 3.866543647867432*^9}, {
   3.866543811277626*^9, 3.866543833101308*^9}, {3.8665438922622643`*^9, 
   3.866543897661086*^9}, {3.8665439552715282`*^9, 3.866543955461927*^9}, {
   3.8665461690691633`*^9, 3.866546169244691*^9}, {3.8709511372005444`*^9, 
   3.870951220789549*^9}, {3.870951415587998*^9, 3.870951456138586*^9}, {
   3.8709514988558292`*^9, 3.870951540189941*^9}, {3.870952259340146*^9, 
   3.870952283658084*^9}, {3.870952416093701*^9, 3.870952432521935*^9}, 
   3.870952466288468*^9, {3.870952519786005*^9, 3.870952521462433*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox["\<\"Code bits: \\!\\(20\\)\"\>",
      StringForm["Code bits: ``", 20],
      Editable->False]},
    {
     InterpretationBox["\<\"Sampling domain bits: \\!\\(22\\)\"\>",
      StringForm["Sampling domain bits: ``", 22],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of polynomials for batch open: \
\\!\\(200\\)\"\>",
      StringForm["Number of polynomials for batch open: ``", 200],
      Editable->False]},
    {
     InterpretationBox["\<\"Johnson proximity m: \\!\\(322\\)\"\>",
      StringForm["Johnson proximity m: ``", 322],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error commit phase: \
2^\\!\\(-80.02766761160335`\\)\"\>",
      StringForm["Soundness error commit phase: 2^``", -80.02766761160335],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of query rounds: \\!\\(81\\)\"\>",
      StringForm["Number of query rounds: ``", 81],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error query phase: \
2^\\!\\(-80.81868375212404`\\)\"\>",
      StringForm["Soundness error query phase: 2^``", -80.81868375212404],
      Editable->False]},
    {
     InterpretationBox["\<\"revealed poly size: \\!\\(8192\\) FE\"\>",
      StringForm["revealed poly size: `` FE", 8192],
      Editable->False]},
    {
     InterpretationBox["\<\"per round: \\!\\(128\\) path elems + \\!\\(272\\) \
values = \\!\\(400\\) FE\"\>",
      StringForm[
      "per round: `` path elems + `` values = `` FE", 128, 272, 400],
      Editable->False]},
    {
     InterpretationBox["\<\"\\!\\(81\\) rounds: \\!\\(32400\\) FE\"\>",
      StringForm["`` rounds: `` FE", 81, 32400],
      Editable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.8665461708931227`*^9, {3.870951143774881*^9, 3.870951178403344*^9}, {
   3.870951212520018*^9, 3.870951221170415*^9}, {3.870951417555764*^9, 
   3.870951457271319*^9}, {3.870951500756414*^9, 3.870951540653863*^9}, 
   3.870952286548255*^9, {3.870952418339923*^9, 3.870952433156331*^9}, 
   3.870952467616905*^9, 3.870952533333589*^9, 3.873434678004799*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3342336", ",", "326784"}], "}"}]], "Output",
 CellChangeTimes->{
  3.86654617089966*^9, {3.870951143778926*^9, 3.870951178416106*^9}, {
   3.87095121253089*^9, 3.870951221181033*^9}, {3.8709514175654993`*^9, 
   3.870951457329879*^9}, {3.87095150077664*^9, 3.8709515406640463`*^9}, 
   3.8709522865599337`*^9, {3.870952418350387*^9, 3.870952433166964*^9}, 
   3.8709524676643963`*^9, 3.8709525333455267`*^9, 3.873434678016287*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["100 bit security", "Subsubsection",
 CellChangeTimes->{{3.866546288401956*^9, 3.866546291697816*^9}, {
  3.8709525248756332`*^9, 3.870952525865576*^9}, {3.870952557292691*^9, 
  3.87095258115596*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsCode", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", 
   RowBox[{"{", 
    RowBox[{"100", ",", "100"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"capLevel", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"numHashes", ",", " ", "proofBytes"}], "}"}], "=", 
  RowBox[{"prover", "[", 
   RowBox[{"numPolys", ",", " ", "bitsCode", ",", " ", 
    RowBox[{"{", 
     RowBox[{"bitsSec", ",", "bitsRate", ",", "arities", ",", "capLevel"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<BitsBaseField\>\"", "\[Rule]", "64"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<ExtensionDegree\>\"", "\[Rule]", "3"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Hiding\>\"", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.866542081880774*^9, 3.866542086577697*^9}, {
   3.866542164072214*^9, 3.866542284407675*^9}, {3.866542337667379*^9, 
   3.866542352907817*^9}, {3.866542453058783*^9, 3.8665425950492687`*^9}, {
   3.866542789213962*^9, 3.866542844277314*^9}, {3.866542881126689*^9, 
   3.866542884117344*^9}, {3.866542960702634*^9, 3.866542963429759*^9}, {
   3.866543038063501*^9, 3.866543038253665*^9}, {3.866543405458261*^9, 
   3.866543448330263*^9}, {3.86654350391509*^9, 3.866543647867432*^9}, {
   3.866543811277626*^9, 3.866543833101308*^9}, {3.8665438922622643`*^9, 
   3.866543897661086*^9}, {3.8665439552715282`*^9, 3.866543955461927*^9}, {
   3.8665461690691633`*^9, 3.866546169244691*^9}, {3.8709511372005444`*^9, 
   3.870951220789549*^9}, {3.870951415587998*^9, 3.870951456138586*^9}, {
   3.8709514988558292`*^9, 3.870951540189941*^9}, {3.870952259340146*^9, 
   3.870952283658084*^9}, {3.870952416093701*^9, 3.870952432521935*^9}, 
   3.870952466288468*^9, {3.870952519786005*^9, 3.870952521462433*^9}, {
   3.870952589415979*^9, 3.870952589711038*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox["\<\"Code bits: \\!\\(20\\)\"\>",
      StringForm["Code bits: ``", 20],
      Editable->False]},
    {
     InterpretationBox["\<\"Sampling domain bits: \\!\\(22\\)\"\>",
      StringForm["Sampling domain bits: ``", 22],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of polynomials for batch open: \
\\!\\(200\\)\"\>",
      StringForm["Number of polynomials for batch open: ``", 200],
      Editable->False]},
    {
     InterpretationBox["\<\"Johnson proximity m: \\!\\(44\\)\"\>",
      StringForm["Johnson proximity m: ``", 44],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error commit phase: \
2^\\!\\(-100.02962104701288`\\)\"\>",
      StringForm["Soundness error commit phase: 2^``", -100.02962104701288`],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of query rounds: \\!\\(102\\)\"\>",
      StringForm["Number of query rounds: ``", 102],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error query phase: \
2^\\!\\(-100.33721514243173`\\)\"\>",
      StringForm["Soundness error query phase: 2^``", -100.33721514243173`],
      Editable->False]},
    {
     InterpretationBox["\<\"revealed poly size: \\!\\(8192\\) FE\"\>",
      StringForm["revealed poly size: `` FE", 8192],
      Editable->False]},
    {
     InterpretationBox["\<\"per round: \\!\\(128\\) path elems + \\!\\(272\\) \
values = \\!\\(400\\) FE\"\>",
      StringForm[
      "per round: `` path elems + `` values = `` FE", 128, 272, 400],
      Editable->False]},
    {
     InterpretationBox["\<\"\\!\\(102\\) rounds: \\!\\(40800\\) FE\"\>",
      StringForm["`` rounds: `` FE", 102, 40800],
      Editable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.8665461708931227`*^9, {3.870951143774881*^9, 3.870951178403344*^9}, {
   3.870951212520018*^9, 3.870951221170415*^9}, {3.870951417555764*^9, 
   3.870951457271319*^9}, {3.870951500756414*^9, 3.870951540653863*^9}, 
   3.870952286548255*^9, {3.870952418339923*^9, 3.870952433156331*^9}, 
   3.870952467616905*^9, 3.870952533333589*^9, 3.870952591147051*^9, 
   3.873434683925838*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3342336", ",", "393984"}], "}"}]], "Output",
 CellChangeTimes->{
  3.86654617089966*^9, {3.870951143778926*^9, 3.870951178416106*^9}, {
   3.87095121253089*^9, 3.870951221181033*^9}, {3.8709514175654993`*^9, 
   3.870951457329879*^9}, {3.87095150077664*^9, 3.8709515406640463`*^9}, 
   3.8709522865599337`*^9, {3.870952418350387*^9, 3.870952433166964*^9}, 
   3.8709524676643963`*^9, 3.8709525333455267`*^9, 3.870952591155347*^9, 
   3.873434683959175*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{960, 1028},
WindowMargins->{{-10, Automatic}, {Automatic, -10}},
FrontEndVersion->"9.0 for Linux x86 (64-bit) (February 7, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 89, 1, 80, "Section"],
Cell[CellGroupData[{
Cell[693, 27, 113, 1, 44, "Subsection"],
Cell[809, 30, 2684, 68, 280, "Code"],
Cell[CellGroupData[{
Cell[3518, 102, 1460, 36, 253, "Input"],
Cell[4981, 140, 134048, 2209, 232, "Output"]
}, Open  ]],
Cell[139044, 2352, 1521, 39, 185, "Code"],
Cell[CellGroupData[{
Cell[140590, 2395, 180, 3, 32, "Input"],
Cell[140773, 2400, 203, 4, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[141025, 2410, 105, 1, 44, "Subsection"],
Cell[141133, 2413, 4525, 92, 527, "Code"],
Cell[CellGroupData[{
Cell[145683, 2509, 752, 20, 121, "Input"],
Cell[146438, 2531, 218, 4, 32, "Output"],
Cell[146659, 2537, 336, 8, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[147044, 2551, 126, 1, 36, "Subsection"],
Cell[147173, 2554, 6680, 140, 893, "Code"],
Cell[CellGroupData[{
Cell[153878, 2698, 2848, 61, 231, "Input"],
Cell[156729, 2761, 893, 13, 32, "Output"],
Cell[157625, 2776, 1012, 17, 32, "Output"],
Cell[158640, 2795, 894, 13, 32, "Output"],
Cell[159537, 2810, 1009, 17, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160583, 2832, 2869, 61, 231, "Input"],
Cell[163455, 2895, 942, 14, 32, "Output"],
Cell[164400, 2911, 980, 15, 32, "Output"],
Cell[165383, 2928, 916, 13, 32, "Output"],
Cell[166302, 2943, 1006, 17, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167345, 2965, 2921, 62, 231, "Input"],
Cell[170269, 3029, 894, 13, 32, "Output"],
Cell[171166, 3044, 1012, 17, 32, "Output"],
Cell[172181, 3063, 892, 13, 32, "Output"],
Cell[173076, 3078, 1014, 17, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174127, 3100, 2872, 61, 231, "Input"],
Cell[177002, 3163, 871, 13, 32, "Output"],
Cell[177876, 3178, 989, 17, 32, "Output"],
Cell[178868, 3197, 871, 13, 32, "Output"],
Cell[179742, 3212, 989, 17, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180768, 3234, 2385, 55, 231, "Input"],
Cell[183156, 3291, 436, 7, 32, "Output"],
Cell[183595, 3300, 554, 11, 32, "Output"],
Cell[184152, 3313, 436, 7, 32, "Output"],
Cell[184591, 3322, 554, 11, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185182, 3338, 1421, 38, 209, "Input"],
Cell[186606, 3378, 242, 4, 32, "Output"],
Cell[186851, 3384, 362, 8, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[187262, 3398, 201, 4, 36, "Subsection"],
Cell[187466, 3404, 38258, 694, 2370, "Code"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[225773, 4104, 93, 1, 80, "Section"],
Cell[CellGroupData[{
Cell[225891, 4109, 351, 5, 44, "Subsection"],
Cell[CellGroupData[{
Cell[226267, 4118, 110, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[226402, 4123, 1763, 44, 275, "Input"],
Cell[228168, 4169, 2453, 59, 165, "Print"],
Cell[230624, 4230, 638, 11, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[231299, 4246, 1693, 43, 275, "Input"],
Cell[232995, 4291, 2821, 64, 165, "Print"],
Cell[235819, 4357, 1027, 16, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236883, 4378, 1751, 44, 275, "Input"],
Cell[238637, 4424, 3100, 67, 165, "Print"],
Cell[241740, 4493, 1302, 20, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[243091, 4519, 111, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[243227, 4524, 2022, 45, 275, "Input"],
Cell[245252, 4571, 2579, 60, 165, "Print"],
Cell[247834, 4633, 784, 13, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[248655, 4651, 1702, 43, 275, "Input"],
Cell[250360, 4696, 2364, 58, 165, "Print"],
Cell[252727, 4756, 533, 9, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[253297, 4770, 1698, 43, 275, "Input"],
Cell[254998, 4815, 2226, 56, 165, "Print"],
Cell[257227, 4873, 392, 7, 32, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[257680, 4887, 204, 3, 44, "Subsection"],
Cell[CellGroupData[{
Cell[257909, 4894, 111, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[258045, 4899, 2029, 45, 275, "Input"],
Cell[260077, 4946, 2688, 62, 165, "Print"],
Cell[262768, 5010, 887, 14, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[263692, 5029, 1703, 43, 275, "Input"],
Cell[265398, 5074, 2352, 58, 165, "Print"],
Cell[267753, 5134, 518, 9, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[268308, 5148, 1708, 43, 275, "Input"],
Cell[270019, 5193, 2254, 56, 165, "Print"],
Cell[272276, 5251, 416, 7, 32, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[272753, 5265, 104, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[272882, 5270, 114, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[273021, 5275, 1703, 43, 275, "Input"],
Cell[274727, 5320, 2253, 56, 165, "Print"],
Cell[276983, 5378, 420, 7, 32, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[277464, 5392, 350, 5, 44, "Subsection"],
Cell[CellGroupData[{
Cell[277839, 5401, 111, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[277975, 5406, 1702, 43, 275, "Input"],
Cell[279680, 5451, 2828, 64, 165, "Print"],
Cell[282511, 5517, 1037, 16, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[283585, 5538, 2220, 48, 275, "Input"],
Cell[285808, 5588, 2803, 63, 165, "Print"],
Cell[288614, 5653, 1014, 16, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[289665, 5674, 2122, 47, 275, "Input"],
Cell[291790, 5723, 2830, 64, 165, "Print"],
Cell[294623, 5789, 1033, 16, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[295693, 5810, 2024, 43, 275, "Input"],
Cell[297720, 5855, 2785, 65, 165, "Print"],
Cell[300508, 5922, 983, 15, 32, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[301564, 5945, 417, 7, 80, "Section"],
Cell[CellGroupData[{
Cell[302006, 5956, 206, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[302237, 5963, 2185, 44, 275, "Input"],
Cell[304425, 6009, 2299, 57, 165, "Print"],
Cell[306727, 6068, 470, 8, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[307246, 6082, 206, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[307477, 6089, 2236, 45, 275, "Input"],
Cell[309716, 6136, 2333, 58, 165, "Print"],
Cell[312052, 6196, 496, 9, 32, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
