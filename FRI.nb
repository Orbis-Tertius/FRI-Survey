(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    313991,       6296]
NotebookOptionsPosition[    307738,       6092]
NotebookOutlinePosition[    308076,       6107]
CellTagsIndexPosition[    308033,       6104]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Code", "Section",
 CellChangeTimes->{{3.866539238089381*^9, 3.866539238872842*^9}}],

Cell[CellGroupData[{

Cell["Soundness error formulas", "Subsection",
 CellChangeTimes->{{3.86653417465283*^9, 3.8665341925644083`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "@", "soundnessErrorCommit"}], ";"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Soundness", " ", "error", " ", "of", " ", "the", " ", "commit", " ", 
     "phase", " ", "of", " ", "FRI"}], ",", " ", 
    RowBox[{"using", " ", "algebraic", " ", 
     RowBox[{"batching", "."}]}]}], " ", "\n", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"soundnessErrorCommit", "[", 
   RowBox[{"bitsField_", ",", " ", "bitsDomain_", ",", "bitsRate_", ",", 
    RowBox[{"arities_:", "List"}], ",", " ", "numPolys_", ",", "m_"}], "]"}], 
  ":=", " ", 
  RowBox[{"Module", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", 
     RowBox[{
      RowBox[{"rho", " ", "=", " ", 
       RowBox[{"2", "^", 
        RowBox[{"(", 
         RowBox[{"-", "bitsRate"}], ")"}]}]}], ",", "\n", 
      RowBox[{"domain", " ", "=", " ", 
       RowBox[{"2", "^", "bitsDomain"}]}], ",", "\n", 
      RowBox[{"fieldSize", " ", "=", " ", 
       RowBox[{"2", "^", "bitsField"}]}]}], "\n", "}"}], ",", "\n", "\t", 
    "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{"2", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"numPolys", " ", "-", " ", 
            RowBox[{"1", "/", "2"}]}], ")"}], "*", 
          RowBox[{"domain", "^", "2"}], "*", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"m", "+", 
              RowBox[{"1", "/", "2"}]}], ")"}], "^", "7"}], "/", "2"}], " ", 
          "*", " ", 
          RowBox[{"rho", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "/", "2"}], ")"}]}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "m"}], "+", "1"}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{"domain", "+", "1"}], ")"}], "*", 
          RowBox[{"rho", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "/", "2"}], ")"}]}], "*", 
          RowBox[{"Total", "[", 
           RowBox[{"2", "^", "arities"}], "]"}]}]}]}], "]"}], "\n", "\t\t", 
      "-", " ", "bitsField"}], " ", "//", "N"}]}], "\n", "]"}]}]}], "Code",
 CellChangeTimes->{{3.86653195160083*^9, 3.8665320783645163`*^9}, {
   3.8665321716305523`*^9, 3.866532176573702*^9}, 3.866532215413279*^9, 
   3.8665342333384666`*^9, {3.8734309657126503`*^9, 3.8734310315438137`*^9}, {
   3.8734310918683653`*^9, 3.873431092189464*^9}, {3.873431234656515*^9, 
   3.873431245995492*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "the", " ", "soundness", " ", "error", " ", "is", " ", "increasing", " ", 
    "in", " ", "m"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"bitsSec", "=", "74"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bitsField", " ", "=", " ", 
     RowBox[{"3", "*", "64"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bitsRate", "=", "3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bitsDomain", "=", " ", 
     RowBox[{"15", "+", "bitsRate"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"arities", " ", "=", 
     RowBox[{"{", 
      RowBox[{"5", ",", "4", ",", "1"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numPolys", "=", "100"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"DiscretePlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"soundnessErrorCommit", "[", 
      RowBox[{
      "bitsField", ",", "bitsDomain", ",", "bitsRate", ",", "arities", ",", 
       "numPolys", ",", "m"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"m", ",", "3", ",", "5000"}], "}"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.866532318360548*^9, 3.866532335775957*^9}, {
   3.866532369118805*^9, 3.86653237109083*^9}, {3.866532412983536*^9, 
   3.866532455623713*^9}, {3.873431080012514*^9, 3.873431100167885*^9}, 
   3.873431334915249*^9}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.24720000000000014`, 0.24, 0.6], 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], 
     PolygonBox[CompressedData["
1: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
XWAbOen+muFcNhv5L6dFb4ZfSIVt5SS7+NhwFWwnp2SV45GxsD27v497NZvt
kP9yOiuP3nkNdpKTlo7Tn2jYmZ3f4fHuebCLnILiBnfRh13l9O3PuOTXs5D/
cvr79M9IOewup6e28blBsIecvga/XmIJe8rpT8Knnxqwl5xeleXw7toi/+Uk
95/tmAj7yCkt8lCLF+wrpw2zjyiHwSvlJPzqvKJxJvJfTlPP5w+6CPvLySP7
x+sdcICc5k9+I7GH18npnNfuoB5woJyme1XYVBDyX04Nq+t6CeFgOb07q/y4
Fg5h/bxuyN2J8GZ2f0XOab9nIP/l5N42JjEfDpfT7KlXdxyGI9j7nG/b4AFH
ymniqc8rB8M75WQ2MsG73gb5zz4/UOV1Do6Sk03r62URcLSc9kkPrJ4Fx/5v
fqs36cBxcrp0pC7qyXTkv5x0LI6n8OBDctr7+dP5NXA867fPXx6ZwQlyalyX
+uOnNfJfTl9ONg66DSfJady5WqdDcLKcMuuiIxfBKXLKCr573hBOlZMi5vyn
99OQ/+z73jPGnYN5ctIfG7QpAhbIaePomTmzYBHrz/iszt1gCXv/o0VLnloh
/1n910Vm8mEFq7frw65rYZWceJF56yfCajl5jphf+nsq8l9ODrERUwvgTDl1
ezJTHg+fZ/M7V9LPE86SU/xQYcIQ+JKcoo5N0floifyXU+4z/0NZcI6cXo4y
7bkTvsbmOe9QqgOcK6eBz/eM6gnnsfdX61x9MQX5LyeNLSZuEjhfTn4bqj5t
gAvltLJ0ZPwUuIjtg4p2k9rBxXKacmtDZbEF8l9Ox++sO5AEP2A2brX2gUvl
1KLXp3kkXMbOW5539utk5L+cCvm/gq7CT9n8nr9pHgNXyOnZnD5/XeAXcvon
bL5nAFfKqXOrD6/aHPnPvH/hFjVcJac5iY9ct8LVcrJbUGFGcA3bBx3W9NGG
6+Q07X3k38eTkP9yMrTq13gGbmD5ZzXt9Rq4UU6VI6rLJ8Cf5ZQ3vVvp74nI
fzm1y736sAD+JqfUusbHR+Bmlo8t/MolcAur97jyD8PgVjlZ3ov7/WkC8l9O
td2v98yG2+R0wTLYJAr+K6fbccK5zrCGglbNcA3Sh9srqNeZ7SeqzJD/CtpZ
PTRfBXdSUKzr7B+bYS0FWY6qHjMD1lbQY1WrXxdYR0H5/eLEj8cj/xUkYwvj
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
V1KP5dr3fmki/5VUPX7p7iL4EqvvruNTk+FsVv9z2S2r4BwlBYzNvzwBvsb2
gevlyH8dkP+sn2KPzr4P5ynp5wS3XqfgW+z9L7dWB8D5SuobGX3ZAi5Ukntt
8xFNuIj1o+ecwLL2yH8ldZ62x1kAlyhJ8u2U2Ub4gZIG1aYYWMOlbL+Gh2lq
w2XsvntNaX7WDvmvJFG/Z++l8FMlWTZ7vAmFK5R0XuvSi5nwCyVdvP79eQ+4
UkmaET1evdJA/rN9JdGqSYOrlDRH8vrzNriavU9Vwh8HuIbdZ56hrj5cpySj
xT3mFf2b//+uV5JO7+Q9fnADc3TpdQ24UUk12663O/OX82clJeUvnTcVbmL5
ZK4SPPnD+ZuSNFLlvzfBzSx/C918usMtSmrerypStXFuVVLFpXQrB/gXuz/D
pVnvfnNuY/VOPDd5N/yX5UXt2dyBsIaKDjW4z7/yi3N7FVmH8t8vgjVVpLsw
ft+3n5w7qch9mdH4I7CWilJWu78eC2urKHvG6ONFrZx1VFR048zC1XB3FZnk
ZPZrD+uy53dY8Z73H+deKioNTr82DdZTkfGzpJMVLZz1VdTWVX/nFthARQa1
49f1gvurKNDy7bKzPzgPVBFVjlriDBuyv5d39P7QzNmInTdoq38sPJS9f7eI
8GGwsYrqPXok5n3nPEJF3saTLyyDR6koeF7Dy1/fOI9RkZ1qnE4KbKIiy95/
Z02GTVXU6uu1t+wrZzMV+QXOLA6CJ6oos/t5g26wuYqch6RtVDVxtlBR446x
JQ6wpYri/k6YUPuFsxU7347rZ6JgaxXVlJf0NIJtmN/4HL7+mTOpyHdbiO5S
2FZFpyM7nWr9xNmO3X9Bv3HJsD2rp2la4STYUUUJx6+sedTI2UlFFU9m6QbB
zioyK3HM04FdWH0W3QlTfeTsqiK1S66FI+ymIsfjJn9qGzi7q6iqU897e2EP
1n971gmGwJ4qyq+esuPGB85e7Pxdwlcsg71VFF4+et7ves4+7D6HOtNJ2FdF
5mWvrKbAK1WkuP3K+sl7zn7s75862YfC/qx/GoYt7gkHsO+/WRN0to7zOvZ5
cp8j8+BA1h9fxl76WMt5I+uvEmXNfjhYRZJu8f1HwSHsvo8/W1xYw3mzijbb
xZz2g7ey+/5zvL49HM7OK9KyFr7jHMF+X78yeQYcqSKtaT1+vqrmvJO5WbAy
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
LK3fOEMdlWnE2xTtaKGen2n41L6Y+62Hzv9MI/yjtj+HqhdlGmnOO263VEdn
GslXDrQ+3Fvnv8TLddqgMHWMnE+3lPnPqZfL+nrP/CrfXee/1MuKI3/OVK+S
fjB9X/fn1XFyHu06zy3opfM/04i55Zr/njo+04h48ZsWrdXrM42Ep6VhhT11
/ks8ixcXzVZvlPf9mN69rTpRnu87I/FoD53/mYbjwr1P5qiTJL+t8+a/oN6S
aVQOLLpZ5KbzP9NwCfl8VpR6u9TPO49utVenSL0vq4z+qbvOf/m93Qi7BepU
Oa9hfT/vqN4t9bwsrd+Jbjr/5XzvfXrhffVeyad/7ZZ1VqdLvp981P1UV53/
Uh95UeXR6gzJb7vQja7qzEzD85nzI0pddf7L+/75sWmM2ir50f6VM93VuXIe
J5w/P/eizn/pH8NXRa5Q58n+fp0+tJf6kOznzHedL3TR+S/xjNr8zGp1gaz/
mcobHurCTCOqbM+FS511/mcaGe5Xj69VF0n+jd96pI/6mPSfz44UXHbR+S/5
OnzakfXqE1JfX7x/3Ftdkmk8evD4/JVOOv/l+Vse/LVRXSr7LZrZcID6rORL
yXCX6x11/kt/fJT8xifq89JvdkyKeF1dnmnUPd6w/WYHnf8S/zD301vVFZlG
3IsDGg9RX5b+s/Lg0Fpnnf+SrydTP0xRX5H8HnP/rJ+6Sup//MHO99rr/Jfz
eOnq+7vU1ZmGX7clP49W35D+sy7a42E7nf+ZhnNq5ea96lvSP/Itj8aqa2U/
PatnP31B57/MH++1lfvVddKPPdZPClLfl/4+9e5FW3W9XG97ZEq2k87/TMMr
7U71O+pHcp5j10U3VT+Repm/vPnBtjr/s4ziNy98OUPdMMvw6f/xcAe1bZZR
vmJ/TX4bnf9ZhtfcrlvfU9tlGfXjnwxro26aZdSt6fvoaGud/1mG46gTB+aq
W2QZ4fcOL3JWO8jzypr4HnfU+Z9lFHnnNFqkdswykiIOnu+ibpNlDPmxdcbP
z+v8zzISEk+tjVG3yzICOl4O66F2lusFw/zPt9L5L+8/0qjfarVLluG+uEN3
T3UX2b/neuffntP5n2W4vObfdr26W5YRd2t6235qN7n/01POVQ46/7MM11Ub
un+sds8yQhql9Buo9sgynBY88b/ZUud/lpH2gnVmsrpPlhE96sC6oWqvLMNt
UtOv77TQ+Z9lRG39+sJOtY9cH7ez8Wh1/yzD78/Lvg+b6/zPMmq3zV78pXqg
rOfHIQcD1YbE69v3HjVQD5bzOHFxWJa9zv8sw+KXtCVYPSzL8I1PvtlE7Zdl
5P3659CDzXT+y3q2fLAnVO0v15tObNpKPSbLSE9YtvD7pjr/JR5zq69GqMdm
GTGNtgW1UwdmGcl7Np79qYnO/ywjNrX4rffVQRKfUcPOd1FPkng/aBRSaqfz
X/b3tMntZeopct7WMat7qUOyDLuwMueLjXX+Zxn5kdsPr1WHZhkRnVOneqnD
soyas1V2Vxrp/M8yPMtnHtyknpVl+K91m/2aOkLi1aeb681ndf5nGY9eDrmS
rI6SeFz6Zc8w9Xyph5VrI+tsdf7L82Pm+e5WL5L86rylZYA6Wurr2N3rj5/R
+Z9lOBz58Mf96pgsIzB8QvpE9XKJX6vgxMbqWHHrrcu+aajzX87rp8ZRM9Rx
kq8rv575nHptlhG/dV3o9w10/kv+T/80bI56vdSnz/k57dUJcl5RI5Yet9H5
L7+fcWvDYnVilpE4s2h3V/VmiU/ZiYJzT8f8v06SfGjYoHKleov0G7+wRp7q
ZImfzcOXLz8xvT3LKF1xeHqCOkXe57Ivub96h+RH/x/PVT82nSr9opu941b1
bqk/3+UTh6rTsozcX9ql3X1kem+WUTnyj7u71OkSz7pSvwD1vizDufdfu5/8
Zzojy1jo36Ph1+rMLCM0IzFsstoi8d/bsbSJ2irP++TswLyHpnMlHqf3W8PU
B+T52V/1aq3Ok/xMOvnVDw9MH5J6P+vQe746P8uoPhb9jYu6IMtIPdHwjZ/r
TRfKefhk/rJMfTTLMGYvneOuLpLnfxfW9Nd/TR+T/X84P+NDdbHEr9fnb/uo
T8h5P/7z6bX7pkskXpP8sz9Vn5b+sPPnmUPUpXJ/17kv3r1n+qzEf0TPql3q
Mrl/ps2+APX5LKPiYu3Cp3Wmy2U/jx8OyVRfkud5dGz3jrpC+lfxxLpm6sty
/m5fnzt013Sl5M++tnnvqa9IPe1L3uWkrpJ6XPNS4k93TF+T9ST/unqRulrm
1espMV3VN6T+LkYtLfvHdI3U65GgZavVt+R8x729po+6VvLrztTNf9SaviPn
dX9ZWqK6LsvI+D7j8Ovq+1IP+25euHXbdL08r3X/B5+rH0q839naabT6kcyr
Kw1HPbpl+onc3yDmg/1qG4sR4dQwe5K6gcVYuDbpZhN1Q4tR8VWfXt/+bfoZ
ixH4x69zw9W2FiN5w6Zv26qftRiJjUfb/VRjupHFMHKfD16kbmwximuv5HZV
21mMUOdDrX65abqJvH9L8vtx6qYWI6pg2W+vqJtZjNq74SOv3jBtb5HvyYn5
m9XNLUZ0ozdfGaxuYTGGfOGX9c9fpltaDLdTQz13qR0shn/V0AMB6ucs0l/8
BtmoW1mM1Mn+Z7KqTT9vMYpi3gqbqna0GPbNJ9i0VLe2GL5zgncWXDfdxmJ4
PQl5I1Ld1mLUuYTWdFA7WYwk73e3n7pm+gVZT+qM0cvU7SxGzPdTnu2tbi/3
3xt3tOJP086ynzS/uAR1B4tR5e49ylfdUeLzT4e2NVWmO1kM98Cn1z9Tu1gM
y4GL341Sd5Z4fZCR/N9V010shqvt4uj96hctRmGOzzuT1a4WI6GmdlgzdVeL
4fLczr6Hr5juJucRN7jHbHV3eV/6pc7t1W4S3z/COp38w3QPixH/8bXOH6h7
ynqdJ/bope4l8aj6ru+vlabdLUbAGMfhG9S9LUZ+/uR3Bqg9LEbcJ59E3/zd
9EsWI9z7cPJnak/JjyZnvxulflniGXXh+n+XTfexGOWnT7TJUL8i9fDh/pHB
ai+LEfLsktX26r4Wo2xPnyP5v5n2lvP6+cIzc9T9JP+vzxzVQe0j+Tv2ytZT
FaZflfi/P+yvZer+FiMt95PXPdQD5PfvH99++VfTvlIPHa4/3Kh+TfbXqmbq
6+qB8vu8C8dvXzL9upznoq98UtWGnKclJCNAPchilJx65NpAPVji+8qy3dkX
Tb8h5zH8D9fp6iEWozTKLaOVeqg8z3Gszw/lpoeJt71zfIF6uORD2Miprmo/
qbfKtg/LLpgeIfGK+nHbGvVIyd8Pxg70Vo+yGE7vFVy/dt60v8V4tNNuy1b1
aInHOs8Rfuoxkl9r+zZ48IvpNy1GrG3bgq/UAVKP4WUrJqnfshjB7ecMa6Ye
azGCVlc+l19m+m05TzuPKxHqQMn358cd7KAeJ/nXdNzHp8+ZHi/9cELvqBXq
CXK+035721MdZDHyPg71/eOs6Yny+zeP9tisniTrsb3f/g31ZIvh6fS0Vd0Z
08FyfncrWuxRvyP1Y7Op5Xj1FInPXsfWjdVTJX/fnNMpr9R0iMQzNNnjPfU0
i2H35qeD26mnS74tnjH55M+mZ1iMFL+GS2LUoRbDode8z3qr35Xnx2cdvXza
dJi8/2T+rU3qmfK+d5I7DVKHS/6mDxp355Tp9yQ/2uZt+kI9S/bX6r/TgerZ
Er9GTZ9vpI6QfhVcNflgiek5st7lH34Vro6Ufl1e/98L6rkS77KX3z550nSU
vO/yK1kx6nkSr6lPWnqo50s/KEp8//cTphdYjMpFN35PVC+U/Lja9M3B6vdl
/wv/OXr3uOlFFqN6y+cD9qgXSz/9psW349XR0n8GDBlgp14i+f3pa0e/LTa9
VPLf4+Ho2eoPpJ8sWHLZWR0jLj204PRPppdJ/8n+rnmsernM69UrM15Wr5B8
y3424Oox07FS31+NqE9Sr5R5c8F/zzD1Kumv6S0m1P9oerXsJ35j833qOIvh
c+1k8WT1GpnnvY/FN1evleefjBn9fZHpdZJfHrfbzFPHy3w86vxnF/WHst97
tnllP5heL/Hr++WmteoNsr7ahhE+6oT/9fe2o28cNf2R1FdCVZ8U9Uapn5Hv
dRij3mQx/PrvsbdRJ8p5ndhqYz1i+mPpv7OMBzPUmyVe63bcb63+RPa/Kbv+
p0LTSbL+u9FPl6g/lfzrVNfUXb1F1hvXpf3l701vlXxNfMYzUZ0sz7duGTFY
vU3eP/HXmXUFprdL/teVrt+r/kz2W7fIGqROkfP+qeRyU/Xn8j3w25mW331n
eod8D+1ZM3SueqfkV+L1FZ3VqfK9YP9vwbl807ukXjfkNFyr3i31EuM8ykf9
hTwv4OXkG4dNp0k/WPTPXynqPbL/qcHGm+q90n9j5n3WQP2l7Pc1z/9yDplO
l++ZVslTw9Rfyf7mpBc7qfdJvygI8T75ren9cn1xYfoydYbMF7ufOnmqv5Z4
X13w2ZU805my/uhj7T9VZ0m8+xekDldbZH3bJ/V8eNB0tvy+yWd5GWqr5MuD
5aOmqnNk3vz67NXn1LlSHy++tKLogOlv5P5BDzstVh+Q938Z9mMP9UHpX8cX
zK34xnSe5I9T546b1N/KehpFnhmkPiTfB40mfViXa/qw5NOGqqFfqvOl3zdu
3niS+juJx99nS+zVBXK+lr5bv88x/b3kyw9eYfPVhRKPbT+/2lV9RPIt7dlW
5VbTRyWfJp2/tV79g/R790Glr6mL5Pcbhx6ozTb9o+z37pXUL9TH5PdnnBLH
q3+S9W67trqJuljyr3BUTL7F9HE5j8PDl8xVn5D7H11c2kV90mLYPGiw8pcs
0yXSb12/3xCvPiX/H+ocPhugPi39qeJ+5q1M0z9bjNyAqJ92qUvl+cdiqgLV
Z+T8re0b2anPynz40N/98Nemz8n7vm8xIVJdJv315LS1ndW/SL9yGXqoLMP0
eTnvvnl31qkvSP4uP/TSAHW5eN6oebf2m74o83D1rIO71JckH3u1bThO/avE
/7eAt+zUFfL94dB2z+F9pn8Tv/re40j1Zcm308MmdVH/LusdlnX4l69MV0q9
ttnd+UP1H/L7Ax0TfNVXZL5sd/3vdrrpqxbDeUBO5BfqKvleaX7i2nj1n1IP
H4bPaKq+Jv3cdWPVd1+avi7fp+P7z5qnrpZ4fBpR56r+S9Y70XV1+V7TN+Q8
nKa1SVDflP45qkvm6+oaWd/MmSPv7jH9t/SLP1+6uVd9S+b3ax8kTlLflvys
8uvfQl0r83dccvWRNNP/yHk8+95n76vvyPdk5KGxPdR35XmNE1r89oXpOukn
w387nai+97/vma8/GaK+L/W4+1Fw/W7T/0p+f328Z4a6XupjkOPjqeoHMh8v
/HruefVDyefrnbJ+2mX6P7n/5u8bP1A/kv1Mar/gJfVjyb+sM5Ovppp+Iv1x
esMRW9VPJR41Gf1HqW2yjepjpZ5Pd5pukG2UzJrTK0fdMNvIe2tVz5nqZ7IN
x3stPNqrbbONmNOtvH/eYfrZbCNpwkeDV6sbZRvOTZe/3U/dONuonVoVfvNz
03bZxqOz36/aqW6Sbfj91nLX2+qm2UZd/bkfGqubZRs+qc1uHk4xbZ9tBI8+
0CZK3TzbKF56bpirukW2YfPF9A/KPzPdMttIMGbkJqgdsg2X02X/GOrnso3Y
YwdeubfddKtsIy7NbulX6udlP1ePF72jdsw2gh4/eL6VunW2ERiZPPPYNtNt
sg3/7LTvl6rbZhvxgzo6v6R2yjYWbrdddjXZ9AvZRmK/CVe2qttlG1FJrf39
1e2zjXz31w/ZqJ2zDSPmnPs3W013kPg9OfPFe+qOcj6e/Tt1VHfKNuoTmu08
u8W0i8Q3ceiL69Sds43Kg9f3D1B3yTZyl//jU/up6RezjZRp00+kqV3lPH57
NWSiuqusb87ih83V3bIN98R2244mme6ebXgd6eK7WO2WbaQu23S1l7pHthEx
OGRT5Seme0o+JSS9/qm6l8T/Yq+6EWp3Oa89Xb9+stl072yjKnLlrBy1R7aR
bB3oHq5+SeJ9K/iOs9oz23DY+Wv+mY9Nv5xt2L9xaMNadZ9so2xC/ZQB6lfk
/ZM/9a5NNO2VbbieTGy1R91X1tv1xp2Jau9sI7069UILdT+J/+bcwh82mfaR
+tnlmhmtflXO/5Panb3V/eX51W23XNloekC2Ueq8PXGr2lfy07Jok7/6NYlv
5683N1APlPq57bv9wEemX882QrZ13TtbbWQbnp+HHXBRD8o2opc+PfFLgunB
kt+W21fXq9+Q8yrwbmCoh8jzu5R1ubfB9FDJ1yk/+e1TD5P6vt1ywVT1cHnf
hK93Oar9JP+e31l2fL3pEfK+PVXNVqhHSn/asGy4l3qU1Nfw99b99aFpfznf
CV+e3KEeLe/z7ecYqB4j57vYaVoT9ZtSb+tGWgviTQdI/fxd0nih+i15f4+d
03qox8r1/MLvL68z/bbkf7eXuySpAyWf/rodP0I9Tq7HPbr7ZK3p8dlGzZLx
M3LVEyS/Rj4+/546KNuwXVQ7ppN6onjFSyfL1pieJPl27dtR69WTJb7um0pf
VwfL/ssyJ96LM/1OtlE0xen6PvWUbKPC/2R0iHqq1IPLTy3aqEPk/Cc3++rk
atPTsg272K3DV6qnSz60nH3DWz1D+mnCmo9rVpkOld8vvua7W/2u9N/Aj2om
qMPkvPcsSW2uninPr9kX9MNK0+Gyn30urZeo38s2CkMv/eKhniXXP7uwvSrW
9Gzpp+fahm5XR8j6Ptr+coB6zv/mwdRnGqkjZf+fvnvx8ArTcyU//srImaeO
yjbKS7w2d1fPk/M58mjhb8tNz5d5MMo2+BP1AsnHv0cOH6FeKPnhXur9dJnp
9yV+6z/p+Y16kfSP9UldZqsXS/5az3bsrI7ONgLiRne6EGN6yf/yx9b1I/VS
qf9+/7q/of5A5menrv0ffGA6Rurxh49GZamXSTzSPKe9q16ebbiNaP5Be/UK
ue714rYzS03Hyv5vzju8Tr1S4nu3/o/X1Ktk/acP2tctMb1a6v2ZzAH71HHS
39v+GhmiXiP7+Wjg3jbqtTLPb174oyTa9Lpsw+nA3s6r1fHSz+bve/dV9YeS
z3uvfH17sen1cv38mId71BuyjYz4WyOD1QkSr0FHdrZSfyTzaN2x+uJFpjdK
PVx+PG6FelO2MeR02MG+6kTJp19tOtS8b/pjOZ8NJ9fuVm+WefTusbog9SfZ
Rvit2rCW6iSZjxkjf/txoelPJV+6nZsQo94i+fbHh+f7qLfK9XcjJ/61wHSy
9Mt+sZU71dskny4XzB6v3i79q7LHf/bqz2S+FxVu/GG+6RSZd8+t7rZU/bnM
wzFRRz3VO+S8GsRPvz7P9E7pJ9bjjXaoU6UfX/fKClTvkv13Pz65mXq31Ot/
a+yPRpn+QuqretaRaHWaxHPx4qUvqfdI/Dz297s21/RemYdbnn2Qov5S9uu9
tuBtdbrk86fu8U3VX8n+fOvHHYk0vU/qzVrdPVq9X+oh9vFjD3WGzD937/I/
55j+WtZjbD6Qos783zx/btvb6iz53vjOuqKp2iL3+yyadSTCdLbM3/6TJ0ar
rdK/xkzzf0mdI/Pzv3VvXJttOlfy6cTpgZ+rv5F8faPvwED1Aek/tYcGNVMf
lPOfNHXE0Vmm8+R9dl3GLVF/K/W4puG7nupD/7vfZsn190wflni1bP/xDnW+
9BuPsV+PU38n/cDYc8peXSD5efr5Oz+Em/5e+uWMz9t9oC6U8103aHgf9RG5
/8eni/+aafqo5NPeCxmp6h+kXnKL/5ygLpL9Rp/t0lL9o7x/ed2MY2Gmj8n/
hTEeXy1T/yT1MH/FHS91sfSbxddfr3nX9HE536p3P/5CfULWO/ThtUnqk5Kf
rmlGK3WJ5Jv9jB3HQ02fkvWs87ZZqT4t9eHSMcxH/bPEf/oLpbdnmC6V+y90
H/il+oy8v9kIyxT1WYlvfEy3Nupz8v/h4pHUU9NNl0k/X+/UaY36F+mXXWN3
+arPSz/sV9+9bprpC/K9MDLWul9dLvv5q+2gGeqL0v93FZxrp74k9fZ4wayz
IaZ/zTbS4vs9u15dId/TP9ulDVL/Ju8Pvj7swVTTl6Xevjv7t0X9u5x/zInk
cHWl1E/308Nd1H9IfY347eGFKaavSDwj/83epL4q++/iPGe4ukrmwZ2R7k/f
Mf2n9JvZq28fUF/LNnxf+PFApPq65G98y1Xd1NWy/qHT37ocbPovWV9FvusW
9Q35Hqvo+Gi0+qbMs9J1F55V10i8hv574LvJpv+WfDoesf199S2ZT9XXV/ZW
35Z+5hk+589Jpmul3nr/Hfy5+h/5XotcFDBOfUfqIfYZv+bquxKf2k/e+HGi
6Trp1/7d31imvif76fzdsL7q+/L+x4Fj/g4y/a+c15xbE/eo62X9DT587x31
g//tx3VZa/VD6Y8/fZ90aoLp/yQ+bSdb1qgfiY/c+/k19WNx4Ka798abfvK/
7/Hu7TPVT2V+RX43LExtYzViWr21qKO6gdXwvPjHV+fHmW5oNZzemvvHRvUz
VqPK7oHzcLWt1fDftDz4aaDpZ62G64KnOw+qG8n1Nz64Plfd2Grkbfynj5va
zmpEVU1bVfm26SZWI/HcyV+S1U2t8v3g0fstdTOrUXpofXwTtb3ViD9z+fqR
saabW42Sgp6jlqpbyPpbRVr7qFtajbpJ6R1uvmXawWrY9biY8IX6OatR30w+
q9WtrEbCJ86LHdXPW42UNz3ulASYdrQaDqVe89aoW1uNyrSX6l5Tt7EazlM6
fnD/TdNt5fw22DTKUjtZjYiCX5Jmql+Q96/5vLuLup08b/6EgvIxptvLelo/
M/FjtbPE78nOf0eoO1gNo6D39obqjlYj+s/9xuHRpjtZjTLbdjcXqF0kXl8v
3uau7mw1fOcWjfrT33QXq2Fb8bTBDvWL8r64Hvnj1a4SzwfG0pbqrlb5nh7q
WzzKdDc5n039Gq5Ud7ca6Wdal7yqdpP9dq3cdmek6R5yHh22zN6v7inxHdFv
UKi6l8R/wA/tOqjdrUbtmlfrfxlhurfVSP5228WNag+rkRR+tWC4+iVZr2ub
dBu1p/x+xcuffutn+mXZv33ftfPVfaxGxmSXD3qpX7EawTZ3F1QNN+1lNeIS
MqI+V/e1GqGb/eeNV3tbjZC0s++3VPeT8wkcuLx4mGkfyW/vTetXql8V/1q0
vb+6v5zH+cuZd4eaHiA+VHEsQ+0r+duu4Mq76tck3+JXNeykHij5srVHt/Ih
pl+3GoG/Wkd/rDYkntc6LBmpHmQ13PxnpT+jHizXd279Nf8N029YjeIFe1ot
Ug+xGkHBn4x+ST1U6rcmJKF6sOlhVqP6YPOfd6mHW42at7a1nqz2sxpeY54J
cVSPkP0ZozJPDTI9UtabH2WzTj1K4jduwXhD7S/rSx1reWCYHi3x92zRIkc9
Rs5n+565Eeo35f1RTr90VQdIvEaEDfz9ddNvWY3cgxv3J6vHynkGfOw8Vv22
1MOXcz5upg6Uegp4semPA02Pk3y/kr12uXq89L/bTo191BOk3poHbfjnNdNB
sr/SyOf3qydajbRTwTtD1ZPk/LZ1fqmjerLVsD+Rf/SCr+lg2d/d3pM+Vr8j
+fzVwnsj1VOkf6xOTLJVT5X1t1nZr2CA6RCrkXpv6OXF6mlyPe9y/Mvq6XKe
d0b2u9nf9Aypv/7r/0pTh0r8uqXsnKJ+V+pjZOxEJ3WYrMfXu+3ZV03PlHr6
5LvyDepwyZ+q1juGqt+zGhVFA2c+9TE9S87/ZD+vb9WzxR/ZPLtAHSHPT02+
6K6eI/mR8jT7Wj/TkdJv2vTdmKqeK/vb4xM5SR0l+X65yVhH9Tzpl0Hpr572
Nj1f8mPf813j1Quk3meNchysXij5+tKbjR/1Nf2+1Memjk++US+S+Hb5tn6u
erH0/2Ud/+2hjpbrr455cNXL9BLpVzeHP/1cvVTyoVezJkHqDyQeiVvbtFLH
yP3ZNd1LXjG9TOLTtelra9XLpf7jbo8z1Cushsu7KfMf9jEdK/13isMnueqV
sr8mow5GqlfJ+h6N+t1Nvdpq2PzcqtnVl03HWQ2fF3b2/1y9xmpY5tfOmaBe
K/10QaM9z6nXSXyslb+f9DQdbzUcjy/vuFb9odTLmMoQQ71evg8u2X758CXT
GySez9bU5qoTZD/hnw6cq/5I8mO7TWIP9UaZ96/0/vOqh+lNUi+n2w3coU6U
7wWb49uD1B9L/EL7/ddKvVnOd/O7U0/1Nv2J9O8ub/+0Tp0k68182mew+lPp
H6dm7X7kbnqL9JsXklofVG+V/O71QcI8dbLMt5ROjd3V2ySfbVeuudbL9Hap
ryc7Gu9Sf2Y1Yjsv+WiyOkXOz65l2zbqz+W8R4WklfY0vUPiFxfRd4N6p+zP
/5UTQ9Wp0o8G5k63Ue+SfvPPrSeHepjebTUKG1zd8b76C3le48TBnuo0yf+U
e3/dcDO9R/rhpOc/3aPeK/GrqH4jRP2l5Mvh9++3U6dL/X38bcYv3U1/Jc+v
zwlLVO+Telkf6jpKvV/q9+qJP59VZ4g/u7avsJvpr+X7dfTBBR+oM+X8P/E1
vNVZEp8mixz+6WraIvkwYkbVfnW2nG/NM/lhaqvVKNo4YWtndY7E68Q7iypc
TedKPfZvM3Gr+hs5ryWxr49VH5D865LSo7n6oOTrmfC2xS+azpP9drpmt1r9
rdR7+vNPXlMfkvjb/XO/vovpw/J9cHHZ3Rx1vuT7wW/vRqq/k/nzWtq/PdQF
Us+NXnta1dn091bjUebqpqnqQvGZxS9MVh+RfGr2gnsb9VG5fi9s8BkX0z9I
P/SYFpygLpL3BTReOlz9o8TrftBnDdXH5PwKxhV+18n0T1K/bzyujlYXy/l1
frO1l/q49I+6kUNvdzR9QtYzsTZ6n/qk9J+bAy3vqkvkvId533RRn5Lzszvf
o6KD6dNyPqc6RGxV/yzf757NrWPVpfK+n7/4r7n6jOTLsD/8jjubPiv9sc+P
2+LU5+T7xvPNW6+ry2ReVCwf9l97079Ivz339u4D6vMy76ynGsxXX5D+3KYm
tLe6XPL388yT1e1MX5R5eMXRO019Sd6/umPaVPWvsp9OJ1u3V1dIfALabTj/
gunfxAea2W5WX5bvo1s7Ykerf5f9JZ2zaaKulH42/Ku4IifTf8j60jrZx6qv
yP5GeG8doL4q+XSupuu/bU1XST1VDs6zqv+U/tbCZ0yk+prkw38nr/dQX5f7
hz6J+7ON6WrJ//Wnu+5S/yX9eKbviWD1DemvMcPnO6lvSj29e7tDWWvTNfI9
9MMrpzap/5bvnZcdY0epb8nzAhK9G6tvW40hBV/WHnU0XSv56TQpc7n6H9n/
k71z+6vvyPNbbvS6/7zpu9Ivq1s8zlbXyf1uPY7PUd+T85xbkdxDfV/qPdgt
4s9Wpv/93/8F+zd2qesln1PjO7yjfiD52zflPyf1Q4lfzbDfyp4z/Z/Mzxnx
RxPVj6Qf9Q/Z769+LP3P4fRWO/UTya+4M+uKHEw/lX7dd9YHsWqbHKP8h63z
fdUNcoyS0xPn1Lc03VCu38uanat+JsdIKd82J0ptm2MUt2m7wF39bI58L3eP
qW5hulGOEep6Ij5N3TjHiHnlaXKI2i7HCOxwLMNZ3STHqF7Zsai8uemmOYZv
A7vfk9TNcoyFA1Y9DlDb5xiW0oROzdXNcwy3ad2HHrc3Lf8E3D96K3KNumWO
YX+v6WeD1A5y/6tvn3zczPRzOcajBz2efqtuJfeXb/RepH4+x6hasHJeH7Wj
/D6ygeVWU9Otc4yEmS3u7FO3kfO0Se83U902x8i9dCr2RbVTjuGyZcWp35uY
fiHHsCvL75CibpdjBPVdMy9I3V7un1xe7Kh2zjGir33z4hk70x1yjMToDqs+
UncUW1tUjVB3knj1/XBEI7WLrPeLBOvRxqY75xg+nzt1WqHukmP4FblvGqB+
McfwOlTcsL6RaVd5vkvNklx11xyjPnlLXZS6m+TDjz/N763unmPkDVtR99ez
pt1yjOTv85fsVfeQ9ZxZ0XCGuqe4Y/HGTupeOUac36cdK2xNu0s+/XMtO1nd
O8eIP5zvN07tIefv1+bqc+qX5P4Bd2NPP2PaM8co6/t2lw3qlyVfLvX9abi6
j1w/sX2urfqVHGPIvpXtjzQ07ZVj1La7cWKZuq/k+/fnlvVXe8t59h/o9W8D
0/1yDCePHrdy1D6Sv68l7Y9SvyrxabYiore6v/x+wF+eN2xMD5B6jDxbv1ft
m2OkjuhfNEP9mpxPpMsnLuqBUq+xce/+9nT0/+vXJb+7hA3YrjZyjNL6IscJ
6kES7z2p/zyvHizxOll/pvSJ6TdyjKiWp775SD1Ezvf5Dp+PVA+V38dUr2us
HpZjBNd4LCp6bHq4rKdx7cyVar8cI21er3cGqkdIvpyuHPffI9Mjc4zCwpZj
89SjpB7+PvjW+2r/HCP/3/LAPurRsp7V8yff/s/0mBwjtm/cuxnqN+X8LM0X
vKcOkHre1iKum/oteV7S2uSrD02PzTGShr5vSVW/LecdcOnkO+rAHMNz0jc3
2qnHyf2NGjUvf2B6vNTLw5N9PlVPkPhcbBQ8Vh2UY9iMOBDfUj1R8uvvi3kl
9aYn5RiVs+bVfKieLPkdFvPicHWw5F/cw3ds1e/kGDWzbn525F/TU+R53435
bbl6qvRXF9cuvuoQOd/+s2c9uG96mpxP1osHDqinS/51Hf3sQvUMWa9xfcLL
6lCJx55/vr51z/S7Ul8PZzfOUIdJfleNC31PPVPyo0lWUTd1uFxvvtitqs70
ezlGwNavN+1Sz8ox0keNfThFPVt+Xxoa7qyOkHo5UXXx4l3Tc2T9lWfGbFVH
Sn/O6/VToHqu5MP9fwa3UkfJ+we5Hv35jul5kp+vHx3ykXq+xHfLyRMj1Qty
jPCbrwfaqRfK/Pqz4x8//mP6/RzDtmf4vNXqRZLfU9s/O0i9WH7v7pPypNZ0
tPRP7wLvfPUSqS/Xr8uWqJfK+abYLuqn/iDHKBpS1O7ebdMxOYZr0c2jVvUy
ef+RpZFR6uU5Rt0fUR081CskP0+d+vnmLdOx0n97frzmK/VKyYedhwbOVK+S
8zw34j9X9Wo5rzkDD1/523SczGfH5OWp6jWyv8jxQ6eo10r+vLikpbN6nTz/
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
DP/zfwEAMI/d
      "],
      VertexColors->None]}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], 
     PolygonBox[CompressedData["
1:eJxl1X9M1HUcx/EvTNFpKb/kxyL5EVwgv+U8ft3BS45fxw85OE75UfwchUIJ
mTGHIY7UhToph0zUIk2HTtMFcZRgoClWggWKEdOCIq7yjzBFcgz7Nr/v1vfd
bbfbY897jXF338/XvWhjRomlIAit4vOf1yePhfC4suV634mCnie2Rt7A9qYG
I9ke5g+HXU32ZCeU91vVbe7Ol+yCdceHbWcKyG5YOtrUbGtN9oBFSEJk4NU8
yZ5YML6kctsusgLvzrsU25ZC9sa6t05ODziQV+B8+nILm4kXJfvBzW5mw1gH
OQBOOY9PX9lNDsL1O302ecXkYGg/H8tcqyGvRNvFgN4yZ3IIurPdjSUPX5Cs
xIGKwPdsb5FXIT/oKcekTrIKFwOmfp5sJoeiod5j9FoNOQzLHzm33S4mhyOr
+ONyyyRyBOqrHPq9gsmR+Op88wOlM1mNgc8Kn3a1JGvgX/LLXzd+z5UchZ3q
yud0w+RoHFzvo93YSwY6VPfD1Gck1wI5+abJ4wepr8b8Pbcdju2kvhrvLFNl
+b5OPQYljm9MqYqox+DTxV9cvaCnrsUH04OGrmjqWugjvN/2CaQeC/uRsCHB
lXosfN2d52uWUo9DGnboRx7nSD0OrzXbar79Q7IQj5bSwha3cerx2Fvp13Rp
iHoCSsect3Vcpp6Ay03KqQcm6okoGJ3pqjlFPRHPvjT+U+oR6jq0x5Q3FjRQ
12GD42bf9jrqSWiIn1XEV1FPwpc3/f3ty6gn47uc9nku+dSTMafT7c81UE9B
y/TW0W8SqKdgtvTcoy1q6qlYMBb5vDGYeioU1d0fFSior4HXn7vvNz9DfQ1+
fKirsLShnoaz5gOnG62op8EQ+H2cYTZb6nq0mhS/ht+TDD08k5WGRLPkWj0O
D5anvXlHco8eizoWm27doH06nHpTK9Z+Tft07HM598pML+3TMWKjOdPVSft0
WL86EXr0LO0zsL5qwq31BO0z8PJ25Y7+I7TPQKF2rt6mkfYZqPHxKty0h/YG
HP3tWtS9OtobkH/hbtHeatobYDpstovdRHsDhuaC3l9WRvtMDB4zZ1kU0z4T
DZP7Dlnl0j4TdtpP+jwNtBfddEqbm0x7I2bNUdUntbQ3wiFm6w9L1Nk9nULQ
zdBiI4RFQ553Q/9ver/qvxaYxb8ncy0zmAVm8f+V75nBLDCLn7d8zwxmgVn8
vuV7ZjALzOLvTb5nBrPA35/GOrN4vcg7s3i9yTuzeL3KO7N4vcs7s3heyDuz
eN7IO7N4Xsk7s3jeyTuzeF7KO7N43so7s3heyzuzeN7LO7N4v5B3ZvF+I+/M
4v1K3rmjmaOYNcxq5kjmCOZw5jDmUGYV8ypmJXMI80rmYOYg5gBmP+YVzN7M
CmZPZg9mN2YXZidme2Zr5oX/+m/m3+4C
      "],
      VertexColors->None]}}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], LineBox[CompressedData["
1:eJw013lYzPvjBfAQsi9ZsiUUoYhEiA6FyFIKhdIiLZL2Pe37NjUzzbSgSEjI
voUiCpFdZMmePW4I0W9+z3fOfZ77x+v5eM97zufMuc81wmHzcqcOCgoK7WT/
xikrKLRX4D9KGHk5qLaqyK78f+4N2xuREsEKuh8aC+8PP9GPVoH79U7RfmfX
yT0Uq3bd79tiR6uhV70kp29veiTa6S6YObHaVm51dH7R0ys8nh6NTMWLxkcW
05pYFbP3x40B9DicMVdt1+e1jdxaUFNucXt+nJ4AldVtJZeTaR3UPq3qY+tI
T4LR+eeWK2fRk3HkwoSKjYNoXZy1HrHC6edauacgy3Pitr4PaD2s0+k+cNFJ
eiouTPj66m0OPQ2CpJH1NVtofaj+HnTkiSM9HVaOh93bL6JnIClgwHWNSfRM
XD2T833KINoAN07b9xjenp4Fbac3v+5+WCP3bMQZeI1aeJ82RLbrWKPNFTRw
fGqzvsF+uSOA1etOvN2Vzedz0DHlyYCdcXw+Bxn9p1qN9+XzuXAa6P91qgOf
z8WpbpXV58z43AgFP25blBnyuRHMZmgmjp3I58bo91D/jsJwPjfG+BGDOs7q
xefzsAyxZg/bVsufz4N3Tt9Zt5rkVpiPfBf7fLUXfD4fqV5akot3+HwBXJ4P
Cj9+ic8X4JJkytfvJ/jcBHb1LWVbivncBMM2vHi5ZCufL8TRue5iOwGfL4Tb
QL/xR6P5fBEE81tHzw/g80W4ck9bu99GPjdF3eqjikPX8bkp/i1cKFxjweeL
kf8jtP7mAj5fjFaX0t9BBny+BJ2fzxyzYhKfL8HokLMH7Ebz+VJo/JfcnDOE
z5ei4edCz/Z9+HwZDjZmlYg78fkyWEx8NM+i1Vr+3Ax7Tox+N/2b3DCDuukU
C5NGuSPMkHfbfVnYU7nLzdD1eLcTD+7yvDlUKpZ4rrzG8+ZIH1q6qaWC583x
sM+s/WUned4cvT1eT9txkOeXwzXgtdqeIp5fDufIKbHXt/L8ctgb/UvqI+b5
5dgyVsPeJ4XnLbDjfc3sb9E8b4F15z46pIbwvAVO5DUqG/vwvAXu/NPZ3n8j
z1vi9s5Gq3aOPG8Jwdv03E5reN4SykbHqtQteF5mSbHRGlOeX4HWxtkhe414
fgUGzA191tOA51egnbPrm6QpPL8CcaNquw7T5vmV8P+oUFOpwfMrcWHrnv2R
qjy/Es3DxdMsBvL8Sty4mPxdvzfPr0Lz6KEBk7vw/CoUB/gvM2zP86vwvMmo
/7o/VvLzq3DVLdIho1luBStsebrm7r1PcsMK/8727Kb1Vu4IK9zsULlX2MDz
Vkh55rey+yOet8bON7dOie/wvDUMDw8Ln3id563x4O5Qy4eXed4aS5VbGjPL
eX41VGs1mtac5vnV6CCwUJ1ylOdX42Ge2bghB3h+NbaJftX03sPzazD1l3pF
vx08vwb7twkujs7j+TUQf6vNnJ/F87LnvWZ+8RHw/Fq0Ez7NOZDE82sxRtPd
+kcMz69F24XxTYvCeX4t3oV90igJ4nkbfFZuvTDIl+dtcPNzrwyhB8/bQFox
d80gV563ge+eDp+LHXneFtOrug00seV5W9jYWexqsuJ5mW07uxZa8Lwtui4K
13VcyvPrZJ+n+0BrIc+vQ8iZo2PaGfP8OqzKL/j1bDbPr4O0avvIK9N53g5x
F5YHlU2RW80ONfaW905N5OfZ4cwI7V4V4+S2s8OOhsUKtzX4+Xa4Vt8h+qOa
3Pl2ePclxLv3UN5nh36DDxfPGih3gx0WTvVU8u3L++1xr2W+65EevN8eXdUS
9v1R4v32uF6PA4sVeb89DrlMMS9qWyW/3x5rH9/3Vfojd749tEaY/Pb+IXe5
PXoMX3bx9Ve5G+xl/a84bPdJbgUHTGi1K37ZKLeaA/Y6KKd7vJIbDnjUbodx
uwa57RzgfuXOwdx63u8Ap0+tx2Y94P0OmDvkj8Hb27zfAX61k8ZLb/B+B7Re
iXM2u8r7HVGZb/uw12Xe74gqj2yX+xW83xGHt6X/3XmW9zui982ekYGneL8j
Xt1b+djiGO93RN31Ab/0DvF+R7xZ6lahup/3O+LigfvDe+7l/evR18akrcMu
3r8ehRa9TRUKeP96fM95/rn9Vt6/HiNe3LjfLZv3r8fusSZfBot5/3osiFDR
0Mng/TLfcnQyTeX965F9sXCreyLvd4L23uIzwlje74TGMMn+8kje74TT35/Y
/xfG+50wJduwanww73eCcdPVGld/3u+EDacf2u/35v1OaNXt5f/Dg/c7wdxl
5S/jjbx/Ay6mN9RLnXn/BtQGjer5zZH3b4BH+7oIMzvevwGpmS3qR9fy/g0Y
tO/8h6HWvH8DNgUXXU5awfs3YGeI4+6/5rx/A7KGvwv3W8r7naEZvn7ut0W8
3xkFAwye+yzg/c44lNhz2W8j3u+Mls2HtsSC9zvjwFgdx/6zeL8zjMquftk7
nfc7I+9480CjqbzfGZeHWtY2TOb9Lni+urxL9ETe74Kvs+ecGavF+10Q86tH
3V1N3u+Cx+opljEavN8Fm24v1dAfyftdINjW37BJlfe7QPXqtaySIbzfBa+s
40dsUuH9rtgzM+HupP683xWFntN2/e7D+12xfNboxKqevN8VZrY9/KXdeL8r
ps6tsd+kxPtdYWfiMnd+R97vCiPF7j1Htef9rnCL7XSmQ9tK+f1ueLjzqmHj
H7nV3HDY7HPmzRa54YahH8buK/sut50bRmWvCi/5JneEG9ILvTvlf5E73w1b
67OmST7KXe4Gq+9tXTLfyd3ghoO/lPwEb3j/RrwrGe+Z+ZL3b8Shf23fJA28
fyPMQ2d+z3/C+zdC/3Kpx/5HvH8jDiotW3X2Ae/fKPv7wojdN+/y/o14VrN0
5dtbvH8jiq+q2LSr5f3umHi+/ohqDe93x6TuPS0Mr/B+d1wuNdR1vMz73VFz
b9CSpIu83x2v1tpmHy3n/e744PW294uzvN8dV1R3l/Q9w/vdcfJ5kdP8k7x/
E3bP66wXdoz3b8Lf0DblE4d5/yZ4/nv857+DvH8T2kZ1eKO7n/dvQsu199f8
i3n/Jii2jthdtpv3b8LQOFOvjrt4/yb4HVRVN9/B+z0w8+GGU9u3834PDB3f
YfzXPN7vgXzDN97zcni/B3Rv90/Ok/B+Dzz0KN70Q8T7PZAxqrafRSbv94CJ
bkXw4XTe74E1V2uz+6Xy/s0oOrrGPSiJ92+GUv8HHxvief9mrFG91N80lvdv
xtPrp56fiOL9m9FcZG06JoL3b4axp/WS7DDevxkTvoW96BHC+zcj+Hhux9hA
3u8JuytZh/75yd3bE3tDHJ4H+/D7eGLc6HaCX55y63hi4efok8Ee/H6eOJ7c
deW/jXKbecKo10XHGFd+X0/UFr973N1Zbk9PzAquLpOs5/f3RMKSE//UHeQW
eOK8z5BtR9cxjyeGxjtnzbeRu9QTSjOGvHy0mvk80U3jYriXldw3PXFS3OLc
dSXzeiLA1l6yy0LuJtn9uw92MTJnfi8MPF9w+sVS5vdC9ud2RTGLmV/23LSo
SnMR83vhbJLnkNoFzO8F54dLtgbMY34vzD4wdeFII+b3wpgdE4bUgvm98Gq+
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
b/Yfg6onv/ec6sX+ZXn+zQwq78n+Y3AuzW1vVQ/2H4PUGwbTa7uz/xiMsXTV
fNCN/cfgeZfd/s+6sv8YfNHeP6qxC/uPwTdz3Ylfldh/DDav/ir93Zn9x8Ji
y3Y7RVopFoHzf8T27MT+Y6GeekBpUEf2HwthWGTjKEX2H4tgoabGxA7sPxaJ
OTbnZrRn/7H4uf/Rkfnt2H8seumv7mihwP5jUfw16/C6Nov/2SQWV56bnnH/
J7dZLPrbTBke/Fduq1hs6tj9aXyr3Hay+6+k/RT/kdslFtqvAjcW/pbbMxZr
H8dNP/JL7sBYmMT42V9okTsiFpN/tXt566fcCbF4u+Pd2ec/5BbEYrnu+69f
v8stjUXfooot7en8WHTDhPXKzXLviUVL2ucC9f/kLo1FO9eKaVO/yX0yFks/
OmmYfJW7PBY7t+S6rW6SuzoWTTUjOm/6IvfNWHy8evJ3+Ge562Jx8LDaPOEn
uRtiMV9x8Juij3I3xsI81unJ6Q9yN8UiD5Xjat/L3RKLU7E/r798J7dCHAoa
yy+3NMqtFIeFc17060n3joPJvmEnR72VWyUOG2P1Sqe/kVstDjZeH1uXvZZb
Mw5zLDpu2/BKbp04rDQ3Eoa9lFs/DsI7ro9FL+RGHJZEGwSVPGf/cbi7KNy1
soH9x0FtxY+Sx8/Yfxycemww+v6U/cfhkqpQqyftEofPPnNdxjxh/3E4N3X6
Dzxm/3FoqjW4v7qe/cuev+mr5PeI/cchyi4yOf0h+4+Dh91Su+I69h+HkQsQ
d+kB+4+D4+Fhfxvus/84nA/dX9l6j/3HYerZ449V6JNxaLysME/vLvuX3a9p
8df8DvuPw+D9fh0332b/cQix1rFJucX+46DnYapYfJP9x2HQhvTfVbXsX/b9
flQavrnB/uOg0ePYHUW6JQ6xdzSPj7rO/uPxqPjdm7k17D8eJdoVTg7X2H88
VCYGTY66yv7jkXG6fvGOK+w/HuHKR45eqGb/8eh47Irryyr2H49C8/cbFWn9
ePy+/ey0xmX2H4/N1n4rF1xi//H4MtN/tmsl+49HbucD3skX2X88IsMbv+2/
wP7jYZ739dzNCvYfj34p4vv/lbP/eLw6lD99IB0o+z67nr2dcZ79x+OY7vDn
tufYfzwOr9XSiD7L/uMxesXdI7vL2H88Fse+Sqk5w/7jcS5hXOnX0+w/HgYT
fIcNpEvjsSYg/a7BKfYvOy9ddM/hJPuPR+pPn+GJJ9j//7//R4cPHmf/8VDs
uDj9/jH2H4+AIOnRv0fZfzzGnkwbqUE3xmPh8H91i4+w/3hcnHX8ge9h9h+P
znfiVLceYv8JqLxhuP9SKftPwG6zQ9GfD7L/BGjs2VcwkFZJgLZlW6c5B9h/
Ar61Dzvitp/9J6Ak43uRqIT9J2BF9xnPz+1j/wnw2T/E4V0x+0/A7Scbx/aj
TRKwdErrVMO97D8BmX7bktz2sP8E1AvV1bN2s3/Z9z9g1+FCEftPQFtfDc3P
u9h/AkbNMM4cTAcmwPOqYM6CQvafgJSsJ3q+O9l/Aqy3/vUo2MH+E1DcpfLj
jQL2nwCVyYoHW/PZfwLOSzOOjaP3JKDnB0MF6+3sPwFx7V6mxW9j/7L7ni21
P76V/Sdg9JFVAa/z2H8Cbt29dbMffTMBBlUZm4xz2X8C1Ke5L/HNYf8J6PRH
z7Mwm/0noINy5b27UvafANGeD2Ed6ZYEOPWMcpkqYf+JGFS+Vuycxf4T0d/B
XDFbzP4TYV6hd+yqiP0nYvidZ7tbhew/Eb+PajyeQGsmwrLkibl9JvtPhN3o
p0qiDPafiFcn/ipUCdh/IhSGKc/4nc7+E9Fp+vcj2rRZIgwHhHjYp7H/RJS/
DnEVp7L/RExpu1F4JYX9J+Jwg6nav2T2n4i4CVfrJ9OBibK/j4944JzE/hOx
xnZc362J7F/2feeXpdxOYP+JcCg6OF+Jlibiz9PHhrPj2X8invsNDfSNY/+J
ONV/wZfiWPafiLeperuex7B/2effLs9WocsTEfGnomZZNPtPRN28vrPjo9i/
7H30Tf50LpL9JyL2Vcf6HxHsPxFRTms7TaQbE3HQzmWzczj7T8TASx0G5G9h
/4n4Xqj0uy6M/SchVs98SF9aKQlPb5wIMg1l/0ko/zCgf2wI+0+C59iFn84F
s/8kJC4Y2/5XEPtPwsMxmRa6tE4StG/YPt8UyP6ToGPntm9PAPtPwmwNwaGX
/uw/CTPj9v2nSpslwb2H1Gu1H/tPwtINk8Zn+bL/JGy0sVC77cP+k6Db8NCs
J+2ZhPrW/LJF3uw/CZovYhzjvdh/Eiyf2c+r9GT/SWhw7OfQjhYkwbst8NTs
zew/CXvt3U1DPdh/Elqsrw08vYn9JyHmgbdqizv7lz1vNFw3lT6ZBKeyXo98
N7L/JAzcfj7tiBv7T4LPX62wb67sPwl3HPR2TaLrkrAm6HgnLxf2n4QnXdIK
Sp3ZfxIO/sn2a9rA/mXfx/JklA7dkgRz/apqTyf2n4wR7woXHFrP/pPx/fLE
tq+O7D8ZBcvmf5lMqyRjl2rVQF8H9p+MXp8Egcfs2X8yLDOi+vy0Y//J0G0L
fqFP6ycjaYH1h+B17D8ZM6Wt48/asv9kdDYwLmyzYf/J8MjpZTmXtkpG4rTZ
M2PXsv9kfDly0Lp6DftPhqDG6GA32jMZGasfzVy2mv3Lvo+FRVumNftPRklV
2q/7Vuw/GR1fu48bQguS0aH5esa6Vew/Ga1WmRMLV7L/ZJwV5nR4t4L9J8Pd
sKrHBLo0GQ59fy3xsWT/svf1tHflSQv2n4wnaV82/1vO/pPRU8vf3Ji+mYy8
B7EuSebsX9bXjbajN83YfzIObrg0dSDdmIzjfU9+slnG/pPx3ubUw8Kl7D8Z
qp+Lf39Ywv5TMDbaw0yXVkpBzY/Xj4IXs/8UpBr8l33BlP2nYKt9YGpXWi0F
5Smrji1fxP5TMPqfd5/chew/Bda99he8NGH/Keiv2+ikRSMFut872fotYP8p
SP/9IfHcfPafghcKwe8601Yp2P9UGGo+j/2nYEj0UKNcY/afgsbvPwxeG7H/
FGBVJ7eJdGAK9j7Tvho0l/2n4OUzM5vKOew/BbfKl4/qRQtSsLrDwKGrwf5T
YIHIBbsM2X8KbDX9djXNZv8puBd9X8+ALpV938mJLfGz2L/sfWh5fbpjwP5T
cCrcu58aXZ2C78u9NrnPZP8pcHlp3nJyBvtPQWJsy9GOdIOsr8KFO5dPZ/8p
SLs49uJ2ffafgh/BYf0+TWP/KWgIHiuZQSuk4mJiX9OEqew/FeKYYTr39dh/
Kk7ZTpyvTquk4tkI7VTvKew/FU2f/ihW6LL/VPxoidjfi9ZJxb+0gjjbyew/
FV37Ggn2T2L/qXj/a9HVVh32n4ppd7dNWUybpWK8sXpt7kT2n4rM9hXZHyaw
/1SUPlktmkm7pGLcqQfnkrXZfyo+pw4b9FiL/adimFvfnVp0RCqaPfPWho1n
/6k48qhg3o1x7D8VKc1KtsNpaSqi1U7u8hzL/lNhd0889IIm+0+FaFvCBWW6
NBWjhwZInMaw/1TktDfJPTGa/aeifvCL613oatmfn6s1ca0G+0/FT9ce5w+o
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
FJfKRh/c3ii3pez7b/R106OtpMibrD/t2lu510pRYune3562k+KTSreOP9/I
vV52vrpnp1TaRYoJh7xURtHuUlSpTTA49VpuTynOu872Wkb7SvGiIe/E61fc
vxRnnxj1CqVDpdh9WjuwLx0he593Lb/tecn9S3E7+UiYIZ0gRcpc48H3X3D/
UsyzbVftTgukUF7wOq4DLZKixvn9ypzn3L8Uv7W76U+i86R42WXuuOoG7l+K
CI9E7XV0oRRRt+rn/HjG/Uthsk/XOZUukeK5f/JWdbpUit6Hn7w685T7l2LO
E/VZFvRJKZJC1hS9f8L9S3Gob6haFF0uxdDxkfsG0ZVSPFnmtODQY+5f9r56
jmo2oWtk7+fn0UMN9dy/FCu29Y8IpO9KcUViuK43XSeFfaj2sj2PuH8pvr55
uAx0g6wvX0P7uofcvxQzLltFe9KNUmSEqR1Xoj9KMQgZv/LruH8ppMd2LZlO
N8vuS7A6fOsB9y/FaqfCMW50q6yPP9H729MK2TD699Uo9z73n41ytXfvdWml
bCQPXr+j5h73n425u2zcnOje2egadnPuv7vcfzYEdifGS2iVbCj06aGhQw/N
Ro/lNROu3OH+s/H63RcTB1o9G1MLvH3+3Ob+szHBaNkBEa2VDZ+tEb+0aZ1s
jIlot6LqFvefjYazNeV2tH42Do1/YvD7JvefjeEF2leENLKh1nLSSZs2lj3v
Edy3qpb7z8avcxtr7ejF2fj+OSHv9w3uPxu1ETVBItoyG4WrJzlPoK2y0cnp
8Prq69x/Nt4lLfJ2oO2yse9Uc3prDfefjV7P953Nol2yMes/tz86tHs2zr3S
WnjtGvefjS0lH4ucaN9sVBvt6qdAB2ZjQZF5Zs5V7l/Wx+2Pw/XoiGxYVnmd
rb3C/WfjX0K9mxudkA3loRqaHemUbPyNX/h9ezX3n42Q+0a3Z9CibOxQ7nX+
XhX3n426JUVnPOm8bNwVK1Z3o/OzkfdP/VXRZe4/G/Fb2/eeS+/Jhl6S1PTJ
Je4/G6Knz7MC6dJs1B9/+FWZPpqNxEkhaw9Wcv/ZWL+54v4iuiwbgcLddm8u
cv/ZGHBR83ckXSnrUwM7h9HV2Qh63bjm1AXuX/Z7m6CqvoK+mQ2tCfV/miq4
/2yoDBjyMoWuy8ZJlYcPNenHsn439m6oLOf+s2FrXPbdjn6VjWFPHwz+e577
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
UvFpz3E4i/XjrDMhLvAZEaU556xsD2eLKEnvn/fl75zPs/5Qx/iGwTki2uU0
a/1IOJftT/0Z0W+aOF9mNo3ip8B5InopqL8+D84XUcy5+M8d4OusfnsDhuR9
41zA6vNfyIpNcKGIpH9VcnO4SESN37o3vf3KuVhE7jPls0/CJWx/DfBXLIDv
ieifyrmLLlwqosP6S7de+8K5TESPt8d/iYAfiUh7YE2wBfxERB8GL2t+18i5
/H/7pylGAD8X0ai26n6L4QoRWdpuze0KvxLR3IMBKwo/c64UkcfwNfrb4Sq2
L6fE3JoAV4soT+ts7MdPnGtFVClomiuD60QU6TKr/zK4XkShU1VNBnCDiGbL
jR6VfOT8SUS9Lxy9FAM3iihRbpRuB38VUQe1TNzUwLmJ7ecfNmIN3CwivZul
Kj+4RUQTndZeNIZ/iWh/XocHjz5wbhWRq6eo8SD8l+1L90lGM2AtMc1pKJn1
p55zWzHpuXvuOAdri2nevdd56+AOYnJLWNrBDNYRU+PTO4teveesK6b4N2My
kmE9MY2rj9abB3cV0/qxhWEdYX0xhX1urrpax7mHmNqt7ukZARuIadOLPs8s
YEMxnYvV8Xn/jrORmGamv/wkgvuKafL+43s8YWMx2flbDekJm4jpwPYzxXdq
OZuKqclIf0sMPEhML8PnjP0PHsK+/9r34/cazmZi4h91O5sJDxeT8XOTXavg
kWLyb7nqbgqbi+mylbXVs2rOY8T05fGOPomwhZhWDz7ZYQ5sKaZ+/rG/28FW
Yjr4dmrL5becrcX08N3N1k2wjZiOXzLsNBa2FVN3lUX/uirOdmLq/Lv7JBE8
RUzPW3O8PGES06pfg+N6wvZiGk7zL5W84ewgpiH9pjbvgWeK6VP5B5upsKOY
NLcW7W6p5OzEnme99fFp2FlM88M8x66FXcQ04/6XhCGwq5hmpU799fI15wVi
+m+o/drjsJuYBNd+vHWF3cUUdM3bTxf2EJN1+KaGG684e4rJ0No2ahvsJaYL
89N7ToS9Wb+b3DrT+JKzj5iONB5YooZ9xfS4f0tHP9hPTB9+d8rrDwew5725
uvVpBedAMQmHGE07Aq8Rk7h/965z4CAx2Q5RVWnD68X0LeFVXt4L5L+YKi+f
EkfAoWKStukXbwlvFNPyiya7Gp4j/8VUNOXiVjkcIaZeH+u2+cCRYtIx1ezt
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
0fHtiio489k+OxhaFQAL2fkuiIvaw2L2vsf7n5e+4Cxl+8OgSj0dlrP91euz
vOo5ZyW7/+jp6l2wmn0+41W2Kaxh9zsjr/DqM86ZbN6Cql57w1msfySztf6W
cz7D5vfh12E8OFtNMbUV7nbweXa/hR0OvXjKOUdNJcuCiyPhXLYPknt16wtf
Zs9f2uJ58QnnPObjhpkecD6bvwnBOi2POV9n3x/YZs1xuEBNwpl3yqzhQjbf
CSX2Tx5xLmL90NAudxNczM4/I8SmF1zC8iFOPy/7Ied77Pvit05ucCnbj7vq
Xn0r41ymJq3uJpFH4Uesv6buNh4PP2H74bdhYdkDzuVsfsaVbw6Fn7P6Prg5
pgdc8b9+evXxdCnnV2qKaj8oez5cyZ4fEb/ry33OVez9uw12PwJXs32Z+2rc
OLiW5c/qfIMH95D/rL/0bv0NgevZvB798lkfblBT4KcpdVl3kf/svrpmvnOF
G9WkXf3fp8YS5D+rh8/H3wlwE+uvTZf0x8HN7HwGCvMHd5D/ajIde2reBvgX
+/xC2ZbucKua9IT66aeLkf9sH79Y9XY+rJVO2UufDvp6G/mfTlID79WJsHY6
Wf38dd4S7pBOFa2azg+LkP/p5NozbFUYrJtOOy2ci3vCeumU4jjRKvsW8j+d
WuaNl7nB+ulEk6f2/16I/E8nj39L0o7BBunkeCR6kDVsmE4htRdOPbmJ/E8n
t6aW6eFw33TKz3J43Rs2Tqec7qm7cgqQ/+kU1aVl5BLYlJ03ddmLnzeQ/+zz
U7cTU+Eh6eQ1ffL8ybBZOjnPPW1YcR35n07KgpFvo+CR6WQkkp/vD5un08bn
g4/kXUP+p1NRoCh0OWyRTj4OJku1YEv2uf8JJ1E+8j+dCm52n2YPW7P7WBY7
5e1V5H86JQxtto+BbdNJ28jHZShsx+5nzA2fwjzkP3uer0nkKpjY/WeGpOrA
9qyeehevqa4g/9PJNLz5sxM8M50i3g8b2nAZ+c/q5e284hDslE6tpb7SMbBz
OlXarfl0/xLyP500vBVTN8Cu7D4/zzreA17A+mu0cfPZXOR/Ol1e9HLpItid
PX/l/qLmi8j/dKpeOMguBfZMJ60h0vOTYK900nnQ1eZFDmdv9n2PFflRsA87
74XUeSawL6v/x4s1Vy9w9ksngx9XolfAAew+HsrM2sGBbD52hjyQnue8hv39
H+PdM+EgVj9H9eS6c5zXs9/37f17HxzC5m/2ymuj4NB00v97MP5uNueN7Lw7
jvoGw5vZee9u+q87HMHm6b3lgLNnOUemU+PD2x0XwVGsPw9O+tF8hvP2dDLu
tetjCryT/f56Qb0tHM3eL/Xop4rTnGPYPJ3w+rkdjk2n4cE/dQfCcekUaLx6
8I0szvvTqUSitveHD7L373glsCMcz+5njuCY6hTnhHRKC3G9PQdOTKeYrffb
fcrknJROQ4L7zUiAk9n9zBt/yBJOSSe9AYYVjzI4p7L3e3t9XDicxvaFwCa+
D8xn8+ix+cslDWdhOpX22LrUGxazeXk4o0QLlrJ5FjyeLknnLGfzs3XE9Rmw
kt3vOppVp+asTifh1j4P98OadLJJP+s/Gs5Mp7i2Xf/dV3HOSqeGvcMEofAZ
5mn/ZvSCs9l8TEz6dkHJ+Tyb7+AahSeck052jV98/yg457J5vJ4zRAhfZv3R
YPPRHs5Lp7rwDZdr5JzzWT3XrkiMg6+z/rrXMXgUXMD2UfrKBfdknAvZ83Q3
2m2Ai9j3v00cbQAXs/wIzhxyQcq5JJ2a4p4M8oTvsX3leGrYHwnnUlbfnInj
hXAZu78362dMhx+x+7+/0LtWzPlJOpXvr9m2Dy5n/TdgsNQcfs7m63jnB/dF
nCvY/P/laYfBr9h5vZ9NMYQrWX1uXN5xUci5ivW7zaxbXnA1y4fi8F5acC3r
n5i5ayQCznVsP4XeujkTrmcWVQ+r53NuYPvIRJpwCP7E6tOkrTUObmTzP67D
5kc8zl/Zfn8r/xoON7HnGdZu6gc3p9Oj8uv/8tI4t6SThY1dgi/8i/WX/fxh
HeBW9v4d2txUneT8l833EafVc2EtDfl9NTf4ksq5rYakNoqbSbC2hqpDc7bZ
wB005JG13K7iBGcdDQVqpbXZCetqKCs06O5gWE9DWr1LBbdSOHfVkNefmxFr
YX0NtU6Y69EN7qEhhwd+U84e52ygofLXnUcthg01tDN0msnvZM5GGnJM1TYS
wH015BPoZjQdNtaQ1aexA94d42zCnv9fsvkB2JSdd1UsjYUHaWjIjn+eD5M4
D9FQyzGtqHDYTEMJeXGSfvBwDcV0Pv7g6lHOIzUkPDyygx9szu5vmf00HXgM
+/t9L6M1iZwtNFQ59HexK2zJfn9map/vRzhbsfv+d3H9CdhaQzZ+S4r/g23Y
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
N/vrwCYS1rJtXNsTZ+4REpZy+XDVHthUwpJW1BU4wiPpeY00zsrAZvT7zaMO
XnbiHkXnVx67PQQeLWFZ8/U3DofHSJi3zPfQekducwmLTcgKPgqPlTDf/W5r
ZsMWEuaT8WidKmxJ8fG021TiwG1F9W2xN34LPI78sjjVGrameDytEXy357Yh
X6m+nQXbUv32L3i7DB5P9Ra3tasebEf1kmw8+PkU7gkS5vlSMnUfzCif73XW
u8ATJWyom//ZbvAk+vx48sv8ydyTJawkNFMtDJ4iYXO9D0wdCdtT/zb5JDRM
4naQsIZclQcnYEcJa5pxuO982EnCzKd181GHnel8zFVwfyK3Cz1vfrDMDtiV
8jcrdDaD3ej50j1Evxn3VMq/Wc+eUngaxSc1MygAnk73D9Z6Mgh2p3w5+9m9
nsA9Q8Iu5u65kAJ7UDzd92l7wDOpH86s3qcEe1I/uQ9UvGXHPYvq/a14+yZ4
Ns2/L1ryVvAc6jeVubu+jueeS+erCOxzAZ4nYRn3vY/7wl4Uv8MGI3Xh+RKm
XJpf9MyW25vO932E1z54AdXzubU/XOCFND9iEpNk4UX0/BpbLAtsuH0kLP2H
fU04vJg+z6uJGwUvoXh+c7FstOZeSv1nHf8xA/al/A1OO74QXkb94RI9Twv2
o+extdB8NI57OfXTgWvPd8ErqH7q+x6zh1dKWHWx3fJOK25/in+ZpflleBV5
t0z3UDiArp+eUmUCr6b6SOsUv7fkDqR5ozF2TzocROfLtAr0goOp3mt6eKjD
a2hezj07rtyCO4Tq43yfQXFwKPW7v6v6JHgt1evI6fIdY7nXUX/s1f13CQ6j
/BpebguCw2n+R+n+MoYj6PNx037XmXOvp3nV6Nh5FN5A9TBcqcdceCPlIzFZ
Qw2OpO+Lm4bcG8MdRfkZpDh+O7yJ+j/2yywGb5Yw/WVpIe2juaNp/i7sdeAi
vIXO18M1NxDeSs/X4fp6KBwjYTIP1JTqRnHHSphVv+PWR+FtEiYKaVk9B95O
8zRULrM3vIPyI6l9XWbGHSdh6nc36W6Hd1K/TKv1YXA8vR+8kD3TPpJ7F+Wz
e1PLRTiBzrPioF0QvJvqI1Um0RjeQ/t+zIh3dabce6lfyvvbHYMT6X1B5m7q
XHgf5c/X8o8avJ/iu3/ZovsjuA/Q/DaceWcHnETPK+gcPQk+SPPjvv/JDhPu
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
     "]], {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{3, -100.87378807649006`},
  Method->{"MessagesHead" -> DiscretePlot},
  PlotRange->{{3, 5000}, {-100.87378807649006`, -59.84837888657253}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}}]], "Output",
 CellChangeTimes->{
  3.8665323364840107`*^9, 3.866532371741507*^9, 3.8665324188073473`*^9, 
   3.8734310431880493`*^9, {3.8734310810251217`*^9, 3.8734311015586157`*^9}, 
   3.873431251644608*^9, 3.87343133609433*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "@", "soundnessErrorQuery"}], ";"}], "\n", 
  RowBox[{"(*", "\n", 
   RowBox[{
    RowBox[{
    "Computes", " ", "the", " ", "soundness", " ", "error", " ", "of", " ", 
     "the", " ", "FRI", " ", "query", " ", "phase", " ", "for", " ", "rate", 
     " ", "`\[Rho]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"2", "^", 
       RowBox[{"-", "bitsRate`"}]}], " ", "and", "\n", "Johnson", " ", 
      "proximity", " ", "parameter", " ", "`m"}], " ", "\[GreaterEqual]", " ",
      "3`."}]}], "\n", "\n", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"soundnessErrorQuery", "[", 
    RowBox[{"bitsRate_", ",", "m_", ",", "numSamples_"}], "]"}], ":=", " ", 
   "\n", "\t", 
   RowBox[{
    RowBox[{"numSamples", " ", "*", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "bitsRate"}], "/", "2"}], " ", "+", " ", 
       RowBox[{"Log", "[", 
        RowBox[{"2", ",", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"2", "m"}], ")"}]}]}], ")"}]}], "]"}]}], ")"}]}], "//", 
    "N"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.86653195160083*^9, 3.8665320783645163`*^9}, {
   3.8665321716305523`*^9, 3.866532176573702*^9}, 3.866532215413279*^9, {
   3.866534200840535*^9, 3.8665342102812443`*^9}, {3.866534304932061*^9, 
   3.866534436657359*^9}, {3.866534476418228*^9, 3.866534643371564*^9}, {
   3.8665354599865093`*^9, 3.866535461011588*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"soundnessErrorQuery", "[", 
  RowBox[{"3", ",", " ", "10", ",", "90"}], "]"}]], "Input",
 CellChangeTimes->{{3.866534444105033*^9, 3.8665344621683683`*^9}}],

Cell[BoxData[
 RowBox[{"-", "128.66496048977416`"}]], "Output",
 CellChangeTimes->{
  3.866534462769476*^9, {3.866534630465889*^9, 3.866534644820195*^9}, 
   3.8665354627276773`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Number of samples", "Subsection",
 CellChangeTimes->{{3.866534714585775*^9, 3.866534719313325*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "@", "numSamples"}], ";"}], "\n", 
  RowBox[{"(*", " ", "\n", 
   RowBox[{
    RowBox[{
    "Given", " ", "a", " ", "security", " ", "level", " ", "`bitsSec`"}], ",",
     " ", 
    RowBox[{
     RowBox[{"rate", " ", "`\[Rho]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"2", "^", 
        RowBox[{"-", "bitsRate`"}]}], " ", "and", " ", "Johnson", " ", 
       "proximity", " ", "parameter", " ", "`m"}], " ", "\[GreaterEqual]", 
      " ", "3`"}]}], ",", "\n", 
    RowBox[{
    "computes", " ", "the", " ", "number", " ", "of", " ", "samples", " ", 
     "so", " ", "that", " ", "the", " ", "query", " ", "phase", " ", 
     "soundness", " ", "error", " ", "is", " ", "bounded", " ", "by", " ", 
     RowBox[{"`2", "^", 
      RowBox[{"-", 
       RowBox[{"bitsSec`", "."}]}]}]}]}], "\n", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "numSamples", "]"}], "=", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{"\"\<Max\>\"", " ", "\[Rule]", " ", 
      RowBox[{"10", "^", "7"}]}], "\n", "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"numSamples", "[", 
   RowBox[{"bitsSec_", ",", "bitsRate_", ",", "m_", ",", " ", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", 
     RowBox[{"s", ",", "\n", 
      RowBox[{"max", "=", 
       RowBox[{"OptionValue", "[", "\"\<Max\>\"", "]"}]}]}], "\n", "}"}], ",",
     "\n", "\t", 
    RowBox[{
     RowBox[{"s", "=", "1"}], ";", "\n", "\t", 
     RowBox[{"While", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"soundnessErrorQuery", "[", 
          RowBox[{"bitsRate", ",", "m", ",", "s"}], "]"}], " ", ">", " ", 
         RowBox[{"-", " ", "bitsSec"}]}], "\n", "\t\t", "&&", " ", 
        RowBox[{"s", " ", "\[LessEqual]", " ", "max"}]}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"s", "++"}], ";"}]}], "\n", "\t", "]"}], ";", "\t", "\n", 
     "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"soundnessErrorQuery", "[", 
         RowBox[{"bitsRate", ",", "m", ",", "s"}], "]"}], " ", ">", " ", 
        RowBox[{"-", "bitsSec"}]}], ",", "\n", "\t\t", 
       RowBox[{"s", "=", " ", "Infinity"}]}], "\n", "\t", "]"}], ";", "\n", 
     "\n", "s"}]}], "\n", "]"}]}]}], "Code",
 CellChangeTimes->{{3.853243137732882*^9, 3.8532431784290133`*^9}, {
   3.85324321270168*^9, 3.853243219284445*^9}, {3.853243255628603*^9, 
   3.853243274158916*^9}, {3.853244468133183*^9, 3.85324454213272*^9}, {
   3.8532448682490597`*^9, 3.8532448991991577`*^9}, {3.853333452206205*^9, 
   3.853333464225857*^9}, {3.853333514601412*^9, 3.853333515388324*^9}, {
   3.8533335614931707`*^9, 3.853333568603156*^9}, {3.853333605480125*^9, 
   3.853333606763983*^9}, {3.853337134200903*^9, 3.8533371442591047`*^9}, {
   3.853337174411669*^9, 3.853337204413007*^9}, {3.853343101153735*^9, 
   3.8533431325649567`*^9}, {3.853344096744383*^9, 3.853344125000944*^9}, {
   3.853344155490306*^9, 3.853344192967595*^9}, {3.853407630988832*^9, 
   3.8534076342175713`*^9}, {3.853921581571238*^9, 3.853921640696381*^9}, {
   3.853921672916299*^9, 3.853922016743063*^9}, {3.8539220473793707`*^9, 
   3.853922167675811*^9}, {3.853922207535059*^9, 3.853922468847474*^9}, {
   3.853922610143901*^9, 3.853922843429981*^9}, {3.853922969324885*^9, 
   3.8539230175719147`*^9}, {3.853923519477167*^9, 3.853923522364931*^9}, {
   3.853999688068676*^9, 3.853999760345105*^9}, {3.8540002591067257`*^9, 
   3.854000489601186*^9}, {3.854000602322049*^9, 3.8540006169290457`*^9}, {
   3.8540007101044703`*^9, 3.854000714715172*^9}, {3.854001064350595*^9, 
   3.854001067931107*^9}, 3.854001226906674*^9, {3.854079944699792*^9, 
   3.854080018539961*^9}, {3.854097663404332*^9, 3.8540976809858713`*^9}, {
   3.854097726531343*^9, 3.85409777647031*^9}, {3.8540978469013567`*^9, 
   3.8540979676771317`*^9}, {3.854098005707526*^9, 3.854098012565474*^9}, {
   3.85409808509718*^9, 3.854098146698866*^9}, {3.854098253999798*^9, 
   3.854098286713325*^9}, {3.854098350729252*^9, 3.854098354257781*^9}, {
   3.854098469243122*^9, 3.8540985128985863`*^9}, {3.864872080834118*^9, 
   3.86487210210023*^9}, {3.8665347403206787`*^9, 3.866534798201997*^9}, {
   3.866534828778846*^9, 3.866534857514823*^9}, {3.866534912826232*^9, 
   3.8665352916272306`*^9}, {3.8665355302283382`*^9, 3.866535539926063*^9}, {
   3.8665355810463552`*^9, 3.86653563036835*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "112"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "54"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"s", "=", 
  RowBox[{"numSamples", "[", 
   RowBox[{"bitsSec", ",", "bitsRate", ",", "m"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"soundnessErrorQuery", "[", 
    RowBox[{"bitsRate", ",", "m", ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"s", "-", "1"}], ",", "s"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.866534725873249*^9, 3.8665347274577427`*^9}, {
  3.866535324112772*^9, 3.866535359352*^9}, {3.866535667714328*^9, 
  3.866535756810302*^9}}],

Cell[BoxData["76"], "Output",
 CellChangeTimes->{
  3.866535359687619*^9, 3.866535473322501*^9, 3.866535509595014*^9, 
   3.8665356207315598`*^9, {3.866535742326621*^9, 3.866535757100211*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "111.50273830399067`"}], ",", 
   RowBox[{"-", "112.98944148137721`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.866535359687619*^9, 3.866535473322501*^9, 3.866535509595014*^9, 
   3.8665356207315598`*^9, {3.866535742326621*^9, 3.866535757101182*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Proximity parameter to Johnson bound", "Subsection",
 CellChangeTimes->{{3.854103836857011*^9, 3.8541038502653418`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "@", "JohnsonProximity"}], ";"}], "\n", 
  RowBox[{"(*", "\n", 
   RowBox[{
    RowBox[{
    "Johnson", " ", "bound", " ", "proximity", " ", "`m`", " ", "for", " ", 
     "the", " ", "batched", " ", 
     RowBox[{"FRI", ".", "\n", "Given"}], " ", "a", " ", "security", " ", 
     "level", " ", "`bitsSec`"}], ",", " ", 
    RowBox[{
    "the", " ", "size", " ", "of", " ", "the", " ", "sampling", " ", "domain",
      " ", "`bitsDomain`"}], ",", "\n", 
    RowBox[{"the", " ", 
     RowBox[{"(", "logarithmic", ")"}], " ", "code", " ", "rate", " ", 
     "`bitsRate`"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
      "computes", " ", "the", " ", "maximum", " ", "proximity", " ", 
       "parameter", " ", "`m`", " ", "in", " ", "\n", "Lemma", " ", "8.2", 
       " ", 
       RowBox[{"(", 
        RowBox[{"adapted", " ", "to", " ", "algebraic", " ", "batching"}], 
        ")"}], " ", "so", " ", "that", " ", "the", " ", "soundness", " ", 
       "error", " ", "in", " ", "the", " ", "commitment", " ", "phase", " ", 
       "\n", "of", " ", "batched", " ", "FRI", " ", "is", " ", "at", " ", 
       "most", " ", 
       RowBox[{"`2", "^", 
        RowBox[{"-", 
         RowBox[{"bitsSec`", ".", "  ", "\n", "The"}]}]}], " ", "proximity", 
       " ", "parameter", " ", "`m`", " ", "describes", " ", "the", " ", 
       "closeness", " ", "to", " ", "the", " ", "Johnson", " ", "list", " ", 
       "decoding", " ", "bound", " ", "`1"}], "-", 
      RowBox[{
       RowBox[{"\[Sqrt]", "\[Rho]`"}], " ", "via", " ", "\n", "``", "\n", 
       "\t", "\[Delta]"}]}], " ", "=", " ", 
     RowBox[{"1", " ", "-", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"1", "/", "2"}], "m"}]}], ")"}], 
       RowBox[{"\[Sqrt]", "\[Rho]"}], "\n", "``"}]}]}]}], "\n", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "JohnsonProximity", "]"}], "=", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{"\"\<Max\>\"", " ", "\[Rule]", " ", 
      RowBox[{"10", "^", "7"}]}], "\n", "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"JohnsonProximity", "[", "\n", "\t", 
   RowBox[{
   "bitsSec_", ",", "bitsField_", ",", " ", "bitsDomain_", ",", "bitsRate_", 
    ",", 
    RowBox[{"arities_:", "List"}], ",", " ", "numPolys_", ",", "  ", "\n", 
    "\t", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "\n", "]"}], ":=", " ", 
  RowBox[{"Module", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", 
     RowBox[{
      RowBox[{"rho", " ", "=", " ", 
       RowBox[{"2", "^", 
        RowBox[{"(", 
         RowBox[{"-", "bitsRate"}], ")"}]}]}], ",", "\n", 
      RowBox[{"domain", " ", "=", " ", 
       RowBox[{"2", "^", "bitsDomain"}]}], ",", "\n", 
      RowBox[{"fieldSize", " ", "=", " ", 
       RowBox[{"2", "^", "bitsField"}]}], ",", "\n", 
      RowBox[{"maxM", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<Max\>\"", "]"}]}], ",", "\n", "m", 
      ",", " ", "sol"}], "\n", "}"}], ",", "\n", "\t", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "the", " ", "soundness", " ", "error", " ", "for", " ", "the", " ", 
       "commitment", " ", "phase", " ", "of", " ", "the", " ", "batch", " ", 
       "FRI", " ", "argument"}], ",", " ", "\n", "\t", 
      RowBox[{"using", " ", "algebraic", " ", "batching"}]}], "\n", "\t", 
     "*)"}], "\n", "\t", 
    RowBox[{
     RowBox[{"m", "=", "3"}], ";", "\n", "\t", 
     RowBox[{"sol", "=", "3"}], ";", "\n", "\t", 
     RowBox[{"While", "[", " ", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"soundnessErrorCommit", "[", 
          RowBox[{
          "bitsField", ",", "bitsDomain", ",", "bitsRate", ",", "arities", 
           ",", "numPolys", ",", "m"}], "]"}], " ", "\[LessEqual]", "  ", 
         RowBox[{"-", "bitsSec"}]}], "\n", "\t\t", "&&", " ", 
        RowBox[{"m", "<", "maxM"}]}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"sol", " ", "=", " ", "m"}], ";", "\n", "\t\t", 
        RowBox[{"m", "++"}]}]}], "\n", "\t", "]"}], ";", "\n", "\t", "\n", 
     "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"soundnessErrorCommit", "[", 
         RowBox[{
         "bitsField", ",", "bitsDomain", ",", "bitsRate", ",", "arities", ",",
           "numPolys", ",", " ", "sol"}], "]"}], " ", ">", " ", 
        RowBox[{"-", "bitsSec"}]}], ",", "\n", "\t\t", 
       RowBox[{"sol", " ", "=", " ", 
        RowBox[{"-", "Infinity"}]}]}], "\n", "\t", "]"}], ";", "\n", "\n", 
     "\t", "sol"}]}], "\n", "]"}]}]}], "Code",
 CellChangeTimes->{{3.8539128111142263`*^9, 3.853913364589664*^9}, {
   3.853913526175304*^9, 3.853913530479018*^9}, {3.8539142008988237`*^9, 
   3.8539143331352587`*^9}, {3.8539144132202883`*^9, 3.853914453051949*^9}, {
   3.853914562636045*^9, 3.853914825163124*^9}, {3.853914925284952*^9, 
   3.853914926356394*^9}, {3.8539150129900093`*^9, 3.853915014548579*^9}, {
   3.853915160476446*^9, 3.8539152660247927`*^9}, {3.853919944438362*^9, 
   3.853920112096006*^9}, {3.853920199415875*^9, 3.853920218033729*^9}, {
   3.853920268684062*^9, 3.853920278774845*^9}, {3.853920334660555*^9, 
   3.853920376779641*^9}, {3.8539205065336037`*^9, 3.8539206068466682`*^9}, {
   3.853920646410966*^9, 3.85392064744189*^9}, {3.853920712738912*^9, 
   3.853920717168158*^9}, {3.853920762790694*^9, 3.853920820668339*^9}, {
   3.853920879064747*^9, 3.853921050056381*^9}, {3.853921145299128*^9, 
   3.853921149427145*^9}, 3.8539212522850313`*^9, {3.853921282744232*^9, 
   3.853921431898622*^9}, {3.853996327400897*^9, 3.853996349470284*^9}, {
   3.8539964465050583`*^9, 3.853996449563979*^9}, 3.864872402923882*^9, {
   3.864872743061431*^9, 3.864872752871071*^9}, {3.8665256636931562`*^9, 
   3.866525665196931*^9}, {3.8665257346437483`*^9, 3.8665257487080297`*^9}, {
   3.866531206278874*^9, 3.866531503654043*^9}, {3.866531537031228*^9, 
   3.866531596571477*^9}, {3.8665316292838163`*^9, 3.866531744885354*^9}, {
   3.866531852168386*^9, 3.866531856792614*^9}, {3.866531929848448*^9, 
   3.866531930096786*^9}, {3.866532255549745*^9, 3.866532292715907*^9}, {
   3.86653247415795*^9, 3.8665325234520617`*^9}, {3.866532667576709*^9, 
   3.866532682632989*^9}, {3.8665327573749943`*^9, 3.8665328905371943`*^9}, {
   3.866532920616667*^9, 3.86653300351733*^9}, {3.8665330687525597`*^9, 
   3.866533071999447*^9}, {3.866533164293645*^9, 3.866533221260517*^9}, {
   3.8665332808421392`*^9, 3.866533329004423*^9}, {3.8665335414637337`*^9, 
   3.866533544303381*^9}, {3.86653424427236*^9, 3.866534249447021*^9}, {
   3.866534667952532*^9, 3.866534685751088*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "67"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsField", " ", "=", " ", 
   RowBox[{"2", "*", "64"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsDomain", "=", " ", 
   RowBox[{"15", "+", "bitsRate"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", "300"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"m", "=", 
  RowBox[{"JohnsonProximity", "[", 
   RowBox[{
   "bitsSec", ",", "bitsField", ",", "bitsDomain", ",", "bitsRate", ",", 
    "arities", ",", "numPolys"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"soundnessErrorCommit", "[", 
    RowBox[{
    "bitsField", ",", "bitsDomain", ",", "bitsRate", ",", "arities", ",", 
     "numPolys", ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"m", ",", 
    RowBox[{"m", "+", "1"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"s", " ", "=", 
  RowBox[{"numSamples", "[", 
   RowBox[{"bitsSec", ",", "bitsRate", ",", "m"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"soundnessErrorQuery", "[", 
    RowBox[{"bitsRate", ",", "m", ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"s", "-", "1"}], ",", "s"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.853914840673497*^9, 3.853914979874262*^9}, {
   3.8539150320578423`*^9, 3.853915033532813*^9}, 3.853920078857003*^9, {
   3.853920138433316*^9, 3.853920151480822*^9}, {3.85392020561826*^9, 
   3.853920206527965*^9}, 3.853920240666725*^9, {3.853920591995137*^9, 
   3.85392059234592*^9}, {3.8539209396616096`*^9, 3.853920940053832*^9}, {
   3.853920970342388*^9, 3.8539209759125767`*^9}, {3.853921064806788*^9, 
   3.8539211200207777`*^9}, {3.853921165911811*^9, 3.853921241535307*^9}, {
   3.853922481595243*^9, 3.8539224818907948`*^9}, {3.853924712531405*^9, 
   3.8539248343084927`*^9}, {3.853996364952797*^9, 3.85399636511019*^9}, {
   3.8665317783126793`*^9, 3.86653184484166*^9}, {3.866531882123588*^9, 
   3.866531917161026*^9}, {3.86653208809945*^9, 3.866532125484486*^9}, {
   3.866532190957498*^9, 3.866532198941141*^9}, {3.866533018013137*^9, 
   3.8665330557093353`*^9}, {3.866533097630145*^9, 3.866533120126245*^9}, {
   3.866533235743845*^9, 3.866533235919086*^9}, {3.866533351928852*^9, 
   3.8665333765011578`*^9}, {3.866533418106451*^9, 3.866533514474988*^9}, {
   3.8665336499233723`*^9, 3.866533667827919*^9}, 3.8665342566201353`*^9, {
   3.866541742420786*^9, 3.866541744058943*^9}, {3.87343138372128*^9, 
   3.873431435896985*^9}, {3.873431484205874*^9, 3.873431508142907*^9}, {
   3.873431539286503*^9, 3.873431542592196*^9}}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{
  3.853922541088722*^9, {3.853924714089088*^9, 3.853924834631562*^9}, 
   3.853992352821918*^9, {3.853996358125792*^9, 3.853996365590733*^9}, 
   3.853996457524887*^9, 3.86487188773027*^9, 3.8665317658368597`*^9, {
   3.866531817438426*^9, 3.866531933868507*^9}, {3.866532103248619*^9, 
   3.866532126148254*^9}, {3.866532186809866*^9, 3.866532199437954*^9}, 
   3.8665329023000803`*^9, {3.8665329837104607`*^9, 3.866533120869697*^9}, {
   3.866533227751989*^9, 3.86653323619937*^9}, {3.866533333748081*^9, 
   3.8665333769273*^9}, {3.866533418918993*^9, 3.86653351594842*^9}, 
   3.866533548746573*^9, {3.866533654709194*^9, 3.86653366821566*^9}, 
   3.866534257106785*^9, 3.866541746136635*^9, 3.873431219612486*^9, {
   3.8734313751182833`*^9, 3.873431436522455*^9}, {3.873431535282131*^9, 
   3.8734315430194883`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "67.62210335255807`"}], ",", 
   RowBox[{"-", "65.0841127970597`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.853922541088722*^9, {3.853924714089088*^9, 3.853924834631562*^9}, 
   3.853992352821918*^9, {3.853996358125792*^9, 3.853996365590733*^9}, 
   3.853996457524887*^9, 3.86487188773027*^9, 3.8665317658368597`*^9, {
   3.866531817438426*^9, 3.866531933868507*^9}, {3.866532103248619*^9, 
   3.866532126148254*^9}, {3.866532186809866*^9, 3.866532199437954*^9}, 
   3.8665329023000803`*^9, {3.8665329837104607`*^9, 3.866533120869697*^9}, {
   3.866533227751989*^9, 3.86653323619937*^9}, {3.866533333748081*^9, 
   3.8665333769273*^9}, {3.866533418918993*^9, 3.86653351594842*^9}, 
   3.866533548746573*^9, {3.866533654709194*^9, 3.86653366821566*^9}, 
   3.866534257106785*^9, 3.866541746136635*^9, 3.873431219612486*^9, {
   3.8734313751182833`*^9, 3.873431436522455*^9}, {3.873431535282131*^9, 
   3.873431543023609*^9}}],

Cell[BoxData["53"], "Output",
 CellChangeTimes->{
  3.853922541088722*^9, {3.853924714089088*^9, 3.853924834631562*^9}, 
   3.853992352821918*^9, {3.853996358125792*^9, 3.853996365590733*^9}, 
   3.853996457524887*^9, 3.86487188773027*^9, 3.8665317658368597`*^9, {
   3.866531817438426*^9, 3.866531933868507*^9}, {3.866532103248619*^9, 
   3.866532126148254*^9}, {3.866532186809866*^9, 3.866532199437954*^9}, 
   3.8665329023000803`*^9, {3.8665329837104607`*^9, 3.866533120869697*^9}, {
   3.866533227751989*^9, 3.86653323619937*^9}, {3.866533333748081*^9, 
   3.8665333769273*^9}, {3.866533418918993*^9, 3.86653351594842*^9}, 
   3.866533548746573*^9, {3.866533654709194*^9, 3.86653366821566*^9}, 
   3.866534257106785*^9, 3.866541746136635*^9, 3.873431219612486*^9, {
   3.8734313751182833`*^9, 3.873431436522455*^9}, {3.873431535282131*^9, 
   3.873431543027532*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "66.4355940905047`"}], ",", 
   RowBox[{"-", "67.71320166916826`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.853922541088722*^9, {3.853924714089088*^9, 3.853924834631562*^9}, 
   3.853992352821918*^9, {3.853996358125792*^9, 3.853996365590733*^9}, 
   3.853996457524887*^9, 3.86487188773027*^9, 3.8665317658368597`*^9, {
   3.866531817438426*^9, 3.866531933868507*^9}, {3.866532103248619*^9, 
   3.866532126148254*^9}, {3.866532186809866*^9, 3.866532199437954*^9}, 
   3.8665329023000803`*^9, {3.8665329837104607`*^9, 3.866533120869697*^9}, {
   3.866533227751989*^9, 3.86653323619937*^9}, {3.866533333748081*^9, 
   3.8665333769273*^9}, {3.866533418918993*^9, 3.86653351594842*^9}, 
   3.866533548746573*^9, {3.866533654709194*^9, 3.86653366821566*^9}, 
   3.866534257106785*^9, 3.866541746136635*^9, 3.873431219612486*^9, {
   3.8734313751182833`*^9, 3.873431436522455*^9}, {3.873431535282131*^9, 
   3.873431543030847*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "72"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsField", " ", "=", " ", 
   RowBox[{"2", "*", "64"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsDomain", "=", " ", 
   RowBox[{"15", "+", "bitsRate"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", "300"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"m", "=", 
  RowBox[{"JohnsonProximity", "[", 
   RowBox[{
   "bitsSec", ",", "bitsField", ",", "bitsDomain", ",", "bitsRate", ",", 
    "arities", ",", "numPolys"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"soundnessErrorCommit", "[", 
    RowBox[{
    "bitsField", ",", "bitsDomain", ",", "bitsRate", ",", "arities", ",", 
     "numPolys", ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"m", ",", 
    RowBox[{"m", "+", "1"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"s", " ", "=", 
  RowBox[{"numSamples", "[", 
   RowBox[{"bitsSec", ",", "bitsRate", ",", "m"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"soundnessErrorQuery", "[", 
    RowBox[{"bitsRate", ",", "m", ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"s", "-", "1"}], ",", "s"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.853914840673497*^9, 3.853914979874262*^9}, {
   3.8539150320578423`*^9, 3.853915033532813*^9}, 3.853920078857003*^9, {
   3.853920138433316*^9, 3.853920151480822*^9}, {3.85392020561826*^9, 
   3.853920206527965*^9}, 3.853920240666725*^9, {3.853920591995137*^9, 
   3.85392059234592*^9}, {3.8539209396616096`*^9, 3.853920940053832*^9}, {
   3.853920970342388*^9, 3.8539209759125767`*^9}, {3.853921064806788*^9, 
   3.8539211200207777`*^9}, {3.853921165911811*^9, 3.853921241535307*^9}, {
   3.853922481595243*^9, 3.8539224818907948`*^9}, {3.853924712531405*^9, 
   3.8539248343084927`*^9}, {3.853996364952797*^9, 3.85399636511019*^9}, {
   3.8665317783126793`*^9, 3.86653184484166*^9}, {3.866531882123588*^9, 
   3.866531917161026*^9}, {3.86653208809945*^9, 3.866532125484486*^9}, {
   3.866532190957498*^9, 3.866532198941141*^9}, {3.866533018013137*^9, 
   3.8665330557093353`*^9}, {3.866533097630145*^9, 3.866533120126245*^9}, {
   3.866533235743845*^9, 3.866533235919086*^9}, {3.866533351928852*^9, 
   3.8665333765011578`*^9}, {3.866533418106451*^9, 3.866533514474988*^9}, {
   3.866533561938814*^9, 3.866533586568266*^9}, {3.866533662546893*^9, 
   3.866533663585894*^9}, {3.866534262857369*^9, 3.866534263078171*^9}, {
   3.866535973352631*^9, 3.866536013776269*^9}, {3.866536073529648*^9, 
   3.866536116520658*^9}, {3.866536432306612*^9, 3.866536494460368*^9}}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{
  3.853922541088722*^9, {3.853924714089088*^9, 3.853924834631562*^9}, 
   3.853992352821918*^9, {3.853996358125792*^9, 3.853996365590733*^9}, 
   3.853996457524887*^9, 3.86487188773027*^9, 3.8665317658368597`*^9, {
   3.866531817438426*^9, 3.866531933868507*^9}, {3.866532103248619*^9, 
   3.866532126148254*^9}, {3.866532186809866*^9, 3.866532199437954*^9}, 
   3.8665329023000803`*^9, {3.8665329837104607`*^9, 3.866533120869697*^9}, {
   3.866533227751989*^9, 3.86653323619937*^9}, {3.866533333748081*^9, 
   3.8665333769273*^9}, {3.866533418918993*^9, 3.86653351594842*^9}, {
   3.866533548746573*^9, 3.866533587116596*^9}, 3.866533664047838*^9, 
   3.8665342635082693`*^9, {3.866535975585615*^9, 3.8665360147118797`*^9}, {
   3.86653607463708*^9, 3.866536116852367*^9}, 3.866536456838888*^9, 
   3.866536494799035*^9, 3.873431223675667*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "72.34851552688534`"}], ",", 
   RowBox[{"-", "69.81052498576153`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.853922541088722*^9, {3.853924714089088*^9, 3.853924834631562*^9}, 
   3.853992352821918*^9, {3.853996358125792*^9, 3.853996365590733*^9}, 
   3.853996457524887*^9, 3.86487188773027*^9, 3.8665317658368597`*^9, {
   3.866531817438426*^9, 3.866531933868507*^9}, {3.866532103248619*^9, 
   3.866532126148254*^9}, {3.866532186809866*^9, 3.866532199437954*^9}, 
   3.8665329023000803`*^9, {3.8665329837104607`*^9, 3.866533120869697*^9}, {
   3.866533227751989*^9, 3.86653323619937*^9}, {3.866533333748081*^9, 
   3.8665333769273*^9}, {3.866533418918993*^9, 3.86653351594842*^9}, {
   3.866533548746573*^9, 3.866533587116596*^9}, 3.866533664047838*^9, 
   3.8665342635082693`*^9, {3.866535975585615*^9, 3.8665360147118797`*^9}, {
   3.86653607463708*^9, 3.866536116852367*^9}, 3.866536456838888*^9, 
   3.866536494799035*^9, 3.873431223679367*^9}],

Cell[BoxData["41"], "Output",
 CellChangeTimes->{
  3.853922541088722*^9, {3.853924714089088*^9, 3.853924834631562*^9}, 
   3.853992352821918*^9, {3.853996358125792*^9, 3.853996365590733*^9}, 
   3.853996457524887*^9, 3.86487188773027*^9, 3.8665317658368597`*^9, {
   3.866531817438426*^9, 3.866531933868507*^9}, {3.866532103248619*^9, 
   3.866532126148254*^9}, {3.866532186809866*^9, 3.866532199437954*^9}, 
   3.8665329023000803`*^9, {3.8665329837104607`*^9, 3.866533120869697*^9}, {
   3.866533227751989*^9, 3.86653323619937*^9}, {3.866533333748081*^9, 
   3.8665333769273*^9}, {3.866533418918993*^9, 3.86653351594842*^9}, {
   3.866533548746573*^9, 3.866533587116596*^9}, 3.866533664047838*^9, 
   3.8665342635082693`*^9, {3.866535975585615*^9, 3.8665360147118797`*^9}, {
   3.86653607463708*^9, 3.866536116852367*^9}, 3.866536456838888*^9, 
   3.866536494799035*^9, 3.873431223683415*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "71.10430314654208`"}], ",", 
   RowBox[{"-", "72.88191072520563`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.853922541088722*^9, {3.853924714089088*^9, 3.853924834631562*^9}, 
   3.853992352821918*^9, {3.853996358125792*^9, 3.853996365590733*^9}, 
   3.853996457524887*^9, 3.86487188773027*^9, 3.8665317658368597`*^9, {
   3.866531817438426*^9, 3.866531933868507*^9}, {3.866532103248619*^9, 
   3.866532126148254*^9}, {3.866532186809866*^9, 3.866532199437954*^9}, 
   3.8665329023000803`*^9, {3.8665329837104607`*^9, 3.866533120869697*^9}, {
   3.866533227751989*^9, 3.86653323619937*^9}, {3.866533333748081*^9, 
   3.8665333769273*^9}, {3.866533418918993*^9, 3.86653351594842*^9}, {
   3.866533548746573*^9, 3.866533587116596*^9}, 3.866533664047838*^9, 
   3.8665342635082693`*^9, {3.866535975585615*^9, 3.8665360147118797`*^9}, {
   3.86653607463708*^9, 3.866536116852367*^9}, 3.866536456838888*^9, 
   3.866536494799035*^9, 3.8734312236869793`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "112"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsField", " ", "=", " ", 
   RowBox[{"3", "*", "64"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsDomain", "=", " ", 
   RowBox[{"15", "+", "bitsRate"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", "300"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"m", "=", 
  RowBox[{"JohnsonProximity", "[", 
   RowBox[{
   "bitsSec", ",", "bitsField", ",", "bitsDomain", ",", "bitsRate", ",", 
    "arities", ",", "numPolys"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"soundnessErrorCommit", "[", 
    RowBox[{
    "bitsField", ",", "bitsDomain", ",", "bitsRate", ",", "arities", ",", 
     "numPolys", ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"m", ",", 
    RowBox[{"m", "+", "1"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"s", " ", "=", 
  RowBox[{"numSamples", "[", 
   RowBox[{"bitsSec", ",", "bitsRate", ",", "m"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"soundnessErrorQuery", "[", 
    RowBox[{"bitsRate", ",", "m", ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"s", "-", "1"}], ",", "s"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.853914840673497*^9, 3.853914979874262*^9}, {
   3.8539150320578423`*^9, 3.853915033532813*^9}, 3.853920078857003*^9, {
   3.853920138433316*^9, 3.853920151480822*^9}, {3.85392020561826*^9, 
   3.853920206527965*^9}, 3.853920240666725*^9, {3.853920591995137*^9, 
   3.85392059234592*^9}, {3.8539209396616096`*^9, 3.853920940053832*^9}, {
   3.853920970342388*^9, 3.8539209759125767`*^9}, {3.853921064806788*^9, 
   3.8539211200207777`*^9}, {3.853921165911811*^9, 3.853921241535307*^9}, {
   3.853922481595243*^9, 3.8539224818907948`*^9}, {3.853924712531405*^9, 
   3.8539248343084927`*^9}, {3.853996364952797*^9, 3.85399636511019*^9}, {
   3.8665317783126793`*^9, 3.86653184484166*^9}, {3.866531882123588*^9, 
   3.866531917161026*^9}, {3.86653208809945*^9, 3.866532125484486*^9}, {
   3.866532190957498*^9, 3.866532198941141*^9}, {3.866533018013137*^9, 
   3.8665330557093353`*^9}, {3.866533097630145*^9, 3.866533120126245*^9}, {
   3.866533235743845*^9, 3.866533235919086*^9}, {3.866533351928852*^9, 
   3.8665333765011578`*^9}, {3.866533418106451*^9, 3.866533514474988*^9}, {
   3.866533561938814*^9, 3.866533586568266*^9}, {3.866533662546893*^9, 
   3.866533663585894*^9}, {3.866534262857369*^9, 3.866534263078171*^9}, {
   3.866535973352631*^9, 3.866536013776269*^9}, {3.866536073529648*^9, 
   3.866536116520658*^9}, {3.8665367559257183`*^9, 3.866536774806704*^9}, {
   3.86653699600354*^9, 3.866536996936613*^9}}],

Cell[BoxData["38"], "Output",
 CellChangeTimes->{
  3.853922541088722*^9, {3.853924714089088*^9, 3.853924834631562*^9}, 
   3.853992352821918*^9, {3.853996358125792*^9, 3.853996365590733*^9}, 
   3.853996457524887*^9, 3.86487188773027*^9, 3.8665317658368597`*^9, {
   3.866531817438426*^9, 3.866531933868507*^9}, {3.866532103248619*^9, 
   3.866532126148254*^9}, {3.866532186809866*^9, 3.866532199437954*^9}, 
   3.8665329023000803`*^9, {3.8665329837104607`*^9, 3.866533120869697*^9}, {
   3.866533227751989*^9, 3.86653323619937*^9}, {3.866533333748081*^9, 
   3.8665333769273*^9}, {3.866533418918993*^9, 3.86653351594842*^9}, {
   3.866533548746573*^9, 3.866533587116596*^9}, 3.866533664047838*^9, 
   3.8665342635082693`*^9, {3.866535975585615*^9, 3.8665360147118797`*^9}, {
   3.86653607463708*^9, 3.866536116852367*^9}, 3.866536775521379*^9, 
   3.866536998724785*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "112.13249421513568`"}], ",", 
   RowBox[{"-", "111.87353476276027`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.853922541088722*^9, {3.853924714089088*^9, 3.853924834631562*^9}, 
   3.853992352821918*^9, {3.853996358125792*^9, 3.853996365590733*^9}, 
   3.853996457524887*^9, 3.86487188773027*^9, 3.8665317658368597`*^9, {
   3.866531817438426*^9, 3.866531933868507*^9}, {3.866532103248619*^9, 
   3.866532126148254*^9}, {3.866532186809866*^9, 3.866532199437954*^9}, 
   3.8665329023000803`*^9, {3.8665329837104607`*^9, 3.866533120869697*^9}, {
   3.866533227751989*^9, 3.86653323619937*^9}, {3.866533333748081*^9, 
   3.8665333769273*^9}, {3.866533418918993*^9, 3.86653351594842*^9}, {
   3.866533548746573*^9, 3.866533587116596*^9}, 3.866533664047838*^9, 
   3.8665342635082693`*^9, {3.866535975585615*^9, 3.8665360147118797`*^9}, {
   3.86653607463708*^9, 3.866536116852367*^9}, 3.866536775521379*^9, 
   3.866536998725465*^9}],

Cell[BoxData["57"], "Output",
 CellChangeTimes->{
  3.853922541088722*^9, {3.853924714089088*^9, 3.853924834631562*^9}, 
   3.853992352821918*^9, {3.853996358125792*^9, 3.853996365590733*^9}, 
   3.853996457524887*^9, 3.86487188773027*^9, 3.8665317658368597`*^9, {
   3.866531817438426*^9, 3.866531933868507*^9}, {3.866532103248619*^9, 
   3.866532126148254*^9}, {3.866532186809866*^9, 3.866532199437954*^9}, 
   3.8665329023000803`*^9, {3.8665329837104607`*^9, 3.866533120869697*^9}, {
   3.866533227751989*^9, 3.86653323619937*^9}, {3.866533333748081*^9, 
   3.8665333769273*^9}, {3.866533418918993*^9, 3.86653351594842*^9}, {
   3.866533548746573*^9, 3.866533587116596*^9}, 3.866533664047838*^9, 
   3.8665342635082693`*^9, {3.866535975585615*^9, 3.8665360147118797`*^9}, {
   3.86653607463708*^9, 3.866536116852367*^9}, 3.866536775521379*^9, 
   3.866536998725938*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "110.94389447392632`"}], ",", 
   RowBox[{"-", "112.925035446675`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.853922541088722*^9, {3.853924714089088*^9, 3.853924834631562*^9}, 
   3.853992352821918*^9, {3.853996358125792*^9, 3.853996365590733*^9}, 
   3.853996457524887*^9, 3.86487188773027*^9, 3.8665317658368597`*^9, {
   3.866531817438426*^9, 3.866531933868507*^9}, {3.866532103248619*^9, 
   3.866532126148254*^9}, {3.866532186809866*^9, 3.866532199437954*^9}, 
   3.8665329023000803`*^9, {3.8665329837104607`*^9, 3.866533120869697*^9}, {
   3.866533227751989*^9, 3.86653323619937*^9}, {3.866533333748081*^9, 
   3.8665333769273*^9}, {3.866533418918993*^9, 3.86653351594842*^9}, {
   3.866533548746573*^9, 3.866533587116596*^9}, 3.866533664047838*^9, 
   3.8665342635082693`*^9, {3.866535975585615*^9, 3.8665360147118797`*^9}, {
   3.86653607463708*^9, 3.866536116852367*^9}, 3.866536775521379*^9, 
   3.866536998726392*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "128"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsField", " ", "=", " ", 
   RowBox[{"3", "*", "64"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsDomain", "=", " ", 
   RowBox[{"15", "+", "bitsRate"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", "300"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"m", "=", 
  RowBox[{"JohnsonProximity", "[", 
   RowBox[{
   "bitsSec", ",", "bitsField", ",", "bitsDomain", ",", "bitsRate", ",", 
    "arities", ",", "numPolys"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"soundnessErrorCommit", "[", 
    RowBox[{
    "bitsField", ",", "bitsDomain", ",", "bitsRate", ",", "arities", ",", 
     "numPolys", ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"m", ",", 
    RowBox[{"m", "+", "1"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"s", " ", "=", 
  RowBox[{"numSamples", "[", 
   RowBox[{"bitsSec", ",", "bitsRate", ",", "m"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"soundnessErrorQuery", "[", 
    RowBox[{"bitsRate", ",", "m", ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"s", "-", "1"}], ",", "s"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.853914840673497*^9, 3.853914979874262*^9}, {
   3.8539150320578423`*^9, 3.853915033532813*^9}, 3.853920078857003*^9, {
   3.853920138433316*^9, 3.853920151480822*^9}, {3.85392020561826*^9, 
   3.853920206527965*^9}, 3.853920240666725*^9, {3.853920591995137*^9, 
   3.85392059234592*^9}, {3.8539209396616096`*^9, 3.853920940053832*^9}, {
   3.853920970342388*^9, 3.8539209759125767`*^9}, {3.853921064806788*^9, 
   3.8539211200207777`*^9}, {3.853921165911811*^9, 3.853921241535307*^9}, {
   3.853922481595243*^9, 3.8539224818907948`*^9}, {3.853924712531405*^9, 
   3.8539248343084927`*^9}, {3.853996364952797*^9, 3.85399636511019*^9}, {
   3.8665317783126793`*^9, 3.86653184484166*^9}, {3.866531882123588*^9, 
   3.866531917161026*^9}, {3.86653208809945*^9, 3.866532125484486*^9}, {
   3.866532190957498*^9, 3.866532198941141*^9}, {3.866533018013137*^9, 
   3.8665330557093353`*^9}, {3.866533097630145*^9, 3.866533120126245*^9}, {
   3.866533235743845*^9, 3.866533235919086*^9}, {3.866533351928852*^9, 
   3.8665333765011578`*^9}, {3.866533418106451*^9, 3.866533514474988*^9}, {
   3.866533561938814*^9, 3.866533586568266*^9}, {3.866533662546893*^9, 
   3.866533663585894*^9}, {3.866534262857369*^9, 3.866534263078171*^9}, {
   3.866535973352631*^9, 3.866536013776269*^9}, {3.866536073529648*^9, 
   3.866536116520658*^9}, {3.8665367559257183`*^9, 3.866536774806704*^9}}],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{
  3.853922541088722*^9, {3.853924714089088*^9, 3.853924834631562*^9}, 
   3.853992352821918*^9, {3.853996358125792*^9, 3.853996365590733*^9}, 
   3.853996457524887*^9, 3.86487188773027*^9, 3.8665317658368597`*^9, {
   3.866531817438426*^9, 3.866531933868507*^9}, {3.866532103248619*^9, 
   3.866532126148254*^9}, {3.866532186809866*^9, 3.866532199437954*^9}, 
   3.8665329023000803`*^9, {3.8665329837104607`*^9, 3.866533120869697*^9}, {
   3.866533227751989*^9, 3.86653323619937*^9}, {3.866533333748081*^9, 
   3.8665333769273*^9}, {3.866533418918993*^9, 3.86653351594842*^9}, {
   3.866533548746573*^9, 3.866533587116596*^9}, 3.866533664047838*^9, 
   3.8665342635082693`*^9, {3.866535975585615*^9, 3.8665360147118797`*^9}, {
   3.86653607463708*^9, 3.866536116852367*^9}, 3.866536775521379*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "128.6517658305471`"}], ",", 
   RowBox[{"-", "127.38776011115642`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.853922541088722*^9, {3.853924714089088*^9, 3.853924834631562*^9}, 
   3.853992352821918*^9, {3.853996358125792*^9, 3.853996365590733*^9}, 
   3.853996457524887*^9, 3.86487188773027*^9, 3.8665317658368597`*^9, {
   3.866531817438426*^9, 3.866531933868507*^9}, {3.866532103248619*^9, 
   3.866532126148254*^9}, {3.866532186809866*^9, 3.866532199437954*^9}, 
   3.8665329023000803`*^9, {3.8665329837104607`*^9, 3.866533120869697*^9}, {
   3.866533227751989*^9, 3.86653323619937*^9}, {3.866533333748081*^9, 
   3.8665333769273*^9}, {3.866533418918993*^9, 3.86653351594842*^9}, {
   3.866533548746573*^9, 3.866533587116596*^9}, 3.866533664047838*^9, 
   3.8665342635082693`*^9, {3.866535975585615*^9, 3.8665360147118797`*^9}, {
   3.86653607463708*^9, 3.866536116852367*^9}, 3.86653677552203*^9}],

Cell[BoxData["68"], "Output",
 CellChangeTimes->{
  3.853922541088722*^9, {3.853924714089088*^9, 3.853924834631562*^9}, 
   3.853992352821918*^9, {3.853996358125792*^9, 3.853996365590733*^9}, 
   3.853996457524887*^9, 3.86487188773027*^9, 3.8665317658368597`*^9, {
   3.866531817438426*^9, 3.866531933868507*^9}, {3.866532103248619*^9, 
   3.866532126148254*^9}, {3.866532186809866*^9, 3.866532199437954*^9}, 
   3.8665329023000803`*^9, {3.8665329837104607`*^9, 3.866533120869697*^9}, {
   3.866533227751989*^9, 3.86653323619937*^9}, {3.866533333748081*^9, 
   3.8665333769273*^9}, {3.866533418918993*^9, 3.86653351594842*^9}, {
   3.866533548746573*^9, 3.866533587116596*^9}, 3.866533664047838*^9, 
   3.8665342635082693`*^9, {3.866535975585615*^9, 3.8665360147118797`*^9}, {
   3.86653607463708*^9, 3.866536116852367*^9}, 3.866536775522472*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "127.33110987208875`"}], ",", 
   RowBox[{"-", "129.23157419853783`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.853922541088722*^9, {3.853924714089088*^9, 3.853924834631562*^9}, 
   3.853992352821918*^9, {3.853996358125792*^9, 3.853996365590733*^9}, 
   3.853996457524887*^9, 3.86487188773027*^9, 3.8665317658368597`*^9, {
   3.866531817438426*^9, 3.866531933868507*^9}, {3.866532103248619*^9, 
   3.866532126148254*^9}, {3.866532186809866*^9, 3.866532199437954*^9}, 
   3.8665329023000803`*^9, {3.8665329837104607`*^9, 3.866533120869697*^9}, {
   3.866533227751989*^9, 3.86653323619937*^9}, {3.866533333748081*^9, 
   3.8665333769273*^9}, {3.866533418918993*^9, 3.86653351594842*^9}, {
   3.866533548746573*^9, 3.866533587116596*^9}, 3.866533664047838*^9, 
   3.8665342635082693`*^9, {3.866535975585615*^9, 3.8665360147118797`*^9}, {
   3.86653607463708*^9, 3.866536116852367*^9}, 3.8665367755229073`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "112"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsField", " ", "=", " ", 
   RowBox[{"3", "*", "64"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsDomain", "=", " ", 
   RowBox[{"15", "+", "bitsRate"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", "300"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"m", "=", 
  RowBox[{"JohnsonProximity", "[", 
   RowBox[{
   "bitsSec", ",", "bitsField", ",", "bitsDomain", ",", "bitsRate", ",", 
    "arities", ",", "numPolys"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"soundnessErrorCommit", "[", 
    RowBox[{
    "bitsField", ",", "bitsDomain", ",", "bitsRate", ",", "arities", ",", 
     "numPolys", ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"m", ",", 
    RowBox[{"m", "+", "1"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"s", " ", "=", 
  RowBox[{"numSamples", "[", 
   RowBox[{"bitsSec", ",", "bitsRate", ",", "m"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"soundnessErrorQuery", "[", 
    RowBox[{"bitsRate", ",", "m", ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"s", "-", "1"}], ",", "s"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.853914840673497*^9, 3.853914979874262*^9}, {
   3.8539150320578423`*^9, 3.853915033532813*^9}, 3.853920078857003*^9, {
   3.853920138433316*^9, 3.853920151480822*^9}, {3.85392020561826*^9, 
   3.853920206527965*^9}, 3.853920240666725*^9, {3.853920591995137*^9, 
   3.85392059234592*^9}, {3.8539209396616096`*^9, 3.853920940053832*^9}, {
   3.853920970342388*^9, 3.8539209759125767`*^9}, {3.853921064806788*^9, 
   3.8539211200207777`*^9}, {3.853921165911811*^9, 3.853921241535307*^9}, {
   3.853922481595243*^9, 3.8539224818907948`*^9}, 3.853924662534011*^9, {
   3.8539248437973213`*^9, 3.853924843873407*^9}, {3.866533613831568*^9, 
   3.8665336310741158`*^9}, {3.8665336739326153`*^9, 3.866533690203829*^9}, 
   3.866534269676484*^9, {3.866535874271337*^9, 3.8665358796132*^9}, {
   3.866537250547151*^9, 3.866537280596209*^9}, {3.866537316277216*^9, 
   3.8665373496694527`*^9}}],

Cell[BoxData["27"], "Output",
 CellChangeTimes->{
  3.853924698927374*^9, 3.853924844271329*^9, 3.853996370641461*^9, 
   3.853996459982724*^9, {3.866533624870172*^9, 3.866533643621376*^9}, {
   3.866533675185371*^9, 3.866533691204261*^9}, 3.8665342706193933`*^9, {
   3.86653587523549*^9, 3.866535879867959*^9}, {3.866537271244458*^9, 
   3.8665372815224667`*^9}, {3.86653732174642*^9, 3.866537350031961*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "112.03048200532736`"}], ",", 
   RowBox[{"-", "111.66976990084679`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.853924698927374*^9, 3.853924844271329*^9, 3.853996370641461*^9, 
   3.853996459982724*^9, {3.866533624870172*^9, 3.866533643621376*^9}, {
   3.866533675185371*^9, 3.866533691204261*^9}, 3.8665342706193933`*^9, {
   3.86653587523549*^9, 3.866535879867959*^9}, {3.866537271244458*^9, 
   3.8665372815224667`*^9}, {3.86653732174642*^9, 3.866537350032591*^9}}],

Cell[BoxData["46"], "Output",
 CellChangeTimes->{
  3.853924698927374*^9, 3.853924844271329*^9, 3.853996370641461*^9, 
   3.853996459982724*^9, {3.866533624870172*^9, 3.866533643621376*^9}, {
   3.866533675185371*^9, 3.866533691204261*^9}, 3.8665342706193933`*^9, {
   3.86653587523549*^9, 3.866535879867959*^9}, {3.866537271244458*^9, 
   3.8665372815224667`*^9}, {3.86653732174642*^9, 3.866537350033065*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "111.3087504887464`"}], ",", 
   RowBox[{"-", "113.7822782773852`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.853924698927374*^9, 3.853924844271329*^9, 3.853996370641461*^9, 
   3.853996459982724*^9, {3.866533624870172*^9, 3.866533643621376*^9}, {
   3.866533675185371*^9, 3.866533691204261*^9}, 3.8665342706193933`*^9, {
   3.86653587523549*^9, 3.866535879867959*^9}, {3.866537271244458*^9, 
   3.8665372815224667`*^9}, {3.86653732174642*^9, 3.8665373500335293`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "112"}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"if", " ", "we", " ", "grind", " ", "16", " ", "bits"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"bitsField", " ", "=", " ", 
   RowBox[{"3", "*", "64"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsDomain", "=", " ", 
   RowBox[{"15", "+", "bitsRate"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", "300"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"m", "=", 
  RowBox[{"JohnsonProximity", "[", 
   RowBox[{
   "bitsSec", ",", "bitsField", ",", "bitsDomain", ",", "bitsRate", ",", 
    "arities", ",", "numPolys"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"soundnessErrorCommit", "[", 
    RowBox[{
    "bitsField", ",", "bitsDomain", ",", "bitsRate", ",", "arities", ",", 
     "numPolys", ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"m", ",", 
    RowBox[{"m", "+", "1"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.86653258223068*^9, 3.866532607336454*^9}, {
   3.866532639176531*^9, 3.866532659338109*^9}, {3.866533704613625*^9, 
   3.8665337561367273`*^9}, 3.86653427579255*^9}],

Cell[BoxData["54"], "Output",
 CellChangeTimes->{
  3.866532608758957*^9, {3.866532639768263*^9, 3.866532659850617*^9}, {
   3.8665337139835863`*^9, 3.866533720110858*^9}, 3.866533757560594*^9, 
   3.866534276688614*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "112.12270972656151`"}], ",", 
   RowBox[{"-", "111.93908893554925`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.866532608758957*^9, {3.866532639768263*^9, 3.866532659850617*^9}, {
   3.8665337139835863`*^9, 3.866533720110858*^9}, 3.866533757560594*^9, 
   3.866534276689107*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Proof size and rough prover cost\
\>", "Subsection",
 CellChangeTimes->{{3.8541039254503717`*^9, 3.854103931187179*^9}, 
   3.85624816164758*^9, {3.866540988497232*^9, 3.866540989464652*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "@", "prover"}], ";"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Computes", " ", "the", " ", "prover", " ", "cost", " ", 
      RowBox[{"(", 
       RowBox[{"as", " ", "the", " ", "number", " ", "of", " ", "hashes"}], 
       ")"}], " ", "and", " ", "the", " ", "proof", " ", "size", " ", 
      RowBox[{"(", 
       RowBox[{"in", " ", "field", " ", "elements"}], ")"}], "\n", "for", " ",
       "a", " ", "batch", " ", "FRI", " ", "prover", " ", "given", " ", "a", 
      " ", "family", " ", "of", " ", "groups", " ", "of", " ", "polynomials", 
      " ", "of", " ", "degree", " ", 
      RowBox[{"`2", "^", "bitsCode`"}], " ", "specified", " ", "by", "\n", 
      "``", "\n", "\t", "numPolys"}], " ", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NumPolys", "[", "1", "]"}], ",", " ", 
          RowBox[{"NumPolys", "[", "2", "]"}], ",", ".."}], "}"}], ".", "\n", 
        "``"}], " ", "\n", "Each", " ", "group", " ", "of", " ", 
       RowBox[{"`num_polys", "[", "i", "]"}], "`", " ", "polynomials", " ", 
       "is", " ", "committed", " ", "by", " ", "a", " ", "single", " ", 
       "Merkle", " ", 
       RowBox[{"root", ".", "\n", "\n", "The"}], " ", "FRI", " ", 
       "parameters", " ", "are", " ", "given", " ", "by"}], " ", "\n", "\t", 
      "-", " ", 
      RowBox[{"`bitsSec`", " ", "bits", " ", "of", " ", "security"}]}]}], ",",
     " ", "\n", "\t", 
    RowBox[{
     RowBox[{"-", " ", "`bitsRate`"}], " ", "for", " ", "the", " ", "low", 
     " ", "degree", " ", "argument"}], ",", " ", 
    RowBox[{"given", " ", "in", " ", "bits", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"i", ".", "e", ".", " ", 
        RowBox[{"`2", "^", 
         RowBox[{"-", "rate`"}]}]}], " ", "is", " ", "the", " ", "code", " ", 
       "rate"}], ")"}]}], ",", " ", "\n", "\t", 
    RowBox[{"-", " ", "`arities`"}], ",", " ", 
    RowBox[{"the", " ", "reduction", " ", "strategy"}], ",", " ", 
    RowBox[{
     RowBox[{"i", ".", "e", ".", " ", "the"}], " ", "arity", " ", "list", " ",
      "of", " ", "the", " ", "FRI", " ", "reduction", " ", "steps", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"i", ".", "e", ".", " ", "we"}], " ", "have", " ", 
       RowBox[{"2", "^", 
        RowBox[{"arity", "[", "i", "]"}]}], " ", "at", " ", "step", " ", 
       "i"}], ")"}]}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"-", " ", "`capLevel`"}], " ", "gives", " ", "the", " ", "level",
      " ", 
     RowBox[{"(", 
      RowBox[{"from", " ", "the", " ", "root"}], ")"}], " ", "of", " ", "the",
      " ", "Merkle", " ", 
     RowBox[{"caps", ".", " ", 
      RowBox[{"(", 
       RowBox[{
       "set", " ", "it", " ", "to", " ", "zero", " ", "for", " ", "root", " ",
         "level"}], ")"}]}], "\n", "\n", 
     RowBox[{"NOTE", ":", " ", 
      RowBox[{
      "We", " ", "do", " ", "not", " ", "take", " ", "into", " ", "account", 
       " ", "the", " ", "commitment", " ", "effort", " ", "of", " ", "the", 
       " ", "initial", " ", "family", " ", "of", " ", "groups", " ", "\n", 
       "of", " ", 
       RowBox[{"polynomials", "."}]}]}]}]}], "\n", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "prover", "]"}], "=", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"\"\<BitsBaseField\>\"", " ", "\[Rule]", " ", "64"}], ",", "\n",
       "\t", 
      RowBox[{"\"\<ExtensionDegree\>\"", " ", "\[Rule]", " ", "3"}], " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "the", " ", "degree", " ", "of", " ", "the", " ", "field", " ", 
        "extension", " ", "for", " ", "FRI"}], "*)"}], ",", "\n", "\t", 
      RowBox[{"\"\<Hiding\>\"", " ", "\[Rule]", " ", "False"}]}], "\n", 
     "}"}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"prover", "[", "\n", "\t", 
   RowBox[{"numPolys_List", ",", " ", "bitsCode_", ",", "\n", "\t", 
    RowBox[{"{", 
     RowBox[{"bitsSec_", ",", " ", "bitsRate_", ",", " ", 
      RowBox[{"arities_:", "List"}], ",", " ", "capLevel_"}], "}"}], ",", 
    "\n", "\t", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "\n", "]"}], ":=", " ", 
  RowBox[{"Module", "[", "\n", 
   RowBox[{
    RowBox[{"{", "\n", 
     RowBox[{"hashSize", ",", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"base", " ", "FE"}], " ", "*)"}], "\n", "hashRate", ",", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"base", " ", "FE"}], " ", "*)"}], "\n", "hidingRand", ",", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "hiding", " ", "randomness", " ", "in", " ", "base", " ", "FE"}], " ", 
       "*)"}], "\n", "bitsDomain", ",", " ", "m", ",", " ", "s", ",", "\n", 
      "proofelems", ",", " ", "vals", ",", "\n", "proofSize", ",", " ", 
      "numHashes", ",", "\n", 
      RowBox[{"bitsBaseField", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<BitsBaseField\>\"", "]"}]}], ",", 
      "\n", 
      RowBox[{"extDeg", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<ExtensionDegree\>\"", "]"}]}], ",", 
      "\n", "bitsField", ",", "\n", 
      RowBox[{"hiding", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<Hiding\>\"", "]"}]}]}], "\n", "}"}], 
    ",", "\n", "\t", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"hash", " ", "parameters"}], ",", " ", 
      RowBox[{"assuming", " ", 
       RowBox[{"max", ".", " ", "128"}], " ", "bit", " ", "security"}]}], " ",
      "*)"}], "\n", "\t", 
    RowBox[{
     RowBox[{"hashSize", " ", "=", " ", 
      RowBox[{"Ceiling", "[", 
       RowBox[{"256", " ", "/", " ", "bitsBaseField"}], "]"}]}], ";", "\n", 
     "\t", 
     RowBox[{"hashRate", " ", "=", " ", "hashSize"}], ";", "\n", "\t", 
     RowBox[{"hidingRand", " ", "=", " ", 
      RowBox[{"If", "[", 
       RowBox[{"hiding", ",", " ", "hashSize", ",", " ", "0"}], "]"}]}], ";", 
     "\n", "\n", "\t", 
     RowBox[{"bitsField", " ", "=", " ", 
      RowBox[{"extDeg", " ", "*", " ", "bitsBaseField"}]}], ";", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "the", " ", "degree", " ", "of", " ", "the", " ", "FRI", " ", 
       "sampling", " ", "domain"}], " ", "*)"}], "\n", "\t", 
     RowBox[{"bitsDomain", " ", "=", " ", 
      RowBox[{"bitsCode", " ", "+", " ", "bitsRate"}]}], ";", "\n", "\n", 
     "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"the", " ", "Johnson", " ", "proximity"}], " ", "*)"}], "\n", 
     "\t", 
     RowBox[{"m", " ", "=", " ", 
      RowBox[{"JohnsonProximity", "[", 
       RowBox[{
       "bitsSec", ",", "bitsField", ",", "bitsDomain", ",", "bitsRate", ",", 
        "arities", ",", 
        RowBox[{"Total", "@", "numPolys"}]}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"m", " ", "\[Equal]", " ", "Infinity"}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{
        "Print", "[", 
         "\"\<Security bound for commit phase not achievable with current \
extension degree.\>\"", "]"}], ";", "\n", "\t\t", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{"Null", ",", "Null"}], "}"}], "]"}]}]}], "\n", "\t", "]"}], 
     ";", "\n", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"the", " ", "query", " ", "rounds"}], ",", " ", 
       RowBox[{
        RowBox[{"i", ".", "e", ".", " ", "the"}], " ", "number", " ", "of", 
        " ", "samples"}]}], " ", "*)"}], "\n", "\t", 
     RowBox[{"s", " ", "=", " ", 
      RowBox[{"numSamples", "[", "\n", "\t\t", 
       RowBox[{"bitsSec", ",", " ", "bitsRate", ",", " ", "m"}], "  ", "\n", 
       "\t", "]"}]}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"s", " ", "\[Equal]", " ", "Infinity"}], ",", " ", "\n", 
       "\t\t", 
       RowBox[{
        RowBox[{
        "Print", "[", "\"\<Maximum samples bound reached. Increase it.\>\"", 
         "]"}], ";", "\n", "\t\t", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{"Null", ",", "Null"}], "}"}], "]"}]}]}], "\n", "\t", "]"}], 
     ";", "\n", "\n", "\t", 
     RowBox[{"proofSize", " ", "=", " ", "0"}], ";", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"The", " ", "commit", " ", "phase", " ", "of", " ", 
        RowBox[{"FRI", ":", " ", 
         RowBox[{
         "the", " ", "Merkle", " ", "caps", " ", "of", " ", "the", " ", 
          "round", " ", "polynomials", " ", "trees"}]}]}], ",", " ", "\n", 
       "\t", 
       RowBox[{
       "plus", " ", "the", " ", "revealed", " ", "polynomial", " ", "at", " ",
         "the", " ", "end", " ", "of", " ", "the", " ", "FRI", " ", 
        RowBox[{"reduction", "."}]}]}], "\n", "\t ", "*)"}], "\n", "\t", 
     RowBox[{"proofSize", " ", "+=", " ", "\n", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Length", "[", "numPolys", "]"}], " ", "+", " ", 
          RowBox[{"Length", "[", "arities", "]"}]}], ")"}], " ", "*", " ", 
        RowBox[{"2", "^", "capLevel"}], " ", "*", " ", "hashSize"}], " ", "+",
        " ", 
       RowBox[{"Ceiling", "[", 
        RowBox[{
         RowBox[{"2", "^", "bitsCode"}], "/", 
         RowBox[{"2", "^", 
          RowBox[{"Total", "[", "arities", "]"}]}]}], "]"}]}]}], ";", "\n", 
     "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"the", " ", "Merkle", " ", "paths", " ", 
         RowBox[{"(", 
          RowBox[{"without", " ", "their", " ", "leaves"}], ")"}], " ", "per",
          " ", "query", " ", 
         RowBox[{"round", ".", "\n", "\t", "These"}], " ", "are", " ", "the", 
         " ", "paths", " ", "from"}], "\n", "\t\t", "-", " ", 
        RowBox[{"the", " ", "batch", " ", "polynomial", " ", 
         RowBox[{"f", "[", "0", "]"}]}]}], ",", " ", 
       RowBox[{
        RowBox[{"and", " ", "the"}], " ", "\n", "\t\t", "-", " ", 
        RowBox[{"folded", " ", "ones", " ", 
         RowBox[{"f", "[", "i", "]"}]}]}], ",", " ", 
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{
        RowBox[{"..", 
         RowBox[{"Length", "[", "arity", "]"}]}], "-", "1."}]}], " ", "\n", 
      "\t", "*)"}], "\n", "\t", 
     RowBox[{"proofelems", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", "\n", "\t\t", 
        RowBox[{"bitsDomain", " ", "-", " ", "capLevel", "  ", 
         RowBox[{"(*", " ", 
          RowBox[{"the", " ", "batch", " ", "poly", " ", 
           RowBox[{"f", "[", "0", "]"}]}], " ", "*)"}], "\n", "\t\t", "+", 
         " ", 
         RowBox[{"Total", "[", "\n", "\t\t\t", 
          RowBox[{"bitsDomain", " ", "-", " ", "capLevel", " ", "-", " ", 
           RowBox[{"Accumulate", "@", 
            RowBox[{"arities", "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", 
               RowBox[{
                RowBox[{"Length", "[", "arities", "]"}], "-", "1"}]}], "]"}], 
             "]"}]}]}], "\n", "\t\t", "]"}]}], " ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"the", " ", "folded", " ", "FRI", " ", "polys"}], ",", " ", 
          
          RowBox[{"without", " ", "the", " ", "revealed", " ", "one"}]}], " ",
          "*)"}], "\n", "\t\t", ")"}], " ", "*", " ", "hashSize"}]}], ";", 
     "\n", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"revealed", " ", "values", " ", "per", " ", "query", " ", 
        RowBox[{"round", ":", "\n", "\t", 
         RowBox[{
         "The", " ", "component", " ", "polynomials", " ", "are", " ", "once",
           " ", "per", " ", "round", " ", "and", " ", "have", " ", "values", 
          " ", "in", " ", "F"}]}]}], ",", " ", "\n", "\t", 
       RowBox[{"the", " ", 
        RowBox[{"f", "[", "i", "]"}]}], ",", " ", 
       RowBox[{"i", "=", "0"}], ",", "...", ",", 
       RowBox[{
        RowBox[{"d", "-", 
         RowBox[{
         "1", " ", "on", " ", "a", " ", "coset", " ", "of", " ", "size", " ", 
          
          RowBox[{"2", "^", 
           RowBox[{"d", "[", "i", "]"}]}], " ", "with", " ", 
          RowBox[{"d", "[", "i", "]"}]}]}], "=", 
        RowBox[{
         RowBox[{"arity", "[", "i", "]"}], " ", "\n", "\t", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
           "they", " ", "have", " ", "values", " ", "in", " ", "the", " ", 
            "extension", " ", "field"}], ")"}], ".", "\n", "\t", "Both"}], 
         " ", "might", " ", "have", " ", "hiding", " ", "randomnesses"}]}], 
       ",", " ", 
       RowBox[{"if", " ", 
        RowBox[{"required", "."}]}]}], "\n", "\t", "*)"}], "\n", "\t", 
     RowBox[{"vals", " ", "=", " ", 
      RowBox[{
       RowBox[{"Total", "[", "numPolys", "]"}], " ", "+", " ", 
       RowBox[{"If", "[", 
        RowBox[{"hiding", ",", 
         RowBox[{
          RowBox[{"Length", "[", "numPolys", "]"}], "*", "hidingRand"}], ",", 
         "0"}], "]"}]}]}], ";", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"MT_", "0"}], ".."}], ",", 
       RowBox[{
        RowBox[{"Length", "[", "arity", "]"}], " ", "the", " ", "coset", " ", 
        "evaluations", " ", "of", " ", "the", " ", "FRI", " ", 
        "polynomials"}]}], " ", "*)"}], "\n", "\t", 
     RowBox[{"vals", " ", "+=", " ", 
      RowBox[{
       RowBox[{"extDeg", " ", "*", " ", 
        RowBox[{"Total", "[", 
         RowBox[{"2", "^", "arities"}], "]"}]}], " ", "+", " ", 
       RowBox[{"If", "[", 
        RowBox[{"hiding", ",", 
         RowBox[{
          RowBox[{"Length", "[", "arities", "]"}], "*", "hidingRand"}], ",", 
         "0"}], "]"}]}]}], ";", "\n", "\t", "\n", "\t", 
     RowBox[{"proofSize", " ", "+=", " ", 
      RowBox[{"s", " ", "*", " ", 
       RowBox[{"(", 
        RowBox[{"proofelems", " ", "+", " ", "vals"}], ")"}]}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"in", " ", "base", " ", "FE"}], " ", "*)"}], "\n", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"prover", " ", "commitment", " ", "effort"}], ",", " ", 
       RowBox[{
       "excluding", " ", "the", " ", "initial", " ", "polynomials"}]}], " ", 
      "*)"}], "\n", "\t", 
     RowBox[{"numHashes", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"2", "^", "bitsDomain"}], " ", "*", " ", 
        RowBox[{
         RowBox[{"(", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"extDeg", " ", "+", " ", "hidingRand"}], ")"}], "*", " ", 
           
           RowBox[{"(", 
            RowBox[{"1", " ", "+", " ", 
             RowBox[{"Total", "[", 
              RowBox[{"2", "^", 
               RowBox[{"(", 
                RowBox[{"-", 
                 RowBox[{"Accumulate", "@", 
                  RowBox[{"arities", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ";;", 
                    RowBox[{
                    RowBox[{"Length", "[", "arities", "]"}], "-", "1"}]}], 
                    "]"}], "]"}]}]}], ")"}]}], "]"}]}], ")"}]}], "\n", 
          "\t\t\t", ")"}], " ", "/", " ", "\n", "\t\t\t", "hashRate"}]}], " ",
        "//", "Ceiling"}]}], ";", "\n", "\n", "\n", 
     RowBox[{"Print", "@", 
      RowBox[{"Column", "[", 
       RowBox[{"{", "\n", "\t", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          RowBox[{"\"\<Code bits: ``\>\"", ",", " ", "bitsCode"}], "]"}], ",",
          "\n", "\t", 
         RowBox[{"StringForm", "[", 
          RowBox[{
          "\"\<Sampling domain bits: ``\>\"", ",", " ", "bitsDomain"}], "]"}],
          ",", "\n", "\t", 
         RowBox[{"StringForm", "[", 
          RowBox[{
          "\"\<Number of polynomials for batch open: ``\>\"", ",", " ", 
           RowBox[{"Total", "@", "numPolys"}]}], "]"}], ",", "\n", "\t", 
         RowBox[{"StringForm", "[", 
          RowBox[{"\"\<Johnson proximity m: ``\>\"", ",", " ", "m"}], "]"}], 
         ",", "\n", "\t", 
         RowBox[{"StringForm", "[", 
          RowBox[{
          "\"\<Soundness error commit phase: 2^``\>\"", ",", " ", "\n", 
           "\t\t", 
           RowBox[{"soundnessErrorCommit", "[", 
            RowBox[{
            "bitsField", ",", "bitsDomain", ",", "bitsRate", ",", "arities", 
             ",", 
             RowBox[{"Total", "@", "numPolys"}], ",", "m"}], "]"}]}], "\n", 
          "\t", "]"}], ",", "\n", "\t", 
         RowBox[{"StringForm", "[", 
          RowBox[{"\"\<Number of query rounds: ``\>\"", ",", " ", "s"}], 
          "]"}], ",", "\n", "\t", 
         RowBox[{"StringForm", "[", 
          RowBox[{
          "\"\<Soundness error query phase: 2^``\>\"", ",", " ", "\n", "\t\t", 
           RowBox[{"soundnessErrorQuery", "[", 
            RowBox[{"bitsRate", ",", "m", ",", "s"}], "]"}]}], "\n", "\t", 
          "]"}], ",", "\n", "\t", 
         RowBox[{"StringForm", "[", 
          RowBox[{"\"\<revealed poly size: `` FE\>\"", ",", " ", 
           RowBox[{"Ceiling", "[", 
            RowBox[{
             RowBox[{"2", "^", "bitsCode"}], "/", 
             RowBox[{"2", "^", 
              RowBox[{"Total", "[", "arities", "]"}]}]}], "]"}]}], "]"}], ",",
          "\n", "\t", 
         RowBox[{"StringForm", "[", 
          RowBox[{
          "\"\<per round: `` path elems + `` values = `` FE\>\"", ",", " ", 
           "proofelems", ",", " ", "vals", ",", " ", 
           RowBox[{"proofelems", " ", "+", " ", "vals"}]}], "]"}], ",", "\n", 
         "\t", 
         RowBox[{"StringForm", "[", 
          RowBox[{"\"\<`` rounds: `` FE\>\"", ",", " ", "s", ",", "  ", 
           RowBox[{"s", " ", "*", " ", 
            RowBox[{"(", 
             RowBox[{"proofelems", " ", "+", " ", "vals"}], ")"}]}]}], 
          "]"}]}], "\n", "}"}], "]"}]}], ";", "\n", "\n", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "number", " ", "of", " ", "compression", " ", "function", " ", 
        "invocations"}], ",", " ", 
       RowBox[{"and", " ", "proof", " ", "size", " ", "in", " ", "Byte"}]}], 
      "*)"}], "\n", 
     RowBox[{"{", 
      RowBox[{"numHashes", ",", " ", 
       RowBox[{"proofSize", " ", "*", " ", 
        RowBox[{"Ceiling", "[", 
         RowBox[{"bitsBaseField", "/", "8"}], "]"}]}]}], "}"}]}]}], "\n", 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.852828753468875*^9, 3.852828929353341*^9}, {
   3.8528292272534933`*^9, 3.852829388961575*^9}, {3.852829667649253*^9, 
   3.852829694917428*^9}, {3.85283041791125*^9, 3.852830459040421*^9}, {
   3.852830518888151*^9, 3.852830528160035*^9}, {3.8528306072731943`*^9, 
   3.852830620840377*^9}, {3.852898787699478*^9, 3.852899050005266*^9}, {
   3.8528992704004383`*^9, 3.852899417396522*^9}, {3.852900703434572*^9, 
   3.852901153640636*^9}, {3.852901227309359*^9, 3.852901298161619*^9}, {
   3.85290134055227*^9, 3.852901369422332*^9}, {3.852901410407144*^9, 
   3.852901689388698*^9}, {3.852901724206312*^9, 3.852901737340418*^9}, {
   3.852901776094555*^9, 3.852901912719166*^9}, {3.8529019603823233`*^9, 
   3.852901966230245*^9}, {3.8529019963260183`*^9, 3.852902102762048*^9}, {
   3.852957352157552*^9, 3.852957404304575*^9}, {3.852957451308791*^9, 
   3.852957489480879*^9}, {3.852957581040318*^9, 3.852957593929055*^9}, {
   3.852957640216402*^9, 3.852957823189746*^9}, {3.852957857383257*^9, 
   3.85295804176772*^9}, {3.8529580826377153`*^9, 3.852958140814496*^9}, {
   3.8529588062720127`*^9, 3.85295883521313*^9}, {3.8529588844771976`*^9, 
   3.85295904657228*^9}, {3.852959106660693*^9, 3.85295916016715*^9}, {
   3.8529592044357986`*^9, 3.8529592206011963`*^9}, {3.852959292220302*^9, 
   3.852959317536353*^9}, {3.852959360780418*^9, 3.852959407510343*^9}, {
   3.852959452613803*^9, 3.852959466149703*^9}, {3.852959514183031*^9, 
   3.852959633730493*^9}, {3.8529596762644253`*^9, 3.852959677202444*^9}, {
   3.8529597131174717`*^9, 3.852959750278808*^9}, {3.8529597811475897`*^9, 
   3.8529600313603573`*^9}, {3.85296011745011*^9, 3.852960128688827*^9}, {
   3.852960195030418*^9, 3.8529603348226023`*^9}, {3.8529604030609617`*^9, 
   3.85296042761642*^9}, {3.852960514416163*^9, 3.852960524336694*^9}, {
   3.852960576753579*^9, 3.8529607368685493`*^9}, {3.85296077919137*^9, 
   3.852961149745243*^9}, {3.852961577655758*^9, 3.852961659573567*^9}, {
   3.852962201264351*^9, 3.852962205755546*^9}, {3.85296229210737*^9, 
   3.8529623692174397`*^9}, {3.852962399922222*^9, 3.8529625064831753`*^9}, {
   3.852962572393024*^9, 3.852962788445389*^9}, {3.852962818977085*^9, 
   3.85296283299303*^9}, {3.8529628902725477`*^9, 3.8529629398394938`*^9}, {
   3.8529630051381207`*^9, 3.852963163049328*^9}, {3.852963634170166*^9, 
   3.852963686352779*^9}, {3.8529641064699173`*^9, 3.852964119703504*^9}, {
   3.852964178176853*^9, 3.852964378102593*^9}, {3.852964416673317*^9, 
   3.8529645935256147`*^9}, {3.852964623791058*^9, 3.852964861697043*^9}, {
   3.852968851254415*^9, 3.852968932114609*^9}, {3.8529691660651407`*^9, 
   3.852969407866428*^9}, {3.852969442829566*^9, 3.852969481038485*^9}, {
   3.852969525366769*^9, 3.8529696435621653`*^9}, {3.852969745196289*^9, 
   3.852969747305347*^9}, {3.852969783630267*^9, 3.852969801660829*^9}, {
   3.852969868488768*^9, 3.852970197413617*^9}, {3.852970422197771*^9, 
   3.852970425664419*^9}, {3.852970498284931*^9, 3.852970518688044*^9}, {
   3.852970716996608*^9, 3.852970931918745*^9}, {3.852971028682351*^9, 
   3.85297103961861*^9}, {3.852971075634255*^9, 3.852971163793097*^9}, {
   3.852971221981015*^9, 3.8529712293965816`*^9}, {3.8529712771896143`*^9, 
   3.852971307379814*^9}, {3.8529713411068287`*^9, 3.852971363494443*^9}, {
   3.852971948926064*^9, 3.852971966852159*^9}, {3.852972000676878*^9, 
   3.852972001091275*^9}, {3.8529721401762953`*^9, 3.852972149258889*^9}, {
   3.852972277710803*^9, 3.852972283294344*^9}, {3.852972467523374*^9, 
   3.852972474421933*^9}, {3.8529726463668203`*^9, 3.8529726755080748`*^9}, {
   3.852972714218252*^9, 3.852972748002143*^9}, {3.852972960380934*^9, 
   3.852972962221754*^9}, {3.852973262820787*^9, 3.852973274644369*^9}, {
   3.852973387133328*^9, 3.852973410666271*^9}, {3.8529737262420073`*^9, 
   3.85297372762185*^9}, {3.852973980160684*^9, 3.852973981272471*^9}, {
   3.8529772185258617`*^9, 3.852977251981799*^9}, {3.852977326158453*^9, 
   3.8529774211964808`*^9}, {3.8529777180631247`*^9, 3.852977773168518*^9}, {
   3.852977833911332*^9, 3.852977869093409*^9}, {3.852977947738727*^9, 
   3.852977958111024*^9}, 3.8529780839718313`*^9, {3.852978115653783*^9, 
   3.852978117117964*^9}, {3.852978356710834*^9, 3.852978409393959*^9}, {
   3.852978476294178*^9, 3.8529785025934067`*^9}, {3.852978563662277*^9, 
   3.852978616144422*^9}, {3.852978778971834*^9, 3.852978869103385*^9}, {
   3.852978937235639*^9, 3.8529789730708017`*^9}, {3.8529848689531317`*^9, 
   3.8529849023907223`*^9}, {3.85298619941814*^9, 3.852986200024056*^9}, {
   3.8529990730351458`*^9, 3.8529996861414757`*^9}, {3.852999721562764*^9, 
   3.852999722855657*^9}, {3.852999753311297*^9, 3.8529999114279757`*^9}, {
   3.85299997073245*^9, 3.853000129664077*^9}, {3.853000169500168*^9, 
   3.853000172672838*^9}, {3.8530002241622047`*^9, 3.8530002885994253`*^9}, {
   3.853000329223609*^9, 3.8530003598695297`*^9}, {3.853000409946364*^9, 
   3.853000440277855*^9}, {3.8530004903623753`*^9, 3.853000545935029*^9}, {
   3.85323278275737*^9, 3.853233334032814*^9}, {3.853233374326849*^9, 
   3.853233881192793*^9}, {3.853233918224272*^9, 3.8532342638047523`*^9}, {
   3.853234301257104*^9, 3.853234559478592*^9}, {3.853234611365118*^9, 
   3.853234620555151*^9}, {3.853234671025045*^9, 3.853234673719409*^9}, {
   3.853234746560462*^9, 3.853234750253181*^9}, {3.853235989885373*^9, 
   3.853235996230966*^9}, {3.853236032099289*^9, 3.8532360377639027`*^9}, {
   3.853236074546936*^9, 3.8532360800785503`*^9}, {3.853238644474451*^9, 
   3.853238864205781*^9}, {3.853242846405027*^9, 3.853242874693693*^9}, {
   3.853242977370185*^9, 3.853243059940681*^9}, {3.853243110130664*^9, 
   3.85324315095238*^9}, {3.853243302199527*^9, 3.853243340364868*^9}, {
   3.853243391421596*^9, 3.853243432596455*^9}, {3.853243475423356*^9, 
   3.853243483050867*^9}, {3.85324373700036*^9, 3.853243744289283*^9}, {
   3.8532441434243183`*^9, 3.8532441646231813`*^9}, {3.8532442326890306`*^9, 
   3.853244255788042*^9}, {3.853244304416464*^9, 3.853244321153363*^9}, {
   3.853244662035771*^9, 3.853244680029045*^9}, {3.8532447448343267`*^9, 
   3.8532447520974903`*^9}, {3.853244796058017*^9, 3.853244799103745*^9}, {
   3.853244908982524*^9, 3.8532449141357317`*^9}, {3.8532455284292793`*^9, 
   3.853245566916071*^9}, {3.853245626466662*^9, 3.853245684199965*^9}, {
   3.853245743174425*^9, 3.853245755966641*^9}, {3.853304358320921*^9, 
   3.853304411636429*^9}, {3.853304452235093*^9, 3.853304472951079*^9}, {
   3.853304643833474*^9, 3.853304649802438*^9}, {3.8533049116616783`*^9, 
   3.8533049125667067`*^9}, {3.8533072422865343`*^9, 
   3.8533072732365427`*^9}, {3.853307315993675*^9, 3.853307332727952*^9}, {
   3.853307862341133*^9, 3.853307862659018*^9}, {3.8533081431374397`*^9, 
   3.853308243347251*^9}, {3.853310855559424*^9, 3.853310890703416*^9}, {
   3.853310921423209*^9, 3.853310939935667*^9}, {3.853311050973181*^9, 
   3.853311067942185*^9}, {3.853311099821137*^9, 3.853311134539372*^9}, {
   3.853315694054336*^9, 3.85331570163055*^9}, {3.8533158366511583`*^9, 
   3.853315840312027*^9}, {3.8533185956856947`*^9, 3.853318622505871*^9}, {
   3.853319154020339*^9, 3.8533191671801147`*^9}, {3.853324520891779*^9, 
   3.8533245215631104`*^9}, {3.853324555764638*^9, 3.853324555903653*^9}, {
   3.853324595187591*^9, 3.85332459548424*^9}, {3.853324667415594*^9, 
   3.8533247441726103`*^9}, {3.85332503656561*^9, 3.8533251251069813`*^9}, {
   3.853327393473991*^9, 3.8533274291680202`*^9}, {3.853327826801553*^9, 
   3.853327845092863*^9}, {3.8533283234656563`*^9, 3.853328336577304*^9}, {
   3.853328385409595*^9, 3.853328600923464*^9}, {3.8533286880570498`*^9, 
   3.8533288435253267`*^9}, {3.853328890963025*^9, 3.853328995585711*^9}, {
   3.8533292518912287`*^9, 3.853329262082679*^9}, {3.853329552133473*^9, 
   3.853329626581892*^9}, {3.853329682714738*^9, 3.8533296829175653`*^9}, {
   3.8533305610228033`*^9, 3.8533305944557877`*^9}, {3.853332130229561*^9, 
   3.853332159588472*^9}, {3.853332243861784*^9, 3.8533323079849033`*^9}, {
   3.853332358710643*^9, 3.8533323608248034`*^9}, {3.8533324393546963`*^9, 
   3.8533324682779903`*^9}, {3.853332615152804*^9, 3.853332616863329*^9}, {
   3.853333665248242*^9, 3.8533337288338003`*^9}, {3.853335519942328*^9, 
   3.853335603007619*^9}, {3.853335679650957*^9, 3.853335680465403*^9}, {
   3.853335718013444*^9, 3.853335777683075*^9}, {3.8533359377396584`*^9, 
   3.853336004439534*^9}, {3.853336068851028*^9, 3.85333609358738*^9}, {
   3.853336168910941*^9, 3.853336175496828*^9}, {3.853336219493333*^9, 
   3.8533363453547373`*^9}, {3.8533364550460567`*^9, 
   3.8533365705290937`*^9}, {3.853336615306013*^9, 3.853336620571343*^9}, {
   3.8533366652416573`*^9, 3.853336665602253*^9}, {3.853336699107498*^9, 
   3.853336797719677*^9}, {3.853336990445159*^9, 3.8533369931699743`*^9}, {
   3.853337607867653*^9, 3.853337832024618*^9}, {3.853337917897573*^9, 
   3.853338016721418*^9}, {3.853342535624398*^9, 3.85334253605028*^9}, {
   3.853342587047572*^9, 3.8533428518909388`*^9}, {3.853342886872099*^9, 
   3.8533429226350803`*^9}, {3.8533429719663754`*^9, 3.853342974713798*^9}, {
   3.8533443728672647`*^9, 3.853344372974946*^9}, {3.853344482064899*^9, 
   3.853344518134556*^9}, {3.85334458257498*^9, 3.853344614154909*^9}, {
   3.853344653899578*^9, 3.853344680417095*^9}, {3.8533447183737717`*^9, 
   3.853344771718663*^9}, {3.853344810836145*^9, 3.853344858639656*^9}, {
   3.853344897429031*^9, 3.853344955379483*^9}, {3.853345030661523*^9, 
   3.853345082515747*^9}, {3.8533451274581823`*^9, 3.8533451697310047`*^9}, {
   3.853345682874544*^9, 3.853345684508353*^9}, {3.853345716548691*^9, 
   3.8533457233190002`*^9}, {3.853381618360655*^9, 3.8533817416607*^9}, {
   3.853381865680111*^9, 3.853381901499936*^9}, {3.8533819368255367`*^9, 
   3.853381944880416*^9}, {3.853381993520802*^9, 3.853381999261682*^9}, {
   3.8534076494624853`*^9, 3.853407665123721*^9}, {3.8534076982814083`*^9, 
   3.8534077204904547`*^9}, {3.853407750590496*^9, 3.8534077704063387`*^9}, {
   3.85392455155282*^9, 3.853924595311861*^9}, {3.853924918839533*^9, 
   3.853925016754274*^9}, {3.853925077420863*^9, 3.8539251209955378`*^9}, {
   3.853925167565221*^9, 3.853925206001247*^9}, {3.853925271533909*^9, 
   3.853925309820092*^9}, {3.853925343590403*^9, 3.853925711227367*^9}, {
   3.853925748913805*^9, 3.8539257805713053`*^9}, {3.853925820484473*^9, 
   3.8539258744855843`*^9}, {3.85392591913315*^9, 3.8539259494690742`*^9}, {
   3.853926029511346*^9, 3.853926270264135*^9}, {3.8539263074259453`*^9, 
   3.853926307746855*^9}, {3.853926344929881*^9, 3.8539264763059807`*^9}, {
   3.853926512002481*^9, 3.853926522442874*^9}, {3.8539266409235153`*^9, 
   3.853926984114407*^9}, {3.8539270221921587`*^9, 3.8539270393940563`*^9}, {
   3.853927091121996*^9, 3.8539272310658903`*^9}, {3.853927409445923*^9, 
   3.853927421985235*^9}, {3.853927564562333*^9, 3.853927567343402*^9}, {
   3.853927654159771*^9, 3.8539277090692587`*^9}, {3.853927780111969*^9, 
   3.853927810136269*^9}, {3.8539278778096237`*^9, 3.853927884059738*^9}, {
   3.8539281400176153`*^9, 3.853928187695158*^9}, {3.8539308175836773`*^9, 
   3.853930818705736*^9}, {3.853930877393237*^9, 3.853930931338331*^9}, {
   3.8539309732573566`*^9, 3.8539310408033943`*^9}, {3.853931295437249*^9, 
   3.853931429292457*^9}, {3.8539315413496647`*^9, 3.853931706408526*^9}, {
   3.85393178486801*^9, 3.853931788379201*^9}, {3.8539318384737186`*^9, 
   3.8539318464924107`*^9}, {3.8539318793224077`*^9, 3.853931948121437*^9}, {
   3.8539928199585047`*^9, 3.8539928216466846`*^9}, {3.8539928663517017`*^9, 
   3.85399286914642*^9}, {3.853995333096035*^9, 3.853995380216268*^9}, {
   3.853995413424711*^9, 3.853995419139779*^9}, {3.853995548553553*^9, 
   3.853995624303631*^9}, {3.853995681189666*^9, 3.85399581700518*^9}, 
   3.854011468645241*^9, {3.8540115122916317`*^9, 3.8540115506349916`*^9}, {
   3.8540116276738443`*^9, 3.854011656746676*^9}, {3.854011822543228*^9, 
   3.8540118516604013`*^9}, {3.854011912395299*^9, 3.854011948008545*^9}, {
   3.854012072822557*^9, 3.854012127023387*^9}, {3.854012176152795*^9, 
   3.854012226924963*^9}, {3.854012259231605*^9, 3.854012342304059*^9}, {
   3.8540124269852133`*^9, 3.854012440338554*^9}, {3.854012538300454*^9, 
   3.854012896793398*^9}, {3.8540379421936617`*^9, 3.8540379523693867`*^9}, {
   3.8540379996739798`*^9, 3.854038000153575*^9}, {3.854080088731284*^9, 
   3.854080241400519*^9}, {3.8540802807124357`*^9, 3.854080370824245*^9}, {
   3.854080416109068*^9, 3.854080422346904*^9}, {3.8540804598407383`*^9, 
   3.854080464503502*^9}, {3.854080495336522*^9, 3.8540805079615583`*^9}, {
   3.8540854965619392`*^9, 3.854085577172553*^9}, {3.854085608606051*^9, 
   3.854085687521646*^9}, {3.854085731993498*^9, 3.854085758298759*^9}, {
   3.854085855325885*^9, 3.854085863165483*^9}, {3.854085894132269*^9, 
   3.854086161335525*^9}, {3.854086194479783*^9, 3.8540862222663603`*^9}, {
   3.8540862776885967`*^9, 3.85408631224354*^9}, {3.854086377248396*^9, 
   3.854086380561508*^9}, {3.8540864437351723`*^9, 3.854086469085449*^9}, {
   3.8540865042926598`*^9, 3.854086549932534*^9}, {3.854086607468877*^9, 
   3.854086865610834*^9}, {3.854086925168047*^9, 3.854087013138384*^9}, {
   3.854087050139432*^9, 3.854087547042782*^9}, {3.8540875783950872`*^9, 
   3.8540877966087503`*^9}, {3.854087869118848*^9, 3.854087872665637*^9}, {
   3.8540880656015244`*^9, 3.854088075263275*^9}, {3.8540881364022408`*^9, 
   3.854088228502328*^9}, {3.854088275324998*^9, 3.8540883564578657`*^9}, {
   3.8540935532998533`*^9, 3.854093747227334*^9}, {3.8540937796713*^9, 
   3.85409379750145*^9}, {3.854093851358079*^9, 3.854094097315853*^9}, {
   3.854094138662713*^9, 3.8540941561286497`*^9}, {3.854094189548493*^9, 
   3.8540941914474573`*^9}, {3.854094226422876*^9, 3.8540943511133137`*^9}, {
   3.854094419792138*^9, 3.854094510126511*^9}, {3.85409454080873*^9, 
   3.854094559807012*^9}, {3.854094606009906*^9, 3.854094638783881*^9}, {
   3.854094682652494*^9, 3.854094698571128*^9}, {3.8540947590621243`*^9, 
   3.854094759384007*^9}, {3.854094793295108*^9, 3.854094793415203*^9}, {
   3.854094889311038*^9, 3.854094919509144*^9}, {3.85409506596216*^9, 
   3.854095323228327*^9}, {3.8540958002145863`*^9, 3.854095829691143*^9}, {
   3.85409592075023*^9, 3.854095935544239*^9}, {3.854096003870008*^9, 
   3.8540960101188517`*^9}, {3.854096081984603*^9, 3.854096087205689*^9}, {
   3.854096120482336*^9, 3.854096178564896*^9}, {3.854096239071808*^9, 
   3.854096242280452*^9}, {3.85409637407762*^9, 3.8540964532903137`*^9}, {
   3.854096580370517*^9, 3.8540965820721197`*^9}, {3.854096643873426*^9, 
   3.854096676508697*^9}, {3.854096737647306*^9, 3.854096758758514*^9}, {
   3.854096790612895*^9, 3.854096843925559*^9}, {3.8540968940928593`*^9, 
   3.854097006687459*^9}, {3.854097078384317*^9, 3.854097260987975*^9}, {
   3.8540973055959463`*^9, 3.854097383676642*^9}, {3.854097446090974*^9, 
   3.854097468624467*^9}, {3.8540976377259398`*^9, 3.85409765277361*^9}, {
   3.854098192732503*^9, 3.854098197212414*^9}, {3.8540983739679203`*^9, 
   3.854098419318194*^9}, {3.8540988574200783`*^9, 3.854098874853973*^9}, {
   3.854098989862759*^9, 3.8540990610943537`*^9}, {3.854099580499236*^9, 
   3.854099625184594*^9}, 3.854099715604536*^9, 3.854099804759334*^9, {
   3.854103247635091*^9, 3.8541032593406773`*^9}, {3.8541033069776917`*^9, 
   3.8541033073998137`*^9}, {3.854105563607264*^9, 3.85410557716746*^9}, {
   3.854105865766632*^9, 3.854105940984097*^9}, {3.854106023932127*^9, 
   3.854106042249963*^9}, 3.854106142457979*^9, {3.854106183270276*^9, 
   3.854106188236493*^9}, {3.8541064274527807`*^9, 3.854106427748427*^9}, {
   3.854106920706052*^9, 3.854106962395481*^9}, {3.854107355006659*^9, 
   3.854107390559164*^9}, {3.854107464796192*^9, 3.854107481586379*^9}, {
   3.854107569325757*^9, 3.854107581184328*^9}, {3.854107708504384*^9, 
   3.8541077395913477`*^9}, {3.854107885128338*^9, 3.854107949468198*^9}, {
   3.854108798907864*^9, 3.8541090429565077`*^9}, {3.8541092042934313`*^9, 
   3.854109224522584*^9}, {3.854165934515119*^9, 3.854165939806723*^9}, {
   3.854166023865834*^9, 3.8541660418570213`*^9}, {3.854167382137135*^9, 
   3.854167393292815*^9}, {3.854167444076626*^9, 3.85416744765604*^9}, {
   3.854203656150034*^9, 3.8542037200371113`*^9}, {3.8542039181852818`*^9, 
   3.854203931676036*^9}, {3.854203966963385*^9, 3.854204003275902*^9}, {
   3.854204038581327*^9, 3.8542040862369013`*^9}, {3.854204132470381*^9, 
   3.8542041530795393`*^9}, {3.854204199181514*^9, 3.854204216434844*^9}, {
   3.854204288232443*^9, 3.854204645594433*^9}, {3.8542046949737263`*^9, 
   3.854204888392997*^9}, {3.854204921494668*^9, 3.854204935290256*^9}, {
   3.854205027708044*^9, 3.8542051359594393`*^9}, {3.85420517854714*^9, 
   3.85420520252118*^9}, {3.854205602821906*^9, 3.854205623925737*^9}, {
   3.8542057095191317`*^9, 3.8542057142976217`*^9}, 3.854205749227532*^9, {
   3.854205815969548*^9, 3.854205841246126*^9}, {3.854205934929267*^9, 
   3.8542059833719473`*^9}, {3.85624834668925*^9, 3.856248370090815*^9}, {
   3.856258822601242*^9, 3.856258880408098*^9}, {3.8562643566290483`*^9, 
   3.856264515361978*^9}, {3.856264587303685*^9, 3.856264595654567*^9}, {
   3.856264641686758*^9, 3.856264646543477*^9}, 3.856264697371037*^9, {
   3.856266218181315*^9, 3.856266265309589*^9}, {3.8648731612104197`*^9, 
   3.86487324319944*^9}, {3.864873279382875*^9, 3.864873356156102*^9}, {
   3.864873389932777*^9, 3.864873472668882*^9}, {3.864873518342358*^9, 
   3.864873549460843*^9}, {3.864874168130307*^9, 3.8648741741326714`*^9}, {
   3.86487440285108*^9, 3.864874460207181*^9}, {3.8648744999178667`*^9, 
   3.8648745559487886`*^9}, {3.864874586030237*^9, 3.864874642191409*^9}, {
   3.864874755108639*^9, 3.86487495792163*^9}, {3.864875013638769*^9, 
   3.8648752143984423`*^9}, {3.864875252328133*^9, 3.8648752669511538`*^9}, {
   3.8648753336781797`*^9, 3.864875340367936*^9}, {3.864875440603174*^9, 
   3.8648754552592*^9}, {3.864875487138927*^9, 3.8648756015515003`*^9}, {
   3.864875646150199*^9, 3.8648756574427767`*^9}, {3.864875728858073*^9, 
   3.864875757206366*^9}, {3.8648757894020977`*^9, 3.864875854367709*^9}, {
   3.864875947155115*^9, 3.864875979466237*^9}, {3.864876125808241*^9, 
   3.864876127200335*^9}, {3.864876180608938*^9, 3.864876288525322*^9}, {
   3.864876351660781*^9, 3.864876352475305*^9}, {3.8648768968184767`*^9, 
   3.86487690189832*^9}, {3.8648776548592663`*^9, 3.8648777507515917`*^9}, {
   3.864880377164423*^9, 3.864880408773924*^9}, {3.8648806922352333`*^9, 
   3.864880768551421*^9}, {3.8648808058621273`*^9, 3.864880817444998*^9}, {
   3.8648808545727777`*^9, 3.864880865506236*^9}, {3.8648809005342493`*^9, 
   3.864880909199214*^9}, {3.864882295976788*^9, 3.864882339019505*^9}, {
   3.864882401410111*^9, 3.8648824223167067`*^9}, {3.864898392601178*^9, 
   3.864898437339892*^9}, {3.864902209972879*^9, 3.864902228565387*^9}, {
   3.866539382707962*^9, 3.866539382939261*^9}, {3.866539428994544*^9, 
   3.866539442212142*^9}, {3.8665395101884813`*^9, 3.866539577619453*^9}, {
   3.866539623543486*^9, 3.866539654068369*^9}, {3.8665396927092247`*^9, 
   3.8665400004717693`*^9}, {3.866540085120122*^9, 3.866540444091405*^9}, 
   3.8665405107324*^9, {3.8665407644691687`*^9, 3.866540796286146*^9}, {
   3.866540848783497*^9, 3.8665408995610123`*^9}, {3.8665409333847218`*^9, 
   3.866540964354241*^9}, {3.866541070761216*^9, 3.866541088234956*^9}, {
   3.866541173075671*^9, 3.866541200635931*^9}, {3.866541323797028*^9, 
   3.8665413439878483`*^9}, {3.866541397645172*^9, 3.866541401865611*^9}, {
   3.8665414737821712`*^9, 3.866541486070557*^9}, {3.866541641824884*^9, 
   3.8665416804073668`*^9}, {3.866542129901396*^9, 3.866542133091419*^9}, {
   3.86654240802556*^9, 3.866542430407654*^9}, {3.866542889121862*^9, 
   3.866542890029676*^9}, {3.866543100622946*^9, 3.866543223415862*^9}, {
   3.86654326021805*^9, 3.866543263431172*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples", "Section",
 CellChangeTimes->{{3.866541791168487*^9, 3.866541793008761*^9}}],

Cell[CellGroupData[{

Cell["66 bits security ", "Subsection",
 CellChangeTimes->{{3.866539105262838*^9, 3.866539185751379*^9}, {
  3.866542372445839*^9, 3.866542374006098*^9}, {3.870951122750996*^9, 
  3.8709511248695393`*^9}, {3.870951411807548*^9, 3.870951411962055*^9}, {
  3.873431700036619*^9, 3.873431701858612*^9}}],

Cell[CellGroupData[{

Cell["degree 2 extensions", "Subsubsection",
 CellChangeTimes->{{3.866546288401956*^9, 3.866546291697816*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "66"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsCode", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", 
   RowBox[{"{", 
    RowBox[{"100", ",", "100", ",", "100"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"capLevel", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"numHashes", ",", " ", "proofBytes"}], "}"}], "=", 
  RowBox[{"prover", "[", 
   RowBox[{"numPolys", ",", " ", "bitsCode", ",", " ", 
    RowBox[{"{", 
     RowBox[{"bitsSec", ",", "bitsRate", ",", "arities", ",", "capLevel"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<BitsBaseField\>\"", "\[Rule]", "64"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<ExtensionDegree\>\"", "\[Rule]", "2"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Hiding\>\"", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQ7atvw3Dj3BvHuppLYHqKfxMXiF7D3SsJorWjTRVA
9DUeWSUQ3ftwoR6InjM50QFEH7+xLAJEH7rfEQ9Wx6uSAqI9DjaD6V/VYnkg
etqBXDBtzHGoHESzyZ0A08Kr1i0F0S0TuVaD6GyPvxtBNOOh34dBdMCjjBsg
+pWt8m0QXZHS8QhEz1M3fQyiYzZkvALR0ifywPQ0M6X/N4F00xV1MH0nS+2O
w/U3jn+cZz4D0Q8vfPoHon3yWVgcgfSXpGhOEP1fuI0PRLNMDmD4cxuor2Ud
G4ies61UEETzJ8wC0wCppLKL
  "]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox["\<\"Code bits: \\!\\(12\\)\"\>",
      StringForm["Code bits: ``", 12],
      Editable->False]},
    {
     InterpretationBox["\<\"Sampling domain bits: \\!\\(15\\)\"\>",
      StringForm["Sampling domain bits: ``", 15],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of polynomials for batch open: \
\\!\\(300\\)\"\>",
      StringForm["Number of polynomials for batch open: ``", 300],
      Editable->False]},
    {
     InterpretationBox["\<\"Johnson proximity m: \\!\\(6\\)\"\>",
      StringForm["Johnson proximity m: ``", 6],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error commit phase: \
2^\\!\\(-67.37050978020018`\\)\"\>",
      StringForm["Soundness error commit phase: 2^``", -67.37050978020018],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of query rounds: \\!\\(48\\)\"\>",
      StringForm["Number of query rounds: ``", 48],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error query phase: \
2^\\!\\(-66.45709356384307`\\)\"\>",
      StringForm["Soundness error query phase: 2^``", -66.45709356384307],
      Editable->False]},
    {
     InterpretationBox["\<\"revealed poly size: \\!\\(32\\) FE\"\>",
      StringForm["revealed poly size: `` FE", 32],
      Editable->False]},
    {
     InterpretationBox["\<\"per round: \\!\\(72\\) path elems + \\!\\(348\\) \
values = \\!\\(420\\) FE\"\>",
      StringForm["per round: `` path elems + `` values = `` FE", 72, 348, 420],
      Editable->False]},
    {
     InterpretationBox["\<\"\\!\\(48\\) rounds: \\!\\(20160\\) FE\"\>",
      StringForm["`` rounds: `` FE", 48, 20160],
      Editable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.8665461708931227`*^9, {3.870951143774881*^9, 3.870951178403344*^9}, {
   3.870951212520018*^9, 3.870951221170415*^9}, {3.870951417555764*^9, 
   3.870951457271319*^9}, {3.870951500756414*^9, 3.870951540653863*^9}, 
   3.8734315239450493`*^9, {3.873431556525234*^9, 3.87343160579897*^9}, 
   3.873431693223435*^9, 3.873431966453249*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"17408", ",", "164096"}], "}"}]], "Output",
 CellChangeTimes->{
  3.86654617089966*^9, {3.870951143778926*^9, 3.870951178416106*^9}, {
   3.87095121253089*^9, 3.870951221181033*^9}, {3.8709514175654993`*^9, 
   3.870951457329879*^9}, {3.87095150077664*^9, 3.8709515406640463`*^9}, 
   3.873431523988371*^9, {3.8734315565756693`*^9, 3.873431605808683*^9}, 
   3.873431693234951*^9, 3.8734319664672537`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "66"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsCode", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", 
   RowBox[{"{", 
    RowBox[{"100", ",", "100", ",", "100"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"capLevel", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"numHashes", ",", " ", "proofBytes"}], "}"}], "=", 
  RowBox[{"prover", "[", 
   RowBox[{"numPolys", ",", " ", "bitsCode", ",", " ", 
    RowBox[{"{", 
     RowBox[{"bitsSec", ",", "bitsRate", ",", "arities", ",", "capLevel"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<BitsBaseField\>\"", "\[Rule]", "64"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<ExtensionDegree\>\"", "\[Rule]", "2"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Hiding\>\"", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.866542081880774*^9, 3.866542086577697*^9}, {
  3.866542164072214*^9, 3.866542284407675*^9}, {3.866542337667379*^9, 
  3.866542352907817*^9}, {3.866542453058783*^9, 3.8665425950492687`*^9}, {
  3.866542789213962*^9, 3.866542844277314*^9}, {3.866542881126689*^9, 
  3.866542884117344*^9}, {3.866542960702634*^9, 3.866542963429759*^9}, {
  3.866543038063501*^9, 3.866543038253665*^9}, {3.866543405458261*^9, 
  3.866543448330263*^9}, {3.86654350391509*^9, 3.866543647867432*^9}, {
  3.866543811277626*^9, 3.866543833101308*^9}, {3.8665438922622643`*^9, 
  3.866543897661086*^9}, {3.8665439552715282`*^9, 3.866543955461927*^9}, {
  3.873431614683632*^9, 3.873431614816596*^9}, {3.873431681359776*^9, 
  3.873431682971093*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox["\<\"Code bits: \\!\\(12\\)\"\>",
      StringForm["Code bits: ``", 12],
      Editable->False]},
    {
     InterpretationBox["\<\"Sampling domain bits: \\!\\(16\\)\"\>",
      StringForm["Sampling domain bits: ``", 16],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of polynomials for batch open: \
\\!\\(300\\)\"\>",
      StringForm["Number of polynomials for batch open: ``", 300],
      Editable->False]},
    {
     InterpretationBox["\<\"Johnson proximity m: \\!\\(4\\)\"\>",
      StringForm["Johnson proximity m: ``", 4],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error commit phase: \
2^\\!\\(-67.58411279706192`\\)\"\>",
      StringForm["Soundness error commit phase: 2^``", -67.58411279706192],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of query rounds: \\!\\(37\\)\"\>",
      StringForm["Number of query rounds: ``", 37],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error query phase: \
2^\\!\\(-67.71277494663444`\\)\"\>",
      StringForm["Soundness error query phase: 2^``", -67.71277494663444],
      Editable->False]},
    {
     InterpretationBox["\<\"revealed poly size: \\!\\(32\\) FE\"\>",
      StringForm["revealed poly size: `` FE", 32],
      Editable->False]},
    {
     InterpretationBox["\<\"per round: \\!\\(80\\) path elems + \\!\\(348\\) \
values = \\!\\(428\\) FE\"\>",
      StringForm["per round: `` path elems + `` values = `` FE", 80, 348, 428],
      Editable->False]},
    {
     InterpretationBox["\<\"\\!\\(37\\) rounds: \\!\\(15836\\) FE\"\>",
      StringForm["`` rounds: `` FE", 37, 15836],
      Editable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.866542196547394*^9, {3.86654223257095*^9, 3.866542284732374*^9}, {
   3.866542338678318*^9, 3.866542353117196*^9}, {3.8665424356466703`*^9, 
   3.866542527575019*^9}, {3.8665425726357393`*^9, 3.866542595294553*^9}, {
   3.866542790277342*^9, 3.866542845063671*^9}, 3.866542894768511*^9, 
   3.866542963853855*^9, 3.866543039306938*^9, 3.866543286186488*^9, {
   3.866543406729124*^9, 3.8665434488173637`*^9}, {3.866543504651679*^9, 
   3.866543605187439*^9}, 3.866543648328972*^9, {3.8665438121841097`*^9, 
   3.8665438335478277`*^9}, {3.866543893065481*^9, 3.866543898244235*^9}, 
   3.8665439561582403`*^9, 3.873431616469975*^9, 3.873431683364009*^9, 
   3.87343190980338*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"34816", ",", "129504"}], "}"}]], "Output",
 CellChangeTimes->{
  3.86654183404768*^9, 3.866542196543552*^9, {3.866542232569265*^9, 
   3.8665422847307463`*^9}, {3.8665423386765823`*^9, 3.866542353115292*^9}, {
   3.866542435644663*^9, 3.8665425275786858`*^9}, {3.86654257263724*^9, 
   3.866542595299255*^9}, {3.866542790282337*^9, 3.866542845067947*^9}, 
   3.866542894773161*^9, 3.8665429638588133`*^9, 3.86654303931131*^9, 
   3.866543286193061*^9, {3.866543406733096*^9, 3.866543448821344*^9}, {
   3.866543504655888*^9, 3.866543605191736*^9}, 3.866543648333084*^9, {
   3.866543812188031*^9, 3.866543833552979*^9}, {3.866543893071165*^9, 
   3.8665438982480583`*^9}, 3.86654395616363*^9, 3.873431616534539*^9, 
   3.873431683417756*^9, 3.873431909813448*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "66"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsCode", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", 
   RowBox[{"{", 
    RowBox[{"100", ",", "100", ",", "100"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"capLevel", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"numHashes", ",", " ", "proofBytes"}], "}"}], "=", 
  RowBox[{"prover", "[", 
   RowBox[{"numPolys", ",", " ", "bitsCode", ",", " ", 
    RowBox[{"{", 
     RowBox[{"bitsSec", ",", "bitsRate", ",", "arities", ",", "capLevel"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<BitsBaseField\>\"", "\[Rule]", "64"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<ExtensionDegree\>\"", "\[Rule]", "2"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Hiding\>\"", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.866542081880774*^9, 3.866542086577697*^9}, {
  3.866542164072214*^9, 3.866542284407675*^9}, {3.866542337667379*^9, 
  3.866542352907817*^9}, {3.866542453058783*^9, 3.8665425950492687`*^9}, {
  3.866542789213962*^9, 3.866542844277314*^9}, {3.866542881126689*^9, 
  3.866542884117344*^9}, {3.866542960702634*^9, 3.866542963429759*^9}, {
  3.866543038063501*^9, 3.866543038253665*^9}, {3.866543405458261*^9, 
  3.866543448330263*^9}, {3.86654350391509*^9, 3.866543647867432*^9}, {
  3.866543811277626*^9, 3.866543833101308*^9}, {3.8665438922622643`*^9, 
  3.866543897661086*^9}, {3.8665439552715282`*^9, 3.866543973703104*^9}, {
  3.8665440490707684`*^9, 3.866544055775215*^9}, {3.8665445174204607`*^9, 
  3.866544536170089*^9}, {3.866545202939295*^9, 3.866545211280684*^9}, {
  3.8709516767272587`*^9, 3.870951695207202*^9}, {3.8734316379725027`*^9, 
  3.87343165634984*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox["\<\"Code bits: \\!\\(12\\)\"\>",
      StringForm["Code bits: ``", 12],
      Editable->False]},
    {
     InterpretationBox["\<\"Sampling domain bits: \\!\\(17\\)\"\>",
      StringForm["Sampling domain bits: ``", 17],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of polynomials for batch open: \
\\!\\(300\\)\"\>",
      StringForm["Number of polynomials for batch open: ``", 300],
      Editable->False]},
    {
     InterpretationBox["\<\"Johnson proximity m: \\!\\(3\\)\"\>",
      StringForm["Johnson proximity m: ``", 3],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error commit phase: \
2^\\!\\(-66.62210335274801`\\)\"\>",
      StringForm["Soundness error commit phase: 2^``", -66.62210335274801],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of query rounds: \\!\\(29\\)\"\>",
      StringForm["Number of query rounds: ``", 29],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error query phase: \
2^\\!\\(-66.050619781243`\\)\"\>",
      StringForm["Soundness error query phase: 2^``", -66.050619781243],
      Editable->False]},
    {
     InterpretationBox["\<\"revealed poly size: \\!\\(32\\) FE\"\>",
      StringForm["revealed poly size: `` FE", 32],
      Editable->False]},
    {
     InterpretationBox["\<\"per round: \\!\\(88\\) path elems + \\!\\(348\\) \
values = \\!\\(436\\) FE\"\>",
      StringForm["per round: `` path elems + `` values = `` FE", 88, 348, 436],
      Editable->False]},
    {
     InterpretationBox["\<\"\\!\\(29\\) rounds: \\!\\(12644\\) FE\"\>",
      StringForm["`` rounds: `` FE", 29, 12644],
      Editable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.866542196547394*^9, {3.86654223257095*^9, 3.866542284732374*^9}, {
   3.866542338678318*^9, 3.866542353117196*^9}, {3.8665424356466703`*^9, 
   3.866542527575019*^9}, {3.8665425726357393`*^9, 3.866542595294553*^9}, {
   3.866542790277342*^9, 3.866542845063671*^9}, 3.866542894768511*^9, 
   3.866542963853855*^9, 3.866543039306938*^9, 3.866543286186488*^9, {
   3.866543406729124*^9, 3.8665434488173637`*^9}, {3.866543504651679*^9, 
   3.866543605187439*^9}, 3.866543648328972*^9, {3.8665438121841097`*^9, 
   3.8665438335478277`*^9}, {3.866543893065481*^9, 3.866543898244235*^9}, {
   3.8665439561582403`*^9, 3.8665439757646217`*^9}, {3.866544049637267*^9, 
   3.866544056211337*^9}, {3.866544520664857*^9, 3.86654453653449*^9}, {
   3.866545204012076*^9, 3.866545211875614*^9}, {3.870951681635297*^9, 
   3.8709516954945307`*^9}, {3.873431638863162*^9, 3.8734316567580357`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"69632", ",", "103968"}], "}"}]], "Output",
 CellChangeTimes->{
  3.86654183404768*^9, 3.866542196543552*^9, {3.866542232569265*^9, 
   3.8665422847307463`*^9}, {3.8665423386765823`*^9, 3.866542353115292*^9}, {
   3.866542435644663*^9, 3.8665425275786858`*^9}, {3.86654257263724*^9, 
   3.866542595299255*^9}, {3.866542790282337*^9, 3.866542845067947*^9}, 
   3.866542894773161*^9, 3.8665429638588133`*^9, 3.86654303931131*^9, 
   3.866543286193061*^9, {3.866543406733096*^9, 3.866543448821344*^9}, {
   3.866543504655888*^9, 3.866543605191736*^9}, 3.866543648333084*^9, {
   3.866543812188031*^9, 3.866543833552979*^9}, {3.866543893071165*^9, 
   3.8665438982480583`*^9}, {3.86654395616363*^9, 3.866543975768345*^9}, {
   3.8665440496407337`*^9, 3.866544056216234*^9}, {3.866544520669153*^9, 
   3.8665445365393677`*^9}, {3.866545204015991*^9, 3.8665452118798847`*^9}, {
   3.8709516816767197`*^9, 3.870951695504098*^9}, {3.873431638877461*^9, 
   3.8734316567678013`*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["degree 3 extensions", "Subsubsection",
 CellChangeTimes->{{3.8665463042264023`*^9, 3.86654630885823*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "66"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsCode", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", 
   RowBox[{"{", 
    RowBox[{"100", ",", "100", ",", "100"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"capLevel", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"numHashes", ",", " ", "proofBytes"}], "}"}], "=", 
  RowBox[{"prover", "[", 
   RowBox[{"numPolys", ",", " ", "bitsCode", ",", " ", 
    RowBox[{"{", 
     RowBox[{"bitsSec", ",", "bitsRate", ",", "arities", ",", "capLevel"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<BitsBaseField\>\"", "\[Rule]", "64"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<ExtensionDegree\>\"", "\[Rule]", "3"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Hiding\>\"", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.866542081880774*^9, 3.866542086577697*^9}, {
  3.866542164072214*^9, 3.866542284407675*^9}, {3.866542337667379*^9, 
  3.866542352907817*^9}, {3.866542453058783*^9, 3.8665425950492687`*^9}, {
  3.866542653028118*^9, 3.866542653357418*^9}, {3.866543727909346*^9, 
  3.866543760565065*^9}, {3.8665442582169943`*^9, 3.8665442821528673`*^9}, {
  3.866544418602263*^9, 3.866544438520904*^9}, {3.866545280283021*^9, 
  3.86654528043489*^9}, {3.873432080553018*^9, 3.87343208201306*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox["\<\"Code bits: \\!\\(12\\)\"\>",
      StringForm["Code bits: ``", 12],
      Editable->False]},
    {
     InterpretationBox["\<\"Sampling domain bits: \\!\\(18\\)\"\>",
      StringForm["Sampling domain bits: ``", 18],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of polynomials for batch open: \
\\!\\(300\\)\"\>",
      StringForm["Number of polynomials for batch open: ``", 300],
      Editable->False]},
    {
     InterpretationBox["\<\"Johnson proximity m: \\!\\(1487\\)\"\>",
      StringForm["Johnson proximity m: ``", 1487],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error commit phase: \
2^\\!\\(-66.00287013563255`\\)\"\>",
      StringForm["Soundness error commit phase: 2^``", -66.00287013563255],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of query rounds: \\!\\(23\\)\"\>",
      StringForm["Number of query rounds: ``", 23],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error query phase: \
2^\\!\\(-68.98884451630427`\\)\"\>",
      StringForm["Soundness error query phase: 2^``", -68.98884451630427],
      Editable->False]},
    {
     InterpretationBox["\<\"revealed poly size: \\!\\(32\\) FE\"\>",
      StringForm["revealed poly size: `` FE", 32],
      Editable->False]},
    {
     InterpretationBox["\<\"per round: \\!\\(96\\) path elems + \\!\\(372\\) \
values = \\!\\(468\\) FE\"\>",
      StringForm["per round: `` path elems + `` values = `` FE", 96, 372, 468],
      Editable->False]},
    {
     InterpretationBox["\<\"\\!\\(23\\) rounds: \\!\\(10764\\) FE\"\>",
      StringForm["`` rounds: `` FE", 23, 10764],
      Editable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.866542196547394*^9, {3.86654223257095*^9, 3.866542284732374*^9}, {
   3.866542338678318*^9, 3.866542353117196*^9}, {3.8665424356466703`*^9, 
   3.866542527575019*^9}, {3.8665425726357393`*^9, 3.866542595294553*^9}, 
   3.8665426825107327`*^9, {3.866543739713994*^9, 3.866543763471264*^9}, {
   3.866544259666651*^9, 3.866544282418334*^9}, {3.86654442071981*^9, 
   3.866544438934843*^9}, 3.866545287930093*^9, 3.873432044002719*^9, 
   3.873432083202064*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"208896", ",", "88928"}], "}"}]], "Output",
 CellChangeTimes->{
  3.86654183404768*^9, 3.866542196543552*^9, {3.866542232569265*^9, 
   3.8665422847307463`*^9}, {3.8665423386765823`*^9, 3.866542353115292*^9}, {
   3.866542435644663*^9, 3.8665425275786858`*^9}, {3.86654257263724*^9, 
   3.866542595299255*^9}, 3.866542682517784*^9, {3.8665437397185926`*^9, 
   3.866543763475625*^9}, {3.866544259673326*^9, 3.866544282422586*^9}, {
   3.8665444207249413`*^9, 3.866544438939168*^9}, 3.866545287936496*^9, 
   3.873432044014929*^9, 3.873432083211025*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "66"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsCode", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", 
   RowBox[{"{", 
    RowBox[{"100", ",", "100", ",", "100"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"capLevel", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"numHashes", ",", " ", "proofBytes"}], "}"}], "=", 
  RowBox[{"prover", "[", 
   RowBox[{"numPolys", ",", " ", "bitsCode", ",", " ", 
    RowBox[{"{", 
     RowBox[{"bitsSec", ",", "bitsRate", ",", "arities", ",", "capLevel"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<BitsBaseField\>\"", "\[Rule]", "64"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<ExtensionDegree\>\"", "\[Rule]", "3"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Hiding\>\"", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.866542081880774*^9, 3.866542086577697*^9}, {
  3.866542164072214*^9, 3.866542284407675*^9}, {3.866542337667379*^9, 
  3.866542352907817*^9}, {3.866542453058783*^9, 3.8665425950492687`*^9}, {
  3.866542653028118*^9, 3.866542653357418*^9}, {3.866543727909346*^9, 
  3.866543760565065*^9}, {3.8665442582169943`*^9, 3.8665442821528673`*^9}, {
  3.866544418602263*^9, 3.866544438520904*^9}, {3.866545280283021*^9, 
  3.86654528043489*^9}, {3.8665456837407703`*^9, 3.866545684239642*^9}, {
  3.866545751649472*^9, 3.8665457745284*^9}, {3.866545814289102*^9, 
  3.866545815048725*^9}, {3.86654638683984*^9, 3.866546392637619*^9}, {
  3.866546441991837*^9, 3.866546445822172*^9}, {3.87343208811248*^9, 
  3.873432090271261*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox["\<\"Code bits: \\!\\(12\\)\"\>",
      StringForm["Code bits: ``", 12],
      Editable->False]},
    {
     InterpretationBox["\<\"Sampling domain bits: \\!\\(20\\)\"\>",
      StringForm["Sampling domain bits: ``", 20],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of polynomials for batch open: \
\\!\\(300\\)\"\>",
      StringForm["Number of polynomials for batch open: ``", 300],
      Editable->False]},
    {
     InterpretationBox["\<\"Johnson proximity m: \\!\\(743\\)\"\>",
      StringForm["Johnson proximity m: ``", 743],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error commit phase: \
2^\\!\\(-66.0062652828443`\\)\"\>",
      StringForm["Soundness error commit phase: 2^``", -66.0062652828443],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of query rounds: \\!\\(17\\)\"\>",
      StringForm["Number of query rounds: ``", 17],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error query phase: \
2^\\!\\(-67.98350096426502`\\)\"\>",
      StringForm["Soundness error query phase: 2^``", -67.98350096426502],
      Editable->False]},
    {
     InterpretationBox["\<\"revealed poly size: \\!\\(32\\) FE\"\>",
      StringForm["revealed poly size: `` FE", 32],
      Editable->False]},
    {
     InterpretationBox["\<\"per round: \\!\\(120\\) path elems + \\!\\(372\\) \
values = \\!\\(492\\) FE\"\>",
      StringForm[
      "per round: `` path elems + `` values = `` FE", 120, 372, 492],
      Editable->False]},
    {
     InterpretationBox["\<\"\\!\\(17\\) rounds: \\!\\(8364\\) FE\"\>",
      StringForm["`` rounds: `` FE", 17, 8364],
      Editable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.866545685589541*^9, {3.86654575270338*^9, 3.866545775046981*^9}, 
   3.866545815414405*^9, 3.8665463933320017`*^9, {3.8665464425425262`*^9, 
   3.866546446143752*^9}, 3.873432050163537*^9, 3.87343210487059*^9, 
   3.873432285558159*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"835584", ",", "68448"}], "}"}]], "Output",
 CellChangeTimes->{
  3.866545685595701*^9, {3.8665457527071*^9, 3.866545775051065*^9}, 
   3.866545815417647*^9, 3.8665463933368607`*^9, {3.866546442546414*^9, 
   3.8665464461478643`*^9}, 3.873432050171823*^9, 3.8734321048807373`*^9, 
   3.8734322855681*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "66"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsCode", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", 
   RowBox[{"{", 
    RowBox[{"100", ",", "100", ",", "100"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"capLevel", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"numHashes", ",", " ", "proofBytes"}], "}"}], "=", 
  RowBox[{"prover", "[", 
   RowBox[{"numPolys", ",", " ", "bitsCode", ",", " ", 
    RowBox[{"{", 
     RowBox[{"bitsSec", ",", "bitsRate", ",", "arities", ",", "capLevel"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<BitsBaseField\>\"", "\[Rule]", "64"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<ExtensionDegree\>\"", "\[Rule]", "3"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Hiding\>\"", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.866542081880774*^9, 3.866542086577697*^9}, {
  3.866542164072214*^9, 3.866542284407675*^9}, {3.866542337667379*^9, 
  3.866542352907817*^9}, {3.866542453058783*^9, 3.8665425950492687`*^9}, {
  3.866542653028118*^9, 3.866542653357418*^9}, {3.866543727909346*^9, 
  3.866543760565065*^9}, {3.8665442582169943`*^9, 3.8665442821528673`*^9}, {
  3.866544418602263*^9, 3.866544438520904*^9}, {3.866545280283021*^9, 
  3.86654528043489*^9}, {3.8665456837407703`*^9, 3.866545684239642*^9}, {
  3.866545751649472*^9, 3.8665457745284*^9}, {3.866545814289102*^9, 
  3.866545815048725*^9}, {3.86654638683984*^9, 3.866546392637619*^9}, {
  3.866546441991837*^9, 3.8665464849823513`*^9}, {3.8734321084302473`*^9, 
  3.873432109012042*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox["\<\"Code bits: \\!\\(12\\)\"\>",
      StringForm["Code bits: ``", 12],
      Editable->False]},
    {
     InterpretationBox["\<\"Sampling domain bits: \\!\\(22\\)\"\>",
      StringForm["Sampling domain bits: ``", 22],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of polynomials for batch open: \
\\!\\(300\\)\"\>",
      StringForm["Number of polynomials for batch open: ``", 300],
      Editable->False]},
    {
     InterpretationBox["\<\"Johnson proximity m: \\!\\(371\\)\"\>",
      StringForm["Johnson proximity m: ``", 371],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error commit phase: \
2^\\!\\(-66.01305900344104`\\)\"\>",
      StringForm["Soundness error commit phase: 2^``", -66.01305900344104],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of query rounds: \\!\\(14\\)\"\>",
      StringForm["Number of query rounds: ``", 14],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error query phase: \
2^\\!\\(-69.97279766515089`\\)\"\>",
      StringForm["Soundness error query phase: 2^``", -69.97279766515089],
      Editable->False]},
    {
     InterpretationBox["\<\"revealed poly size: \\!\\(32\\) FE\"\>",
      StringForm["revealed poly size: `` FE", 32],
      Editable->False]},
    {
     InterpretationBox["\<\"per round: \\!\\(136\\) path elems + \\!\\(372\\) \
values = \\!\\(508\\) FE\"\>",
      StringForm[
      "per round: `` path elems + `` values = `` FE", 136, 372, 508],
      Editable->False]},
    {
     InterpretationBox["\<\"\\!\\(14\\) rounds: \\!\\(7112\\) FE\"\>",
      StringForm["`` rounds: `` FE", 14, 7112],
      Editable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{{3.8665464699777184`*^9, 3.866546485252984*^9}, 
   3.873432053621418*^9, 3.8734321095923967`*^9, 3.873432332863721*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3342336", ",", "58432"}], "}"}]], "Output",
 CellChangeTimes->{{3.866546469986479*^9, 3.866546485256516*^9}, 
   3.873432053635462*^9, 3.8734321096152067`*^9, 3.8734323328813763`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["108 bits security", "Subsection",
 CellChangeTimes->{{3.873433608264882*^9, 3.87343361127931*^9}}],

Cell[CellGroupData[{

Cell["degree 3 extensions", "Subsubsection",
 CellChangeTimes->{{3.8734336218789167`*^9, 3.8734336251821957`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "109"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsCode", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "11"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", 
   RowBox[{"{", 
    RowBox[{"100", ",", "100", ",", "100"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"capLevel", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"numHashes", ",", " ", "proofBytes"}], "}"}], "=", 
  RowBox[{"prover", "[", 
   RowBox[{"numPolys", ",", " ", "bitsCode", ",", " ", 
    RowBox[{"{", 
     RowBox[{"bitsSec", ",", "bitsRate", ",", "arities", ",", "capLevel"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<BitsBaseField\>\"", "\[Rule]", "64"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<ExtensionDegree\>\"", "\[Rule]", "3"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Hiding\>\"", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.866542081880774*^9, 3.866542086577697*^9}, {
  3.866542164072214*^9, 3.866542284407675*^9}, {3.866542337667379*^9, 
  3.866542352907817*^9}, {3.866542453058783*^9, 3.8665425950492687`*^9}, {
  3.866542653028118*^9, 3.866542653357418*^9}, {3.866543727909346*^9, 
  3.866543760565065*^9}, {3.8665442582169943`*^9, 3.8665442821528673`*^9}, {
  3.866544418602263*^9, 3.866544438520904*^9}, {3.866545280283021*^9, 
  3.86654528043489*^9}, {3.8665456837407703`*^9, 3.866545684239642*^9}, {
  3.866545751649472*^9, 3.8665457745284*^9}, {3.866545814289102*^9, 
  3.866545815048725*^9}, {3.86654638683984*^9, 3.866546392637619*^9}, {
  3.866546441991837*^9, 3.8665464849823513`*^9}, {3.8665471265816317`*^9, 
  3.866547128117547*^9}, {3.8734333515951853`*^9, 3.873433383023844*^9}, {
  3.873433666419137*^9, 3.8734337493066072`*^9}, {3.87343383626921*^9, 
  3.873433842751458*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox["\<\"Code bits: \\!\\(12\\)\"\>",
      StringForm["Code bits: ``", 12],
      Editable->False]},
    {
     InterpretationBox["\<\"Sampling domain bits: \\!\\(23\\)\"\>",
      StringForm["Sampling domain bits: ``", 23],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of polynomials for batch open: \
\\!\\(300\\)\"\>",
      StringForm["Number of polynomials for batch open: ``", 300],
      Editable->False]},
    {
     InterpretationBox["\<\"Johnson proximity m: \\!\\(3\\)\"\>",
      StringForm["Johnson proximity m: ``", 3],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error commit phase: \
2^\\!\\(-109.62210335280797`\\)\"\>",
      StringForm["Soundness error commit phase: 2^``", -109.62210335280797`],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of query rounds: \\!\\(21\\)\"\>",
      StringForm["Number of query rounds: ``", 21],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error query phase: \
2^\\!\\(-110.8297591519346`\\)\"\>",
      StringForm["Soundness error query phase: 2^``", -110.8297591519346],
      Editable->False]},
    {
     InterpretationBox["\<\"revealed poly size: \\!\\(32\\) FE\"\>",
      StringForm["revealed poly size: `` FE", 32],
      Editable->False]},
    {
     InterpretationBox["\<\"per round: \\!\\(144\\) path elems + \\!\\(372\\) \
values = \\!\\(516\\) FE\"\>",
      StringForm[
      "per round: `` path elems + `` values = `` FE", 144, 372, 516],
      Editable->False]},
    {
     InterpretationBox["\<\"\\!\\(21\\) rounds: \\!\\(10836\\) FE\"\>",
      StringForm["`` rounds: `` FE", 21, 10836],
      Editable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{{3.8665464699777184`*^9, 3.866546485252984*^9}, 
   3.8665471289238253`*^9, 3.873432384031633*^9, {3.8734333521524897`*^9, 
   3.873433383680979*^9}, 3.8734336303163643`*^9, {3.873433667724721*^9, 
   3.873433749913817*^9}, {3.873433837268221*^9, 3.873433843472378*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6684672", ",", "88224"}], "}"}]], "Output",
 CellChangeTimes->{{3.866546469986479*^9, 3.866546485256516*^9}, 
   3.866547128929674*^9, 3.873432384050846*^9, {3.873433352161626*^9, 
   3.873433383692193*^9}, 3.8734336303700647`*^9, {3.873433667736868*^9, 
   3.8734337499648237`*^9}, {3.8734338372827044`*^9, 3.873433843484642*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["112 bits security ", "Subsection",
 CellChangeTimes->{{3.866539105262838*^9, 3.866539185751379*^9}, {
  3.866542372445839*^9, 3.866542374006098*^9}, {3.866547085257069*^9, 
  3.866547093968883*^9}}],

Cell[CellGroupData[{

Cell["degree 3 extensions", "Subsubsection",
 CellChangeTimes->{{3.8665463042264023`*^9, 3.86654630885823*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "112"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsCode", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", 
   RowBox[{"{", 
    RowBox[{"100", ",", "100", ",", "100"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"capLevel", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"numHashes", ",", " ", "proofBytes"}], "}"}], "=", 
  RowBox[{"prover", "[", 
   RowBox[{"numPolys", ",", " ", "bitsCode", ",", " ", 
    RowBox[{"{", 
     RowBox[{"bitsSec", ",", "bitsRate", ",", "arities", ",", "capLevel"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<BitsBaseField\>\"", "\[Rule]", "64"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<ExtensionDegree\>\"", "\[Rule]", "3"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Hiding\>\"", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.866542081880774*^9, 3.866542086577697*^9}, {
  3.866542164072214*^9, 3.866542284407675*^9}, {3.866542337667379*^9, 
  3.866542352907817*^9}, {3.866542453058783*^9, 3.8665425950492687`*^9}, {
  3.866542653028118*^9, 3.866542653357418*^9}, {3.866543727909346*^9, 
  3.866543760565065*^9}, {3.8665442582169943`*^9, 3.8665442821528673`*^9}, {
  3.866544418602263*^9, 3.866544438520904*^9}, {3.866545280283021*^9, 
  3.86654528043489*^9}, {3.8665471027175903`*^9, 3.866547104002684*^9}, {
  3.866547196399304*^9, 3.866547210028801*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox["\<\"Code bits: \\!\\(12\\)\"\>",
      StringForm["Code bits: ``", 12],
      Editable->False]},
    {
     InterpretationBox["\<\"Sampling domain bits: \\!\\(18\\)\"\>",
      StringForm["Sampling domain bits: ``", 18],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of polynomials for batch open: \
\\!\\(300\\)\"\>",
      StringForm["Number of polynomials for batch open: ``", 300],
      Editable->False]},
    {
     InterpretationBox["\<\"Johnson proximity m: \\!\\(15\\)\"\>",
      StringForm["Johnson proximity m: ``", 15],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error commit phase: \
2^\\!\\(-112.09421363450309`\\)\"\>",
      StringForm["Soundness error commit phase: 2^``", -112.09421363450309`],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of query rounds: \\!\\(38\\)\"\>",
      StringForm["Number of query rounds: ``", 38],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error query phase: \
2^\\!\\(-112.20238283842245`\\)\"\>",
      StringForm["Soundness error query phase: 2^``", -112.20238283842245`],
      Editable->False]},
    {
     InterpretationBox["\<\"revealed poly size: \\!\\(32\\) FE\"\>",
      StringForm["revealed poly size: `` FE", 32],
      Editable->False]},
    {
     InterpretationBox["\<\"per round: \\!\\(96\\) path elems + \\!\\(372\\) \
values = \\!\\(468\\) FE\"\>",
      StringForm["per round: `` path elems + `` values = `` FE", 96, 372, 468],
      Editable->False]},
    {
     InterpretationBox["\<\"\\!\\(38\\) rounds: \\!\\(17784\\) FE\"\>",
      StringForm["`` rounds: `` FE", 38, 17784],
      Editable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.866542196547394*^9, {3.86654223257095*^9, 3.866542284732374*^9}, {
   3.866542338678318*^9, 3.866542353117196*^9}, {3.8665424356466703`*^9, 
   3.866542527575019*^9}, {3.8665425726357393`*^9, 3.866542595294553*^9}, 
   3.8665426825107327`*^9, {3.866543739713994*^9, 3.866543763471264*^9}, {
   3.866544259666651*^9, 3.866544282418334*^9}, {3.86654442071981*^9, 
   3.866544438934843*^9}, 3.866545287930093*^9, 3.866547106431048*^9, {
   3.8665471970936728`*^9, 3.866547210391577*^9}, 3.8665472861898737`*^9, 
   3.8734323747154083`*^9, 3.873432525698695*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"208896", ",", "145088"}], "}"}]], "Output",
 CellChangeTimes->{
  3.86654183404768*^9, 3.866542196543552*^9, {3.866542232569265*^9, 
   3.8665422847307463`*^9}, {3.8665423386765823`*^9, 3.866542353115292*^9}, {
   3.866542435644663*^9, 3.8665425275786858`*^9}, {3.86654257263724*^9, 
   3.866542595299255*^9}, 3.866542682517784*^9, {3.8665437397185926`*^9, 
   3.866543763475625*^9}, {3.866544259673326*^9, 3.866544282422586*^9}, {
   3.8665444207249413`*^9, 3.866544438939168*^9}, 3.866545287936496*^9, 
   3.8665471064359503`*^9, {3.866547197099378*^9, 3.866547210396707*^9}, 
   3.8665472861949577`*^9, 3.873432374726125*^9, 3.873432525713697*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "112"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsCode", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", 
   RowBox[{"{", 
    RowBox[{"100", ",", "100", ",", "100"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"capLevel", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"numHashes", ",", " ", "proofBytes"}], "}"}], "=", 
  RowBox[{"prover", "[", 
   RowBox[{"numPolys", ",", " ", "bitsCode", ",", " ", 
    RowBox[{"{", 
     RowBox[{"bitsSec", ",", "bitsRate", ",", "arities", ",", "capLevel"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<BitsBaseField\>\"", "\[Rule]", "64"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<ExtensionDegree\>\"", "\[Rule]", "3"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Hiding\>\"", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.866542081880774*^9, 3.866542086577697*^9}, {
  3.866542164072214*^9, 3.866542284407675*^9}, {3.866542337667379*^9, 
  3.866542352907817*^9}, {3.866542453058783*^9, 3.8665425950492687`*^9}, {
  3.866542653028118*^9, 3.866542653357418*^9}, {3.866543727909346*^9, 
  3.866543760565065*^9}, {3.8665442582169943`*^9, 3.8665442821528673`*^9}, {
  3.866544418602263*^9, 3.866544438520904*^9}, {3.866545280283021*^9, 
  3.86654528043489*^9}, {3.8665456837407703`*^9, 3.866545684239642*^9}, {
  3.866545751649472*^9, 3.8665457745284*^9}, {3.866545814289102*^9, 
  3.866545815048725*^9}, {3.86654638683984*^9, 3.866546392637619*^9}, {
  3.866546441991837*^9, 3.866546445822172*^9}, {3.8665471207429256`*^9, 
  3.8665471216455803`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox["\<\"Code bits: \\!\\(12\\)\"\>",
      StringForm["Code bits: ``", 12],
      Editable->False]},
    {
     InterpretationBox["\<\"Sampling domain bits: \\!\\(20\\)\"\>",
      StringForm["Sampling domain bits: ``", 20],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of polynomials for batch open: \
\\!\\(300\\)\"\>",
      StringForm["Number of polynomials for batch open: ``", 300],
      Editable->False]},
    {
     InterpretationBox["\<\"Johnson proximity m: \\!\\(7\\)\"\>",
      StringForm["Johnson proximity m: ``", 7],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error commit phase: \
2^\\!\\(-112.42535363795157`\\)\"\>",
      StringForm["Soundness error commit phase: 2^``", -112.42535363795157`],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of query rounds: \\!\\(29\\)\"\>",
      StringForm["Number of query rounds: ``", 29],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error query phase: \
2^\\!\\(-113.11346546702347`\\)\"\>",
      StringForm["Soundness error query phase: 2^``", -113.11346546702347`],
      Editable->False]},
    {
     InterpretationBox["\<\"revealed poly size: \\!\\(32\\) FE\"\>",
      StringForm["revealed poly size: `` FE", 32],
      Editable->False]},
    {
     InterpretationBox["\<\"per round: \\!\\(120\\) path elems + \\!\\(372\\) \
values = \\!\\(492\\) FE\"\>",
      StringForm[
      "per round: `` path elems + `` values = `` FE", 120, 372, 492],
      Editable->False]},
    {
     InterpretationBox["\<\"\\!\\(29\\) rounds: \\!\\(14268\\) FE\"\>",
      StringForm["`` rounds: `` FE", 29, 14268],
      Editable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.866545685589541*^9, {3.86654575270338*^9, 3.866545775046981*^9}, 
   3.866545815414405*^9, 3.8665463933320017`*^9, {3.8665464425425262`*^9, 
   3.866546446143752*^9}, 3.866547122055551*^9, 3.873432380646006*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"835584", ",", "115680"}], "}"}]], "Output",
 CellChangeTimes->{
  3.866545685595701*^9, {3.8665457527071*^9, 3.866545775051065*^9}, 
   3.866545815417647*^9, 3.8665463933368607`*^9, {3.866546442546414*^9, 
   3.8665464461478643`*^9}, 3.866547122062665*^9, 3.873432380659433*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "112"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsCode", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", 
   RowBox[{"{", 
    RowBox[{"100", ",", "100", ",", "100"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"capLevel", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"numHashes", ",", " ", "proofBytes"}], "}"}], "=", 
  RowBox[{"prover", "[", 
   RowBox[{"numPolys", ",", " ", "bitsCode", ",", " ", 
    RowBox[{"{", 
     RowBox[{"bitsSec", ",", "bitsRate", ",", "arities", ",", "capLevel"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<BitsBaseField\>\"", "\[Rule]", "64"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<ExtensionDegree\>\"", "\[Rule]", "3"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Hiding\>\"", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.866542081880774*^9, 3.866542086577697*^9}, {
  3.866542164072214*^9, 3.866542284407675*^9}, {3.866542337667379*^9, 
  3.866542352907817*^9}, {3.866542453058783*^9, 3.8665425950492687`*^9}, {
  3.866542653028118*^9, 3.866542653357418*^9}, {3.866543727909346*^9, 
  3.866543760565065*^9}, {3.8665442582169943`*^9, 3.8665442821528673`*^9}, {
  3.866544418602263*^9, 3.866544438520904*^9}, {3.866545280283021*^9, 
  3.86654528043489*^9}, {3.8665456837407703`*^9, 3.866545684239642*^9}, {
  3.866545751649472*^9, 3.8665457745284*^9}, {3.866545814289102*^9, 
  3.866545815048725*^9}, {3.86654638683984*^9, 3.866546392637619*^9}, {
  3.866546441991837*^9, 3.8665464849823513`*^9}, {3.8665471265816317`*^9, 
  3.866547128117547*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox["\<\"Code bits: \\!\\(12\\)\"\>",
      StringForm["Code bits: ``", 12],
      Editable->False]},
    {
     InterpretationBox["\<\"Sampling domain bits: \\!\\(22\\)\"\>",
      StringForm["Sampling domain bits: ``", 22],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of polynomials for batch open: \
\\!\\(300\\)\"\>",
      StringForm["Number of polynomials for batch open: ``", 300],
      Editable->False]},
    {
     InterpretationBox["\<\"Johnson proximity m: \\!\\(3\\)\"\>",
      StringForm["Johnson proximity m: ``", 3],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error commit phase: \
2^\\!\\(-113.12210335280793`\\)\"\>",
      StringForm["Soundness error commit phase: 2^``", -113.12210335280793`],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of query rounds: \\!\\(24\\)\"\>",
      StringForm["Number of query rounds: ``", 24],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error query phase: \
2^\\!\\(-114.66258188792526`\\)\"\>",
      StringForm["Soundness error query phase: 2^``", -114.66258188792526`],
      Editable->False]},
    {
     InterpretationBox["\<\"revealed poly size: \\!\\(32\\) FE\"\>",
      StringForm["revealed poly size: `` FE", 32],
      Editable->False]},
    {
     InterpretationBox["\<\"per round: \\!\\(136\\) path elems + \\!\\(372\\) \
values = \\!\\(508\\) FE\"\>",
      StringForm[
      "per round: `` path elems + `` values = `` FE", 136, 372, 508],
      Editable->False]},
    {
     InterpretationBox["\<\"\\!\\(24\\) rounds: \\!\\(12192\\) FE\"\>",
      StringForm["`` rounds: `` FE", 24, 12192],
      Editable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{{3.8665464699777184`*^9, 3.866546485252984*^9}, 
   3.8665471289238253`*^9, 3.873432384031633*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3342336", ",", "99072"}], "}"}]], "Output",
 CellChangeTimes->{{3.866546469986479*^9, 3.866546485256516*^9}, 
   3.866547128929674*^9, 3.873432384050846*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["127 bits security ", "Subsection",
 CellChangeTimes->{{3.866539105262838*^9, 3.866539185751379*^9}, {
  3.866542372445839*^9, 3.866542374006098*^9}, {3.866547085257069*^9, 
  3.866547093968883*^9}, {3.866547428188251*^9, 3.8665474292117567`*^9}, {
  3.873432991015148*^9, 3.873432991306952*^9}}],

Cell[CellGroupData[{

Cell["degree 3 extensions", "Subsubsection",
 CellChangeTimes->{{3.8665463042264023`*^9, 3.86654630885823*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "128"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsCode", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", 
   RowBox[{"{", 
    RowBox[{"100", ",", "100", ",", "100"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"capLevel", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"numHashes", ",", " ", "proofBytes"}], "}"}], "=", 
  RowBox[{"prover", "[", 
   RowBox[{"numPolys", ",", " ", "bitsCode", ",", " ", 
    RowBox[{"{", 
     RowBox[{"bitsSec", ",", "bitsRate", ",", "arities", ",", "capLevel"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<BitsBaseField\>\"", "\[Rule]", "64"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<ExtensionDegree\>\"", "\[Rule]", "3"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Hiding\>\"", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.866542081880774*^9, 3.866542086577697*^9}, {
  3.866542164072214*^9, 3.866542284407675*^9}, {3.866542337667379*^9, 
  3.866542352907817*^9}, {3.866542453058783*^9, 3.8665425950492687`*^9}, {
  3.866542653028118*^9, 3.866542653357418*^9}, {3.866543727909346*^9, 
  3.866543760565065*^9}, {3.8665442582169943`*^9, 3.8665442821528673`*^9}, {
  3.866544418602263*^9, 3.866544438520904*^9}, {3.866545280283021*^9, 
  3.86654528043489*^9}, {3.8665471027175903`*^9, 3.866547104002684*^9}, {
  3.866547196399304*^9, 3.866547210028801*^9}, {3.866547432752075*^9, 
  3.866547433551713*^9}, {3.8734327583309317`*^9, 3.8734327721444693`*^9}, {
  3.873432920040236*^9, 3.873432925233391*^9}, {3.873433015754722*^9, 
  3.873433025495028*^9}, {3.8734331136999407`*^9, 3.873433113817162*^9}, {
  3.873434036007917*^9, 3.873434036364208*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox["\<\"Code bits: \\!\\(12\\)\"\>",
      StringForm["Code bits: ``", 12],
      Editable->False]},
    {
     InterpretationBox["\<\"Sampling domain bits: \\!\\(15\\)\"\>",
      StringForm["Sampling domain bits: ``", 15],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of polynomials for batch open: \
\\!\\(300\\)\"\>",
      StringForm["Number of polynomials for batch open: ``", 300],
      Editable->False]},
    {
     InterpretationBox["\<\"Johnson proximity m: \\!\\(8\\)\"\>",
      StringForm["Johnson proximity m: ``", 8],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error commit phase: \
2^\\!\\(-128.66134791845417`\\)\"\>",
      StringForm["Soundness error commit phase: 2^``", -128.66134791845417`],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of query rounds: \\!\\(91\\)\"\>",
      StringForm["Number of query rounds: ``", 91],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error query phase: \
2^\\!\\(-128.54088144621912`\\)\"\>",
      StringForm["Soundness error query phase: 2^``", -128.54088144621912`],
      Editable->False]},
    {
     InterpretationBox["\<\"revealed poly size: \\!\\(32\\) FE\"\>",
      StringForm["revealed poly size: `` FE", 32],
      Editable->False]},
    {
     InterpretationBox["\<\"per round: \\!\\(72\\) path elems + \\!\\(372\\) \
values = \\!\\(444\\) FE\"\>",
      StringForm["per round: `` path elems + `` values = `` FE", 72, 372, 444],
      Editable->False]},
    {
     InterpretationBox["\<\"\\!\\(91\\) rounds: \\!\\(40404\\) FE\"\>",
      StringForm["`` rounds: `` FE", 91, 40404],
      Editable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.866542196547394*^9, {3.86654223257095*^9, 3.866542284732374*^9}, {
   3.866542338678318*^9, 3.866542353117196*^9}, {3.8665424356466703`*^9, 
   3.866542527575019*^9}, {3.8665425726357393`*^9, 3.866542595294553*^9}, 
   3.8665426825107327`*^9, {3.866543739713994*^9, 3.866543763471264*^9}, {
   3.866544259666651*^9, 3.866544282418334*^9}, {3.86654442071981*^9, 
   3.866544438934843*^9}, 3.866545287930093*^9, 3.866547106431048*^9, {
   3.8665471970936728`*^9, 3.866547210391577*^9}, 3.8665472861898737`*^9, 
   3.866547435033017*^9, 3.866547609547242*^9, 3.870950144548717*^9, {
   3.873432741621923*^9, 3.873432772613624*^9}, {3.8734329210089006`*^9, 
   3.873432925735627*^9}, {3.873433016594254*^9, 3.873433026775639*^9}, 
   3.8734331142021646`*^9, 3.873434037161766*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"26112", ",", "326048"}], "}"}]], "Output",
 CellChangeTimes->{
  3.86654183404768*^9, 3.866542196543552*^9, {3.866542232569265*^9, 
   3.8665422847307463`*^9}, {3.8665423386765823`*^9, 3.866542353115292*^9}, {
   3.866542435644663*^9, 3.8665425275786858`*^9}, {3.86654257263724*^9, 
   3.866542595299255*^9}, 3.866542682517784*^9, {3.8665437397185926`*^9, 
   3.866543763475625*^9}, {3.866544259673326*^9, 3.866544282422586*^9}, {
   3.8665444207249413`*^9, 3.866544438939168*^9}, 3.866545287936496*^9, 
   3.8665471064359503`*^9, {3.866547197099378*^9, 3.866547210396707*^9}, 
   3.8665472861949577`*^9, 3.866547435037217*^9, 3.8665476095516443`*^9, 
   3.870950144550324*^9, {3.873432741636883*^9, 3.873432772624868*^9}, {
   3.8734329210198927`*^9, 3.87343292574747*^9}, {3.8734330166397877`*^9, 
   3.8734330268075743`*^9}, 3.8734331142127447`*^9, 3.873434037216776*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "128"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsCode", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", 
   RowBox[{"{", 
    RowBox[{"100", ",", "100", ",", "100"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"capLevel", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"numHashes", ",", " ", "proofBytes"}], "}"}], "=", 
  RowBox[{"prover", "[", 
   RowBox[{"numPolys", ",", " ", "bitsCode", ",", " ", 
    RowBox[{"{", 
     RowBox[{"bitsSec", ",", "bitsRate", ",", "arities", ",", "capLevel"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<BitsBaseField\>\"", "\[Rule]", "64"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<ExtensionDegree\>\"", "\[Rule]", "3"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Hiding\>\"", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.866542081880774*^9, 3.866542086577697*^9}, {
  3.866542164072214*^9, 3.866542284407675*^9}, {3.866542337667379*^9, 
  3.866542352907817*^9}, {3.866542453058783*^9, 3.8665425950492687`*^9}, {
  3.866542653028118*^9, 3.866542653357418*^9}, {3.866543727909346*^9, 
  3.866543760565065*^9}, {3.8665442582169943`*^9, 3.8665442821528673`*^9}, {
  3.866544418602263*^9, 3.866544438520904*^9}, {3.866545280283021*^9, 
  3.86654528043489*^9}, {3.8665471027175903`*^9, 3.866547104002684*^9}, {
  3.866547196399304*^9, 3.866547210028801*^9}, {3.866547432752075*^9, 
  3.866547433551713*^9}, {3.8734327583309317`*^9, 3.8734327721444693`*^9}, {
  3.873432920040236*^9, 3.873432925233391*^9}, {3.873433015754722*^9, 
  3.873433025495028*^9}, {3.873434054778067*^9, 3.873434055694366*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox["\<\"Code bits: \\!\\(12\\)\"\>",
      StringForm["Code bits: ``", 12],
      Editable->False]},
    {
     InterpretationBox["\<\"Sampling domain bits: \\!\\(16\\)\"\>",
      StringForm["Sampling domain bits: ``", 16],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of polynomials for batch open: \
\\!\\(300\\)\"\>",
      StringForm["Number of polynomials for batch open: ``", 300],
      Editable->False]},
    {
     InterpretationBox["\<\"Johnson proximity m: \\!\\(5\\)\"\>",
      StringForm["Johnson proximity m: ``", 5],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error commit phase: \
2^\\!\\(-129.5575664767342`\\)\"\>",
      StringForm["Soundness error commit phase: 2^``", -129.5575664767342],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of query rounds: \\!\\(69\\)\"\>",
      StringForm["Number of query rounds: ``", 69],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error query phase: \
2^\\!\\(-128.51225686125449`\\)\"\>",
      StringForm["Soundness error query phase: 2^``", -128.51225686125449`],
      Editable->False]},
    {
     InterpretationBox["\<\"revealed poly size: \\!\\(32\\) FE\"\>",
      StringForm["revealed poly size: `` FE", 32],
      Editable->False]},
    {
     InterpretationBox["\<\"per round: \\!\\(80\\) path elems + \\!\\(372\\) \
values = \\!\\(452\\) FE\"\>",
      StringForm["per round: `` path elems + `` values = `` FE", 80, 372, 452],
      Editable->False]},
    {
     InterpretationBox["\<\"\\!\\(69\\) rounds: \\!\\(31188\\) FE\"\>",
      StringForm["`` rounds: `` FE", 69, 31188],
      Editable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.866542196547394*^9, {3.86654223257095*^9, 3.866542284732374*^9}, {
   3.866542338678318*^9, 3.866542353117196*^9}, {3.8665424356466703`*^9, 
   3.866542527575019*^9}, {3.8665425726357393`*^9, 3.866542595294553*^9}, 
   3.8665426825107327`*^9, {3.866543739713994*^9, 3.866543763471264*^9}, {
   3.866544259666651*^9, 3.866544282418334*^9}, {3.86654442071981*^9, 
   3.866544438934843*^9}, 3.866545287930093*^9, 3.866547106431048*^9, {
   3.8665471970936728`*^9, 3.866547210391577*^9}, 3.8665472861898737`*^9, 
   3.866547435033017*^9, 3.866547609547242*^9, 3.870950144548717*^9, {
   3.873432741621923*^9, 3.873432772613624*^9}, {3.8734329210089006`*^9, 
   3.873432925735627*^9}, {3.873433016594254*^9, 3.873433026775639*^9}, 
   3.873434056468896*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"52224", ",", "252320"}], "}"}]], "Output",
 CellChangeTimes->{
  3.86654183404768*^9, 3.866542196543552*^9, {3.866542232569265*^9, 
   3.8665422847307463`*^9}, {3.8665423386765823`*^9, 3.866542353115292*^9}, {
   3.866542435644663*^9, 3.8665425275786858`*^9}, {3.86654257263724*^9, 
   3.866542595299255*^9}, 3.866542682517784*^9, {3.8665437397185926`*^9, 
   3.866543763475625*^9}, {3.866544259673326*^9, 3.866544282422586*^9}, {
   3.8665444207249413`*^9, 3.866544438939168*^9}, 3.866545287936496*^9, 
   3.8665471064359503`*^9, {3.866547197099378*^9, 3.866547210396707*^9}, 
   3.8665472861949577`*^9, 3.866547435037217*^9, 3.8665476095516443`*^9, 
   3.870950144550324*^9, {3.873432741636883*^9, 3.873432772624868*^9}, {
   3.8734329210198927`*^9, 3.87343292574747*^9}, {3.8734330166397877`*^9, 
   3.8734330268075743`*^9}, 3.873434056510002*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "128"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsCode", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", 
   RowBox[{"{", 
    RowBox[{"100", ",", "100", ",", "100"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"capLevel", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"numHashes", ",", " ", "proofBytes"}], "}"}], "=", 
  RowBox[{"prover", "[", 
   RowBox[{"numPolys", ",", " ", "bitsCode", ",", " ", 
    RowBox[{"{", 
     RowBox[{"bitsSec", ",", "bitsRate", ",", "arities", ",", "capLevel"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<BitsBaseField\>\"", "\[Rule]", "64"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<ExtensionDegree\>\"", "\[Rule]", "3"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Hiding\>\"", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.866542081880774*^9, 3.866542086577697*^9}, {
  3.866542164072214*^9, 3.866542284407675*^9}, {3.866542337667379*^9, 
  3.866542352907817*^9}, {3.866542453058783*^9, 3.8665425950492687`*^9}, {
  3.866542653028118*^9, 3.866542653357418*^9}, {3.866543727909346*^9, 
  3.866543760565065*^9}, {3.8665442582169943`*^9, 3.8665442821528673`*^9}, {
  3.866544418602263*^9, 3.866544438520904*^9}, {3.866545280283021*^9, 
  3.86654528043489*^9}, {3.8665471027175903`*^9, 3.866547104002684*^9}, {
  3.866547196399304*^9, 3.866547210028801*^9}, {3.866547432752075*^9, 
  3.866547433551713*^9}, {3.8734327583309317`*^9, 3.8734327721444693`*^9}, {
  3.873432920040236*^9, 3.873432925233391*^9}, {3.873433015754722*^9, 
  3.8734330427515697`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox["\<\"Code bits: \\!\\(12\\)\"\>",
      StringForm["Code bits: ``", 12],
      Editable->False]},
    {
     InterpretationBox["\<\"Sampling domain bits: \\!\\(17\\)\"\>",
      StringForm["Sampling domain bits: ``", 17],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of polynomials for batch open: \
\\!\\(300\\)\"\>",
      StringForm["Number of polynomials for batch open: ``", 300],
      Editable->False]},
    {
     InterpretationBox["\<\"Johnson proximity m: \\!\\(4\\)\"\>",
      StringForm["Johnson proximity m: ``", 4],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error commit phase: \
2^\\!\\(-128.08411279710174`\\)\"\>",
      StringForm["Soundness error commit phase: 2^``", -128.08411279710174`],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of query rounds: \\!\\(55\\)\"\>",
      StringForm["Number of query rounds: ``", 55],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error query phase: \
2^\\!\\(-128.15412492067284`\\)\"\>",
      StringForm["Soundness error query phase: 2^``", -128.15412492067284`],
      Editable->False]},
    {
     InterpretationBox["\<\"revealed poly size: \\!\\(32\\) FE\"\>",
      StringForm["revealed poly size: `` FE", 32],
      Editable->False]},
    {
     InterpretationBox["\<\"per round: \\!\\(88\\) path elems + \\!\\(372\\) \
values = \\!\\(460\\) FE\"\>",
      StringForm["per round: `` path elems + `` values = `` FE", 88, 372, 460],
      Editable->False]},
    {
     InterpretationBox["\<\"\\!\\(55\\) rounds: \\!\\(25300\\) FE\"\>",
      StringForm["`` rounds: `` FE", 55, 25300],
      Editable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.866542196547394*^9, {3.86654223257095*^9, 3.866542284732374*^9}, {
   3.866542338678318*^9, 3.866542353117196*^9}, {3.8665424356466703`*^9, 
   3.866542527575019*^9}, {3.8665425726357393`*^9, 3.866542595294553*^9}, 
   3.8665426825107327`*^9, {3.866543739713994*^9, 3.866543763471264*^9}, {
   3.866544259666651*^9, 3.866544282418334*^9}, {3.86654442071981*^9, 
   3.866544438934843*^9}, 3.866545287930093*^9, 3.866547106431048*^9, {
   3.8665471970936728`*^9, 3.866547210391577*^9}, 3.8665472861898737`*^9, 
   3.866547435033017*^9, 3.866547609547242*^9, 3.870950144548717*^9, {
   3.873432741621923*^9, 3.873432772613624*^9}, {3.8734329210089006`*^9, 
   3.873432925735627*^9}, 3.873433016594254*^9, 3.873433047622652*^9, 
   3.873433248953869*^9, 3.873434062089275*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"104448", ",", "205216"}], "}"}]], "Output",
 CellChangeTimes->{
  3.86654183404768*^9, 3.866542196543552*^9, {3.866542232569265*^9, 
   3.8665422847307463`*^9}, {3.8665423386765823`*^9, 3.866542353115292*^9}, {
   3.866542435644663*^9, 3.8665425275786858`*^9}, {3.86654257263724*^9, 
   3.866542595299255*^9}, 3.866542682517784*^9, {3.8665437397185926`*^9, 
   3.866543763475625*^9}, {3.866544259673326*^9, 3.866544282422586*^9}, {
   3.8665444207249413`*^9, 3.866544438939168*^9}, 3.866545287936496*^9, 
   3.8665471064359503`*^9, {3.866547197099378*^9, 3.866547210396707*^9}, 
   3.8665472861949577`*^9, 3.866547435037217*^9, 3.8665476095516443`*^9, 
   3.870950144550324*^9, {3.873432741636883*^9, 3.873432772624868*^9}, {
   3.8734329210198927`*^9, 3.87343292574747*^9}, 3.8734330166397877`*^9, 
   3.873433047643879*^9, 3.873433248965991*^9, 3.873434062107437*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "128"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsCode", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", 
   RowBox[{"{", 
    RowBox[{"100", ",", "100", ",", "100"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"capLevel", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"numHashes", ",", " ", "proofBytes"}], "}"}], "=", 
  RowBox[{"prover", "[", 
   RowBox[{"numPolys", ",", " ", "bitsCode", ",", " ", 
    RowBox[{"{", 
     RowBox[{"bitsSec", ",", "bitsRate", ",", "arities", ",", "capLevel"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<BitsBaseField\>\"", "\[Rule]", "64"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<ExtensionDegree\>\"", "\[Rule]", "3"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Hiding\>\"", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.866542081880774*^9, 3.866542086577697*^9}, {
  3.866542164072214*^9, 3.866542284407675*^9}, {3.866542337667379*^9, 
  3.866542352907817*^9}, {3.866542453058783*^9, 3.8665425950492687`*^9}, {
  3.866542653028118*^9, 3.866542653357418*^9}, {3.866543727909346*^9, 
  3.866543760565065*^9}, {3.8665442582169943`*^9, 3.8665442821528673`*^9}, {
  3.866544418602263*^9, 3.866544438520904*^9}, {3.866545280283021*^9, 
  3.86654528043489*^9}, {3.8665471027175903`*^9, 3.866547104002684*^9}, {
  3.866547196399304*^9, 3.866547210028801*^9}, {3.866547432752075*^9, 
  3.866547433551713*^9}, {3.8734327583309317`*^9, 3.8734327721444693`*^9}, {
  3.873432920040236*^9, 3.873432925233391*^9}, {3.873433015754722*^9, 
  3.8734330427515697`*^9}, {3.873433311453938*^9, 3.873433311607769*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox["\<\"Code bits: \\!\\(12\\)\"\>",
      StringForm["Code bits: ``", 12],
      Editable->False]},
    {
     InterpretationBox["\<\"Sampling domain bits: \\!\\(18\\)\"\>",
      StringForm["Sampling domain bits: ``", 18],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of polynomials for batch open: \
\\!\\(300\\)\"\>",
      StringForm["Number of polynomials for batch open: ``", 300],
      Editable->False]},
    {
     InterpretationBox["\<\"Johnson proximity m: \\!\\(-\[Infinity]\\)\"\>",
      StringForm["Johnson proximity m: ``", 
       DirectedInfinity[-1]],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error commit phase: 2^\\!\\(\[Infinity]\
\\)\"\>",
      StringForm["Soundness error commit phase: 2^``", 
       DirectedInfinity[1]],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of query rounds: \\!\\(43\\)\"\>",
      StringForm["Number of query rounds: ``", 43],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error query phase: \
2^\\!\\(-129.`\\)\"\>",
      StringForm["Soundness error query phase: 2^``", -129.],
      Editable->False]},
    {
     InterpretationBox["\<\"revealed poly size: \\!\\(32\\) FE\"\>",
      StringForm["revealed poly size: `` FE", 32],
      Editable->False]},
    {
     InterpretationBox["\<\"per round: \\!\\(96\\) path elems + \\!\\(372\\) \
values = \\!\\(468\\) FE\"\>",
      StringForm["per round: `` path elems + `` values = `` FE", 96, 372, 468],
      Editable->False]},
    {
     InterpretationBox["\<\"\\!\\(43\\) rounds: \\!\\(20124\\) FE\"\>",
      StringForm["`` rounds: `` FE", 43, 20124],
      Editable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.866542196547394*^9, {3.86654223257095*^9, 3.866542284732374*^9}, {
   3.866542338678318*^9, 3.866542353117196*^9}, {3.8665424356466703`*^9, 
   3.866542527575019*^9}, {3.8665425726357393`*^9, 3.866542595294553*^9}, 
   3.8665426825107327`*^9, {3.866543739713994*^9, 3.866543763471264*^9}, {
   3.866544259666651*^9, 3.866544282418334*^9}, {3.86654442071981*^9, 
   3.866544438934843*^9}, 3.866545287930093*^9, 3.866547106431048*^9, {
   3.8665471970936728`*^9, 3.866547210391577*^9}, 3.8665472861898737`*^9, 
   3.866547435033017*^9, 3.866547609547242*^9, 3.870950144548717*^9, {
   3.873432741621923*^9, 3.873432772613624*^9}, {3.8734329210089006`*^9, 
   3.873432925735627*^9}, 3.873433016594254*^9, 3.873433047622652*^9, 
   3.873433248953869*^9, 3.8734333119274063`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"208896", ",", "163808"}], "}"}]], "Output",
 CellChangeTimes->{
  3.86654183404768*^9, 3.866542196543552*^9, {3.866542232569265*^9, 
   3.8665422847307463`*^9}, {3.8665423386765823`*^9, 3.866542353115292*^9}, {
   3.866542435644663*^9, 3.8665425275786858`*^9}, {3.86654257263724*^9, 
   3.866542595299255*^9}, 3.866542682517784*^9, {3.8665437397185926`*^9, 
   3.866543763475625*^9}, {3.866544259673326*^9, 3.866544282422586*^9}, {
   3.8665444207249413`*^9, 3.866544438939168*^9}, 3.866545287936496*^9, 
   3.8665471064359503`*^9, {3.866547197099378*^9, 3.866547210396707*^9}, 
   3.8665472861949577`*^9, 3.866547435037217*^9, 3.8665476095516443`*^9, 
   3.870950144550324*^9, {3.873432741636883*^9, 3.873432772624868*^9}, {
   3.8734329210198927`*^9, 3.87343292574747*^9}, 3.8734330166397877`*^9, 
   3.873433047643879*^9, 3.873433248965991*^9, 3.873433311939411*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
(similar to) ethSTARK parameters\
\>", "Section",
 CellChangeTimes->{{3.866539105262838*^9, 3.866539185751379*^9}, {
  3.866542372445839*^9, 3.866542374006098*^9}, {3.870951122750996*^9, 
  3.8709511248695393`*^9}, {3.870951411807548*^9, 3.870951411962055*^9}, {
  3.870952221926568*^9, 3.8709522248544283`*^9}, {3.870952548842773*^9, 
  3.870952551251109*^9}, {3.870952664949113*^9, 3.870952685947901*^9}}],

Cell[CellGroupData[{

Cell["80 bit security", "Subsubsection",
 CellChangeTimes->{{3.866546288401956*^9, 3.866546291697816*^9}, {
  3.8709525248756332`*^9, 3.870952525865576*^9}, {3.870952557292691*^9, 
  3.870952560139166*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "80"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsCode", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", 
   RowBox[{"{", 
    RowBox[{"100", ",", "100"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"capLevel", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"numHashes", ",", " ", "proofBytes"}], "}"}], "=", 
  RowBox[{"prover", "[", 
   RowBox[{"numPolys", ",", " ", "bitsCode", ",", " ", 
    RowBox[{"{", 
     RowBox[{"bitsSec", ",", "bitsRate", ",", "arities", ",", "capLevel"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<BitsBaseField\>\"", "\[Rule]", "64"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<ExtensionDegree\>\"", "\[Rule]", "3"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Hiding\>\"", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.866542081880774*^9, 3.866542086577697*^9}, {
   3.866542164072214*^9, 3.866542284407675*^9}, {3.866542337667379*^9, 
   3.866542352907817*^9}, {3.866542453058783*^9, 3.8665425950492687`*^9}, {
   3.866542789213962*^9, 3.866542844277314*^9}, {3.866542881126689*^9, 
   3.866542884117344*^9}, {3.866542960702634*^9, 3.866542963429759*^9}, {
   3.866543038063501*^9, 3.866543038253665*^9}, {3.866543405458261*^9, 
   3.866543448330263*^9}, {3.86654350391509*^9, 3.866543647867432*^9}, {
   3.866543811277626*^9, 3.866543833101308*^9}, {3.8665438922622643`*^9, 
   3.866543897661086*^9}, {3.8665439552715282`*^9, 3.866543955461927*^9}, {
   3.8665461690691633`*^9, 3.866546169244691*^9}, {3.8709511372005444`*^9, 
   3.870951220789549*^9}, {3.870951415587998*^9, 3.870951456138586*^9}, {
   3.8709514988558292`*^9, 3.870951540189941*^9}, {3.870952259340146*^9, 
   3.870952283658084*^9}, {3.870952416093701*^9, 3.870952432521935*^9}, 
   3.870952466288468*^9, {3.870952519786005*^9, 3.870952521462433*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox["\<\"Code bits: \\!\\(20\\)\"\>",
      StringForm["Code bits: ``", 20],
      Editable->False]},
    {
     InterpretationBox["\<\"Sampling domain bits: \\!\\(22\\)\"\>",
      StringForm["Sampling domain bits: ``", 22],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of polynomials for batch open: \
\\!\\(200\\)\"\>",
      StringForm["Number of polynomials for batch open: ``", 200],
      Editable->False]},
    {
     InterpretationBox["\<\"Johnson proximity m: \\!\\(322\\)\"\>",
      StringForm["Johnson proximity m: ``", 322],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error commit phase: \
2^\\!\\(-80.02766761160335`\\)\"\>",
      StringForm["Soundness error commit phase: 2^``", -80.02766761160335],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of query rounds: \\!\\(81\\)\"\>",
      StringForm["Number of query rounds: ``", 81],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error query phase: \
2^\\!\\(-80.81868375212404`\\)\"\>",
      StringForm["Soundness error query phase: 2^``", -80.81868375212404],
      Editable->False]},
    {
     InterpretationBox["\<\"revealed poly size: \\!\\(8192\\) FE\"\>",
      StringForm["revealed poly size: `` FE", 8192],
      Editable->False]},
    {
     InterpretationBox["\<\"per round: \\!\\(128\\) path elems + \\!\\(272\\) \
values = \\!\\(400\\) FE\"\>",
      StringForm[
      "per round: `` path elems + `` values = `` FE", 128, 272, 400],
      Editable->False]},
    {
     InterpretationBox["\<\"\\!\\(81\\) rounds: \\!\\(32400\\) FE\"\>",
      StringForm["`` rounds: `` FE", 81, 32400],
      Editable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.8665461708931227`*^9, {3.870951143774881*^9, 3.870951178403344*^9}, {
   3.870951212520018*^9, 3.870951221170415*^9}, {3.870951417555764*^9, 
   3.870951457271319*^9}, {3.870951500756414*^9, 3.870951540653863*^9}, 
   3.870952286548255*^9, {3.870952418339923*^9, 3.870952433156331*^9}, 
   3.870952467616905*^9, 3.870952533333589*^9, 3.873434678004799*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3342336", ",", "326784"}], "}"}]], "Output",
 CellChangeTimes->{
  3.86654617089966*^9, {3.870951143778926*^9, 3.870951178416106*^9}, {
   3.87095121253089*^9, 3.870951221181033*^9}, {3.8709514175654993`*^9, 
   3.870951457329879*^9}, {3.87095150077664*^9, 3.8709515406640463`*^9}, 
   3.8709522865599337`*^9, {3.870952418350387*^9, 3.870952433166964*^9}, 
   3.8709524676643963`*^9, 3.8709525333455267`*^9, 3.873434678016287*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["100 bit security", "Subsubsection",
 CellChangeTimes->{{3.866546288401956*^9, 3.866546291697816*^9}, {
  3.8709525248756332`*^9, 3.870952525865576*^9}, {3.870952557292691*^9, 
  3.87095258115596*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bitsSec", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsCode", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitsRate", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arities", " ", "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPolys", "=", 
   RowBox[{"{", 
    RowBox[{"100", ",", "100"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"capLevel", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"numHashes", ",", " ", "proofBytes"}], "}"}], "=", 
  RowBox[{"prover", "[", 
   RowBox[{"numPolys", ",", " ", "bitsCode", ",", " ", 
    RowBox[{"{", 
     RowBox[{"bitsSec", ",", "bitsRate", ",", "arities", ",", "capLevel"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<BitsBaseField\>\"", "\[Rule]", "64"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<ExtensionDegree\>\"", "\[Rule]", "3"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Hiding\>\"", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.866542081880774*^9, 3.866542086577697*^9}, {
   3.866542164072214*^9, 3.866542284407675*^9}, {3.866542337667379*^9, 
   3.866542352907817*^9}, {3.866542453058783*^9, 3.8665425950492687`*^9}, {
   3.866542789213962*^9, 3.866542844277314*^9}, {3.866542881126689*^9, 
   3.866542884117344*^9}, {3.866542960702634*^9, 3.866542963429759*^9}, {
   3.866543038063501*^9, 3.866543038253665*^9}, {3.866543405458261*^9, 
   3.866543448330263*^9}, {3.86654350391509*^9, 3.866543647867432*^9}, {
   3.866543811277626*^9, 3.866543833101308*^9}, {3.8665438922622643`*^9, 
   3.866543897661086*^9}, {3.8665439552715282`*^9, 3.866543955461927*^9}, {
   3.8665461690691633`*^9, 3.866546169244691*^9}, {3.8709511372005444`*^9, 
   3.870951220789549*^9}, {3.870951415587998*^9, 3.870951456138586*^9}, {
   3.8709514988558292`*^9, 3.870951540189941*^9}, {3.870952259340146*^9, 
   3.870952283658084*^9}, {3.870952416093701*^9, 3.870952432521935*^9}, 
   3.870952466288468*^9, {3.870952519786005*^9, 3.870952521462433*^9}, {
   3.870952589415979*^9, 3.870952589711038*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox["\<\"Code bits: \\!\\(20\\)\"\>",
      StringForm["Code bits: ``", 20],
      Editable->False]},
    {
     InterpretationBox["\<\"Sampling domain bits: \\!\\(22\\)\"\>",
      StringForm["Sampling domain bits: ``", 22],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of polynomials for batch open: \
\\!\\(200\\)\"\>",
      StringForm["Number of polynomials for batch open: ``", 200],
      Editable->False]},
    {
     InterpretationBox["\<\"Johnson proximity m: \\!\\(44\\)\"\>",
      StringForm["Johnson proximity m: ``", 44],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error commit phase: \
2^\\!\\(-100.02962104701288`\\)\"\>",
      StringForm["Soundness error commit phase: 2^``", -100.02962104701288`],
      Editable->False]},
    {
     InterpretationBox["\<\"Number of query rounds: \\!\\(102\\)\"\>",
      StringForm["Number of query rounds: ``", 102],
      Editable->False]},
    {
     InterpretationBox["\<\"Soundness error query phase: \
2^\\!\\(-100.33721514243173`\\)\"\>",
      StringForm["Soundness error query phase: 2^``", -100.33721514243173`],
      Editable->False]},
    {
     InterpretationBox["\<\"revealed poly size: \\!\\(8192\\) FE\"\>",
      StringForm["revealed poly size: `` FE", 8192],
      Editable->False]},
    {
     InterpretationBox["\<\"per round: \\!\\(128\\) path elems + \\!\\(272\\) \
values = \\!\\(400\\) FE\"\>",
      StringForm[
      "per round: `` path elems + `` values = `` FE", 128, 272, 400],
      Editable->False]},
    {
     InterpretationBox["\<\"\\!\\(102\\) rounds: \\!\\(40800\\) FE\"\>",
      StringForm["`` rounds: `` FE", 102, 40800],
      Editable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.8665461708931227`*^9, {3.870951143774881*^9, 3.870951178403344*^9}, {
   3.870951212520018*^9, 3.870951221170415*^9}, {3.870951417555764*^9, 
   3.870951457271319*^9}, {3.870951500756414*^9, 3.870951540653863*^9}, 
   3.870952286548255*^9, {3.870952418339923*^9, 3.870952433156331*^9}, 
   3.870952467616905*^9, 3.870952533333589*^9, 3.870952591147051*^9, 
   3.873434683925838*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3342336", ",", "393984"}], "}"}]], "Output",
 CellChangeTimes->{
  3.86654617089966*^9, {3.870951143778926*^9, 3.870951178416106*^9}, {
   3.87095121253089*^9, 3.870951221181033*^9}, {3.8709514175654993`*^9, 
   3.870951457329879*^9}, {3.87095150077664*^9, 3.8709515406640463`*^9}, 
   3.8709522865599337`*^9, {3.870952418350387*^9, 3.870952433166964*^9}, 
   3.8709524676643963`*^9, 3.8709525333455267`*^9, 3.870952591155347*^9, 
   3.873434683959175*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{960, 1028},
WindowMargins->{{169, Automatic}, {Automatic, -4}},
FrontEndVersion->"9.0 for Linux x86 (64-bit) (February 7, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 89, 1, 80, "Section"],
Cell[CellGroupData[{
Cell[693, 27, 113, 1, 44, "Subsection"],
Cell[809, 30, 2532, 66, 280, "Code"],
Cell[CellGroupData[{
Cell[3366, 100, 1460, 36, 253, "Input"],
Cell[4829, 138, 134155, 2210, 235, "Output"]
}, Open  ]],
Cell[138999, 2351, 1521, 39, 185, "Code"],
Cell[CellGroupData[{
Cell[140545, 2394, 180, 3, 32, "Input"],
Cell[140728, 2399, 182, 4, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[140959, 2409, 105, 1, 44, "Subsection"],
Cell[141067, 2412, 4525, 92, 527, "Code"],
Cell[CellGroupData[{
Cell[145617, 2508, 752, 20, 121, "Input"],
Cell[146372, 2530, 192, 3, 32, "Output"],
Cell[146567, 2535, 310, 7, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[146926, 2548, 126, 1, 36, "Subsection"],
Cell[147055, 2551, 6680, 140, 893, "Code"],
Cell[CellGroupData[{
Cell[153760, 2695, 2848, 61, 231, "Input"],
Cell[156611, 2758, 871, 13, 32, "Output"],
Cell[157485, 2773, 985, 17, 32, "Output"],
Cell[158473, 2792, 870, 13, 32, "Output"],
Cell[159346, 2807, 985, 17, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160368, 2829, 2869, 61, 231, "Input"],
Cell[163240, 2892, 893, 13, 32, "Output"],
Cell[164136, 2907, 1010, 17, 32, "Output"],
Cell[165149, 2926, 894, 13, 32, "Output"],
Cell[166046, 2941, 1012, 17, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167095, 2963, 2921, 62, 231, "Input"],
Cell[170019, 3027, 872, 13, 32, "Output"],
Cell[170894, 3042, 990, 17, 32, "Output"],
Cell[171887, 3061, 872, 13, 32, "Output"],
Cell[172762, 3076, 988, 17, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173787, 3098, 2872, 61, 231, "Input"],
Cell[176662, 3161, 845, 12, 32, "Output"],
Cell[177510, 3175, 962, 16, 32, "Output"],
Cell[178475, 3193, 846, 12, 32, "Output"],
Cell[179324, 3207, 966, 16, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180327, 3228, 2385, 55, 231, "Input"],
Cell[182715, 3285, 410, 6, 32, "Output"],
Cell[183128, 3293, 528, 10, 32, "Output"],
Cell[183659, 3305, 410, 6, 32, "Output"],
Cell[184072, 3313, 528, 10, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[184637, 3328, 1395, 36, 209, "Input"],
Cell[186035, 3366, 220, 4, 32, "Output"],
Cell[186258, 3372, 338, 8, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[186645, 3386, 201, 4, 44, "Subsection"],
Cell[186849, 3392, 38093, 692, 2370, "Code"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[224991, 4090, 93, 1, 80, "Section"],
Cell[CellGroupData[{
Cell[225109, 4095, 300, 4, 44, "Subsection"],
Cell[CellGroupData[{
Cell[225434, 4103, 110, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[225569, 4108, 1548, 39, 275, "Input"],
Cell[227120, 4149, 2261, 56, 165, "Print"],
Cell[229384, 4207, 444, 8, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[229865, 4220, 1920, 42, 275, "Input"],
Cell[231788, 4264, 2604, 61, 165, "Print"],
Cell[234395, 4327, 803, 13, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[235235, 4345, 2071, 44, 275, "Input"],
Cell[237309, 4391, 2802, 63, 165, "Print"],
Cell[240114, 4456, 1013, 16, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[241176, 4478, 111, 1, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[241312, 4483, 1677, 38, 275, "Input"],
Cell[242992, 4523, 2390, 58, 165, "Print"],
Cell[245385, 4583, 591, 10, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[246013, 4598, 1918, 42, 275, "Input"],
Cell[247934, 4642, 2171, 56, 165, "Print"],
Cell[250108, 4700, 343, 7, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[250488, 4712, 1924, 42, 275, "Input"],
Cell[252415, 4756, 2052, 53, 165, "Print"],
Cell[254470, 4811, 223, 4, 32, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[254754, 4822, 104, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[254883, 4827, 114, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[255022, 4832, 2072, 44, 275, "Input"],
Cell[257097, 4878, 2203, 55, 165, "Print"],
Cell[259303, 4935, 371, 6, 32, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[259735, 4948, 204, 3, 44, "Subsection"],
Cell[CellGroupData[{
Cell[259964, 4955, 111, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[260100, 4960, 1730, 39, 275, "Input"],
Cell[261833, 5001, 2492, 59, 165, "Print"],
Cell[264328, 5062, 690, 11, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265055, 5078, 1924, 42, 275, "Input"],
Cell[266982, 5122, 2152, 55, 165, "Print"],
Cell[269137, 5179, 318, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[269492, 5190, 1925, 42, 275, "Input"],
Cell[271420, 5234, 2034, 53, 165, "Print"],
Cell[273457, 5289, 197, 4, 32, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[273715, 5300, 301, 4, 44, "Subsection"],
Cell[CellGroupData[{
Cell[274041, 5308, 111, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[274177, 5313, 2024, 43, 275, "Input"],
Cell[276204, 5358, 2708, 62, 165, "Print"],
Cell[278915, 5422, 914, 14, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279866, 5441, 1973, 42, 275, "Input"],
Cell[281842, 5485, 2681, 62, 165, "Print"],
Cell[284526, 5549, 890, 14, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[285453, 5568, 1929, 42, 275, "Input"],
Cell[287385, 5612, 2704, 62, 165, "Print"],
Cell[290092, 5676, 909, 14, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[291038, 5695, 1975, 42, 275, "Input"],
Cell[293016, 5739, 2713, 64, 165, "Print"],
Cell[295732, 5805, 909, 14, 32, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[296714, 5827, 417, 7, 80, "Section"],
Cell[CellGroupData[{
Cell[297156, 5838, 206, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[297387, 5845, 2185, 44, 275, "Input"],
Cell[299575, 5891, 2299, 57, 165, "Print"],
Cell[301877, 5950, 470, 8, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[302396, 5964, 206, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[302627, 5971, 2236, 45, 275, "Input"],
Cell[304866, 6018, 2333, 58, 165, "Print"],
Cell[307202, 6078, 496, 9, 32, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
